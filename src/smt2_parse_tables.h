/*
 * Tables for parsing the SMT-LIB 2.0 language
 */

#ifndef __SMT2_PARSE_TABLES_H
#define __SMT2_PARSE_TABLES_H

#include <stdint.h>

/*
 * States
 */
typedef enum state_s {
  c0, c1, c3, c4, c5, c6, c6a, c8, c9, c9a, c9b,
  c10, c10a, c10b, c11, c11a, c11b, c11d, c11f, c12, c12b,
  a0, a1, v0,
  s0, s1, s2, s3, s4, s5, s6, s7, s8, s10,
  t0, t1, t2, t2a, t2b, t2d, t2e, 
  t3, t3a, t3b, t3d, t3e, t4a, t4b,
  t6, t6c, t6d, t6e, t6f, t7, t7a, t7b, t8a,
  i0, i1, i2, i3, i4,
  r0,
} state_t;


/*
 * Action codes
 */
typedef enum smt2_action {
  // commands
  next_goto_c1,
  empty_command_return,
  check_sat_next_goto_r0,
  get_assertions_next_goto_r0,
  get_proof_next_goto_r0,
  get_unsat_core_next_goto_r0,
  get_assignment_next_goto_r0,
  exit_next_goto_r0,
  push_next_goto_c3,
  pop_next_goto_c3,
  get_option_next_goto_c4,
  get_info_next_goto_c4,
  set_logic_next_goto_c5,
  set_option_next_goto_c6,
  set_info_next_goto_c6,
  assert_next_push_r0_goto_t0,
  declare_sort_next_goto_c8,
  define_sort_next_goto_c9,
  declare_fun_next_goto_c10,
  define_fun_next_goto_c11,
  get_value_next_goto_c12,
  numeral_next_goto_r0,
  keyword_next_goto_r0,
  symbol_next_goto_r0,  
  keyword_next_goto_c6a,
  next_return,
  push_r0_goto_a0,
  symbol_next_goto_c3,
  symbol_next_goto_c9a,
  next_goto_c9b,
  next_push_r0_goto_s0,
  symbol_next_goto_c9b,
  symbol_next_goto_c10a,
  next_goto_c10b,
  push_c10b_goto_s0,
  symbol_next_goto_c11a,
  next_goto_c11b,
  next_push_r0_push_t0_goto_s0,
  next_goto_c11d,
  symbol_next_push_c11f_goto_s0,
  next_push_c12b_goto_t0,
  next_goto_r0,
  push_c12b_goto_t0,

  // attribute values + s-expressions
  numeral_next_return,
  decimal_next_return,
  hexadecimal_next_return,
  binary_next_return,
  string_next_return,
  symbol_next_return,
  next_goto_a1,
  push_a1_goto_v0,
  keyword_next_return,

  // sorts
  next_goto_s1,
  next_goto_s2,
  next_goto_s5,
  symbol_next_push_s10_goto_s0,
  symbol_next_goto_s3,
  numeral_next_goto_s4,
  next_goto_s6,
  symbol_next_goto_s7,
  numeral_next_goto_s8,
  next_push_s10_goto_s0,
  push_s10_goto_s0,

  // terms
  next_goto_t1,
  let_next_goto_t2,
  forall_next_goto_t3,
  exists_next_goto_t3,
  bang_next_push_t4a_goto_t0,
  next_push_r0_push_s0_goto_i0, // (as
  next_goto_t6, // ((
  next_goto_t7, // (_

  // simple function application (<symbol> <term> ... <term>)
  symbol_next_push_t8a_goto_t0,

  // (let ...
  next_goto_t2a,
  next_goto_t2b,
  symbol_next_push_t2d_goto_t0,
  next_goto_t2e,
  next_push_r0_goto_t0,

  // (exists ... and (forall ...
  next_goto_t3a,
  next_goto_t3b,
  symbol_next_push_t3d_goto_s0,
  next_goto_t3e,

  // (! <term> ...
  keyword_next_goto_t4b,

  // (( ...
  next_push_t6c_push_s0_goto_i0,
  next_goto_t6d,
  next_push_t8a_goto_t0,
  symbol_next_goto_t6e,
  numeral_next_goto_t6f,

  // (_ ...
  symbol_next_goto_t7a,
  numeral_next_goto_t7b,
  
  // (F <term> ....
  push_t8a_goto_t0,

  // identifier
  next_goto_i1,
  next_goto_i2,
  symbol_next_goto_i3,
  numeral_next_goto_i4,

  // errors
  error_lp_expected,
  error_string_expected,
  error_symbol_expected,
  error_numeral_expected,
  error_keyword_expected,
  error_rp_expected,
  error_underscore_expected,
  error,
} smt2_action_t;


/*
 * Tables generated by table_builder
 * see doc/table_builder.c
 */

// Table sizes
#define NSTATES 63
#define BSIZE 165

// Default values for each state
static const uint8_t default_value[NSTATES] = {
  error_lp_expected,
  error,
  error_numeral_expected,
  error_keyword_expected,
  error_symbol_expected,
  error_keyword_expected,
  push_r0_goto_a0,
  error_symbol_expected,
  error_symbol_expected,
  error_lp_expected,
  error,
  error_symbol_expected,
  error_lp_expected,
  push_c10b_goto_s0,
  error_symbol_expected,
  error_lp_expected,
  error,
  error_symbol_expected,
  error_rp_expected,
  error_lp_expected,
  push_c12b_goto_t0,
  error,
  push_a1_goto_v0,
  error,
  error,
  error,
  error_symbol_expected,
  error_numeral_expected,
  error,
  error_underscore_expected,
  error_symbol_expected,
  error_numeral_expected,
  error,
  push_s10_goto_s0,
  error,
  error_symbol_expected,
  error_lp_expected,
  error_lp_expected,
  error_symbol_expected,
  error_rp_expected,
  error,
  error_lp_expected,
  error_lp_expected,
  error_symbol_expected,
  error_rp_expected,
  error,
  error_keyword_expected,
  push_r0_goto_a0,
  error,
  error_rp_expected,
  error_symbol_expected,
  error_numeral_expected,
  error,
  error_symbol_expected,
  error_numeral_expected,
  error,
  push_t8a_goto_t0,
  error,
  error_underscore_expected,
  error_symbol_expected,
  error_numeral_expected,
  error,
  error_rp_expected,
};

// Base values for each state
static const uint8_t base[NSTATES] = {
     0,   0,   0,   0,   0,   1,   0,   3,   4,   4,
     5,   6,   5,   6,   7,  16,  17,  11,  38,  40,
    40,  42,  42,  51,  44,  53,  54,  60,  63,  51,
    60,  66,  69,  71,  73,  74,  75,  83,  76,  84,
    86,  94,  95,  88,  96,  98,  91, 100,  88, 102,
    97, 103, 106, 100, 107, 110, 111, 114, 101, 108,
   114, 117, 118,
};

// Check table
static const uint8_t check[BSIZE] = {
     0,   6,   0,   2,   9,  12,  10,  13,   4,   3,
     5,   7,   8,  10,  11,  14,  15,  16,  16,  17,
     1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
     1,   1,   1,   1,   1,   1,   1,   1,   1,  18,
    19,  20,  21,  22,  24,  21,  21,  21,  21,  21,
    21,  23,  24,  25,  23,  23,  23,  23,  23,  23,
    23,  25,  26,  27,  28,  29,  28,  25,  30,  31,
    32,  33,  32,  34,  35,  36,  34,  34,  34,  34,
    34,  34,  35,  37,  38,  39,  40,  40,  35,  35,
    35,  35,  35,  35,  41,  42,  43,  44,  45,  45,
    46,  47,  48,  49,  48,  50,  51,  52,  53,  52,
    54,  55,  56,  55,  57,  58,  59,  60,  61,  62,
    61,  63,  57,  63,  63,  63,  63,  63,  63,  63,
    63,  63,  63,  63,  63,  63,  63,  63,  63,  63,
    63,  63,  63,  63,  63,  63,  63,  63,  63,  63,
    63,  63,  63,  63,  63,  63,  63,  63,  63,  63,
    63,  63,  63,  63,  63,
};

// Value table
static const uint8_t value[BSIZE] = {
  next_goto_c1,
  next_return,
  empty_command_return,
  numeral_next_goto_r0,
  next_goto_c9b,
  next_goto_c10b,
  next_push_r0_goto_s0,
  next_push_r0_goto_s0,
  symbol_next_goto_r0,
  keyword_next_goto_r0,
  keyword_next_goto_c6a,
  symbol_next_goto_c3,
  symbol_next_goto_c9a,
  symbol_next_goto_c9b,
  symbol_next_goto_c10a,
  symbol_next_goto_c11a,
  next_goto_c11b,
  next_goto_c11d,
  next_push_r0_push_t0_goto_s0,
  symbol_next_push_c11f_goto_s0,
  assert_next_push_r0_goto_t0,
  check_sat_next_goto_r0,
  declare_sort_next_goto_c8,
  declare_fun_next_goto_c10,
  define_sort_next_goto_c9,
  define_fun_next_goto_c11,
  exit_next_goto_r0,
  get_assertions_next_goto_r0,
  get_assignment_next_goto_r0,
  get_info_next_goto_c4,
  get_option_next_goto_c4,
  get_proof_next_goto_r0,
  get_unsat_core_next_goto_r0,
  get_value_next_goto_c12,
  pop_next_goto_c3,
  push_next_goto_c3,
  set_logic_next_goto_c5,
  set_info_next_goto_c6,
  set_option_next_goto_c6,
  next_goto_c11b,
  next_push_c12b_goto_t0,
  next_goto_r0,
  next_goto_a1,
  next_return,
  next_goto_s1,
  numeral_next_return,
  decimal_next_return,
  hexadecimal_next_return,
  binary_next_return,
  string_next_return,
  symbol_next_return,
  next_goto_a1,
  symbol_next_return,
  next_goto_s5,
  numeral_next_return,
  decimal_next_return,
  hexadecimal_next_return,
  binary_next_return,
  string_next_return,
  symbol_next_return,
  keyword_next_return,
  symbol_next_push_s10_goto_s0,
  symbol_next_goto_s3,
  numeral_next_goto_s4,
  next_return,
  next_goto_s6,
  numeral_next_goto_s4,
  next_goto_s2,
  symbol_next_goto_s7,
  numeral_next_goto_s8,
  next_push_s10_goto_s0,
  next_return,
  numeral_next_goto_s8,
  next_goto_t1,
  next_goto_t6,
  next_goto_t2a,
  numeral_next_return,
  decimal_next_return,
  hexadecimal_next_return,
  binary_next_return,
  string_next_return,
  symbol_next_return,
  symbol_next_push_t8a_goto_t0,
  next_goto_t2b,
  symbol_next_push_t2d_goto_t0,
  next_goto_t2e,
  next_goto_t2b,
  next_push_r0_goto_t0,
  next_goto_t7,
  bang_next_push_t4a_goto_t0,
  next_push_r0_push_s0_goto_i0,
  let_next_goto_t2,
  exists_next_goto_t3,
  forall_next_goto_t3,
  next_goto_t3a,
  next_goto_t3b,
  symbol_next_push_t3d_goto_s0,
  next_goto_t3e,
  next_goto_t3b,
  next_push_r0_goto_t0,
  keyword_next_goto_t4b,
  next_return,
  next_goto_t6d,
  next_push_t8a_goto_t0,
  next_push_t6c_push_s0_goto_i0,
  symbol_next_goto_t6e,
  numeral_next_goto_t6f,
  next_push_t8a_goto_t0,
  symbol_next_goto_t7a,
  numeral_next_goto_t6f,
  numeral_next_goto_t7b,
  next_return,
  next_return,
  numeral_next_goto_t7b,
  next_goto_i1,
  next_goto_i2,
  symbol_next_goto_i3,
  numeral_next_goto_i4,
  next_return,
  next_return,
  numeral_next_goto_i4,
  error,
  symbol_next_return,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
  error,
};


#endif /* __SMT2_PARSE_TABLES_H */
