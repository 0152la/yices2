(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 16))
(declare-fun v1 () (_ BitVec 9))
(declare-fun v2 () (_ BitVec 12))
(declare-fun a3 () (Array  (_ BitVec 2)  (_ BitVec 8)))
(assert (let ((e4(_ bv462 10)))
(let ((e5(_ bv6 3)))
(let ((e6 (ite (bvult ((_ sign_extend 9) e5) v2) (_ bv1 1) (_ bv0 1))))
(let ((e7 ((_ sign_extend 0) v0)))
(let ((e8 (ite (bvsle ((_ zero_extend 7) v1) v0) (_ bv1 1) (_ bv0 1))))
(let ((e9 (bvashr v0 v0)))
(let ((e10 (bvlshr ((_ sign_extend 4) v2) e9)))
(let ((e11 (bvlshr e4 ((_ sign_extend 9) e6))))
(let ((e12 (store a3 ((_ extract 9 8) e4) ((_ extract 8 1) e7))))
(let ((e13 (store e12 ((_ extract 2 1) e5) ((_ extract 9 2) e11))))
(let ((e14 (select e13 ((_ extract 5 4) e4))))
(let ((e15 (select e12 ((_ extract 4 3) e11))))
(let ((e16 (store e13 ((_ zero_extend 1) e8) ((_ sign_extend 7) e6))))
(let ((e17 (select e13 ((_ extract 2 1) e15))))
(let ((e18 (select a3 ((_ sign_extend 1) e8))))
(let ((e19 ((_ sign_extend 4) e18)))
(let ((e20 ((_ sign_extend 0) e9)))
(let ((e21 (bvor ((_ sign_extend 1) v1) e4)))
(let ((e22 (bvmul ((_ zero_extend 2) e4) e19)))
(let ((e23 (ite (= (_ bv1 1) ((_ extract 5 5) e15)) e20 ((_ sign_extend 6) e4))))
(let ((e24 ((_ sign_extend 7) e17)))
(let ((e25 (ite (bvult e11 ((_ sign_extend 2) e15)) (_ bv1 1) (_ bv0 1))))
(let ((e26 (bvsub e7 e10)))
(let ((e27 (ite (bvugt ((_ zero_extend 7) e8) e15) (_ bv1 1) (_ bv0 1))))
(let ((e28 (bvor v0 ((_ sign_extend 15) e27))))
(let ((e29 (bvneg v1)))
(let ((e30 (bvudiv ((_ zero_extend 7) e6) e14)))
(let ((e31 ((_ zero_extend 1) v2)))
(let ((e32 (bvnand e29 v1)))
(let ((e33 (bvand ((_ sign_extend 15) e25) e26)))
(let ((e34 ((_ rotate_left 0) e5)))
(let ((e35 (= e25 e6)))
(let ((e36 (bvuge e10 ((_ zero_extend 3) e31))))
(let ((e37 (bvule e11 ((_ sign_extend 2) e17))))
(let ((e38 (bvule ((_ zero_extend 13) e5) e20)))
(let ((e39 (bvsle e15 ((_ sign_extend 7) e25))))
(let ((e40 (bvule e14 ((_ sign_extend 7) e6))))
(let ((e41 (bvult e22 ((_ sign_extend 2) e4))))
(let ((e42 (bvult ((_ zero_extend 6) e11) e7)))
(let ((e43 (distinct ((_ zero_extend 8) e8) e32)))
(let ((e44 (bvsgt e7 ((_ sign_extend 6) e11))))
(let ((e45 (bvsge e25 e25)))
(let ((e46 (bvsgt ((_ zero_extend 7) e25) e15)))
(let ((e47 (bvuge ((_ sign_extend 4) e30) e22)))
(let ((e48 (bvule ((_ zero_extend 8) e30) e33)))
(let ((e49 (distinct e26 v0)))
(let ((e50 (bvslt ((_ sign_extend 15) e6) e26)))
(let ((e51 (bvsle ((_ sign_extend 6) e21) e20)))
(let ((e52 (bvule ((_ sign_extend 2) e18) e21)))
(let ((e53 (bvugt e26 ((_ sign_extend 8) e18))))
(let ((e54 (bvugt ((_ zero_extend 11) e6) e19)))
(let ((e55 (bvsge e33 ((_ sign_extend 4) e22))))
(let ((e56 (bvule ((_ sign_extend 1) e29) e4)))
(let ((e57 (bvult ((_ sign_extend 2) e11) e19)))
(let ((e58 (bvugt ((_ sign_extend 8) e30) e10)))
(let ((e59 (bvult e9 e20)))
(let ((e60 (distinct v0 e9)))
(let ((e61 (bvslt e33 ((_ zero_extend 13) e34))))
(let ((e62 (bvsgt ((_ zero_extend 4) e32) e31)))
(let ((e63 (bvsle ((_ sign_extend 4) v2) e33)))
(let ((e64 (bvuge v2 e19)))
(let ((e65 (bvugt ((_ sign_extend 15) e25) e23)))
(let ((e66 (bvule ((_ zero_extend 8) e17) v0)))
(let ((e67 (bvsle ((_ sign_extend 2) e17) e21)))
(let ((e68 (bvult e10 e7)))
(let ((e69 (bvugt v0 e20)))
(let ((e70 (= e33 ((_ sign_extend 8) e14))))
(let ((e71 (bvsgt v0 ((_ zero_extend 13) e34))))
(let ((e72 (bvult v0 ((_ zero_extend 15) e27))))
(let ((e73 (bvugt e4 ((_ zero_extend 9) e25))))
(let ((e74 (bvuge e26 ((_ zero_extend 6) e21))))
(let ((e75 (bvule v0 ((_ zero_extend 8) e18))))
(let ((e76 (bvult ((_ zero_extend 1) e17) e32)))
(let ((e77 (= ((_ zero_extend 15) e6) e10)))
(let ((e78 (= e31 ((_ zero_extend 5) e14))))
(let ((e79 (bvuge e10 ((_ zero_extend 8) e17))))
(let ((e80 (bvugt ((_ zero_extend 1) e14) e32)))
(let ((e81 (distinct ((_ zero_extend 1) e29) e11)))
(let ((e82 (distinct e24 ((_ sign_extend 6) v1))))
(let ((e83 (bvuge e24 ((_ sign_extend 14) e25))))
(let ((e84 (bvuge e4 ((_ zero_extend 1) e29))))
(let ((e85 (bvsge ((_ sign_extend 15) e27) e10)))
(let ((e86 (bvult e15 e15)))
(let ((e87 (bvult e7 ((_ sign_extend 8) e17))))
(let ((e88 (= ((_ sign_extend 8) e27) e32)))
(let ((e89 (bvslt e20 ((_ zero_extend 15) e27))))
(let ((e90 (bvugt e7 e26)))
(let ((e91 (bvslt ((_ sign_extend 9) e5) v2)))
(let ((e92 (bvuge ((_ sign_extend 7) e27) e18)))
(let ((e93 (bvult ((_ sign_extend 4) e22) e23)))
(let ((e94 (bvslt ((_ sign_extend 4) e19) e28)))
(let ((e95 (and e54 e92)))
(let ((e96 (or e80 e74)))
(let ((e97 (xor e67 e90)))
(let ((e98 (and e50 e52)))
(let ((e99 (xor e57 e61)))
(let ((e100 (= e41 e51)))
(let ((e101 (xor e43 e46)))
(let ((e102 (and e55 e49)))
(let ((e103 (or e83 e42)))
(let ((e104 (not e98)))
(let ((e105 (ite e44 e103 e39)))
(let ((e106 (not e100)))
(let ((e107 (= e77 e70)))
(let ((e108 (xor e79 e105)))
(let ((e109 (=> e101 e87)))
(let ((e110 (or e40 e40)))
(let ((e111 (ite e81 e47 e107)))
(let ((e112 (not e88)))
(let ((e113 (ite e56 e93 e108)))
(let ((e114 (and e60 e111)))
(let ((e115 (=> e75 e45)))
(let ((e116 (ite e97 e59 e112)))
(let ((e117 (not e35)))
(let ((e118 (ite e72 e106 e68)))
(let ((e119 (and e117 e114)))
(let ((e120 (not e71)))
(let ((e121 (not e48)))
(let ((e122 (= e115 e115)))
(let ((e123 (or e118 e65)))
(let ((e124 (xor e96 e84)))
(let ((e125 (or e66 e119)))
(let ((e126 (and e36 e110)))
(let ((e127 (xor e104 e120)))
(let ((e128 (or e78 e121)))
(let ((e129 (=> e89 e91)))
(let ((e130 (or e109 e124)))
(let ((e131 (and e94 e94)))
(let ((e132 (= e99 e129)))
(let ((e133 (not e131)))
(let ((e134 (xor e128 e62)))
(let ((e135 (ite e64 e113 e133)))
(let ((e136 (=> e123 e126)))
(let ((e137 (and e127 e58)))
(let ((e138 (or e82 e132)))
(let ((e139 (and e116 e137)))
(let ((e140 (or e139 e102)))
(let ((e141 (xor e136 e122)))
(let ((e142 (=> e63 e37)))
(let ((e143 (xor e38 e125)))
(let ((e144 (and e73 e135)))
(let ((e145 (ite e138 e85 e138)))
(let ((e146 (xor e86 e69)))
(let ((e147 (ite e142 e145 e141)))
(let ((e148 (not e53)))
(let ((e149 (xor e146 e147)))
(let ((e150 (xor e130 e76)))
(let ((e151 (= e143 e95)))
(let ((e152 (and e148 e151)))
(let ((e153 (not e140)))
(let ((e154 (ite e144 e134 e153)))
(let ((e155 (ite e154 e152 e149)))
(let ((e156 (not e155)))
(let ((e157 (xor e150 e150)))
(let ((e158 (xor e156 e157)))
(let ((e159 (and e158 (not (= e14 (_ bv0 8))))))
e159
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
