(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 4))
(declare-fun v1 () (_ BitVec 12))
(declare-fun v2 () (_ BitVec 11))
(declare-fun a3 () (Array  (_ BitVec 16)  (_ BitVec 5)))
(declare-fun a4 () (Array  (_ BitVec 4)  (_ BitVec 10)))
(declare-fun a5 () (Array  (_ BitVec 10)  (_ BitVec 3)))
(assert (let ((e6(_ bv2660 12)))
(let ((e7(_ bv7578 15)))
(let ((e8 (ite (bvsge v2 ((_ sign_extend 7) v0)) (_ bv1 1) (_ bv0 1))))
(let ((e9 (concat e8 e7)))
(let ((e10 (ite (= e6 ((_ zero_extend 11) e8)) (_ bv1 1) (_ bv0 1))))
(let ((e11 (bvor ((_ sign_extend 15) e8) e9)))
(let ((e12 (bvxor v1 ((_ sign_extend 1) v2))))
(let ((e13 (store a3 ((_ zero_extend 4) v1) ((_ extract 15 11) e9))))
(let ((e14 (store a3 ((_ sign_extend 15) e10) ((_ extract 10 6) e12))))
(let ((e15 (select a4 ((_ zero_extend 3) e8))))
(let ((e16 (store e14 ((_ sign_extend 15) e10) ((_ extract 6 2) v1))))
(let ((e17 (bvsdiv ((_ zero_extend 4) v1) e11)))
(let ((e18 (bvsub ((_ sign_extend 1) e7) e9)))
(let ((e19 (bvmul ((_ sign_extend 6) e15) e18)))
(let ((e20 (bvor ((_ sign_extend 4) e6) e9)))
(let ((e21 ((_ extract 6 2) v2)))
(let ((e22 ((_ sign_extend 7) e21)))
(let ((e23 (bvsub ((_ sign_extend 11) e8) e22)))
(let ((e24 (bvadd ((_ sign_extend 3) e12) e7)))
(let ((e25 (bvand e6 ((_ sign_extend 11) e10))))
(let ((e26 (ite (bvsgt ((_ zero_extend 12) v0) e17) (_ bv1 1) (_ bv0 1))))
(let ((e27 (bvsgt ((_ sign_extend 4) e12) e19)))
(let ((e28 (= ((_ zero_extend 4) e12) e20)))
(let ((e29 (bvsge e23 e12)))
(let ((e30 (bvsle e22 ((_ sign_extend 11) e8))))
(let ((e31 (= e25 v1)))
(let ((e32 (bvule ((_ zero_extend 11) e10) e22)))
(let ((e33 (bvslt ((_ sign_extend 15) e8) e19)))
(let ((e34 (bvult ((_ sign_extend 6) e15) e18)))
(let ((e35 (distinct v1 e25)))
(let ((e36 (bvsle e17 ((_ sign_extend 11) e21))))
(let ((e37 (bvuge e12 e23)))
(let ((e38 (bvugt v1 e12)))
(let ((e39 (distinct ((_ zero_extend 1) v2) e23)))
(let ((e40 (bvule e9 ((_ sign_extend 4) e23))))
(let ((e41 (= ((_ sign_extend 11) e21) e19)))
(let ((e42 (bvslt ((_ sign_extend 6) e15) e19)))
(let ((e43 (bvsge e7 ((_ sign_extend 10) e21))))
(let ((e44 (bvslt e11 ((_ zero_extend 6) e15))))
(let ((e45 (bvugt ((_ sign_extend 4) v1) e18)))
(let ((e46 (= e25 e23)))
(let ((e47 (bvsle ((_ zero_extend 15) e26) e17)))
(let ((e48 (bvugt ((_ sign_extend 15) e10) e18)))
(let ((e49 (bvsgt e19 ((_ sign_extend 4) e23))))
(let ((e50 (bvuge ((_ zero_extend 1) e24) e20)))
(let ((e51 (bvult ((_ zero_extend 11) e21) e18)))
(let ((e52 (= ((_ zero_extend 3) e6) e7)))
(let ((e53 (distinct e15 ((_ sign_extend 6) v0))))
(let ((e54 (ite e41 e41 e29)))
(let ((e55 (and e45 e44)))
(let ((e56 (not e42)))
(let ((e57 (not e51)))
(let ((e58 (xor e31 e39)))
(let ((e59 (or e43 e55)))
(let ((e60 (= e27 e48)))
(let ((e61 (and e36 e58)))
(let ((e62 (or e32 e47)))
(let ((e63 (ite e30 e56 e30)))
(let ((e64 (not e33)))
(let ((e65 (=> e38 e59)))
(let ((e66 (=> e34 e49)))
(let ((e67 (=> e53 e66)))
(let ((e68 (and e52 e57)))
(let ((e69 (xor e61 e54)))
(let ((e70 (=> e62 e28)))
(let ((e71 (=> e60 e60)))
(let ((e72 (xor e37 e65)))
(let ((e73 (or e63 e64)))
(let ((e74 (xor e68 e68)))
(let ((e75 (=> e72 e73)))
(let ((e76 (or e75 e70)))
(let ((e77 (or e67 e35)))
(let ((e78 (and e74 e71)))
(let ((e79 (=> e76 e50)))
(let ((e80 (not e40)))
(let ((e81 (and e77 e69)))
(let ((e82 (=> e81 e80)))
(let ((e83 (= e78 e46)))
(let ((e84 (ite e79 e79 e79)))
(let ((e85 (or e84 e82)))
(let ((e86 (and e83 e85)))
(let ((e87 (and e86 (not (= e11 (_ bv0 16))))))
(let ((e88 (and e87 (not (= e11 (bvnot (_ bv0 16)))))))
e88
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
