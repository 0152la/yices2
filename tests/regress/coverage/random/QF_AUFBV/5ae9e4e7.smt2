(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 6))
(declare-fun v1 () (_ BitVec 5))
(declare-fun v2 () (_ BitVec 16))
(declare-fun v3 () (_ BitVec 13))
(declare-fun a4 () (Array  (_ BitVec 4)  (_ BitVec 11)))
(declare-fun a5 () (Array  (_ BitVec 3)  (_ BitVec 12)))
(assert (let ((e6(_ bv18 5)))
(let ((e7(_ bv54 8)))
(let ((e8 ((_ rotate_right 2) e6)))
(let ((e9 (bvudiv ((_ zero_extend 8) e7) v2)))
(let ((e10 (bvor ((_ zero_extend 11) v1) e9)))
(let ((e11 (ite (bvugt e7 ((_ sign_extend 3) v1)) (_ bv1 1) (_ bv0 1))))
(let ((e12 (bvneg v0)))
(let ((e13 ((_ zero_extend 2) v3)))
(let ((e14 (store a5 ((_ extract 2 0) e7) ((_ extract 14 3) e9))))
(let ((e15 (store e14 ((_ extract 2 0) v1) ((_ zero_extend 11) e11))))
(let ((e16 (select a4 ((_ extract 3 0) e8))))
(let ((e17 (select a4 ((_ extract 3 0) e12))))
(let ((e18 (store e14 ((_ extract 4 2) v0) ((_ extract 12 1) e13))))
(let ((e19 (select e18 ((_ extract 7 5) v2))))
(let ((e20 (store e15 ((_ extract 12 10) v2) ((_ extract 12 1) e9))))
(let ((e21 (bvxnor v3 ((_ sign_extend 8) v1))))
(let ((e22 (bvmul e9 e9)))
(let ((e23 (bvneg e8)))
(let ((e24 (bvsub e10 ((_ sign_extend 3) v3))))
(let ((e25 (bvor ((_ zero_extend 11) e6) e9)))
(let ((e26 (ite (= (_ bv1 1) ((_ extract 1 1) e19)) ((_ zero_extend 1) e6) v0)))
(let ((e27 (ite (bvugt ((_ sign_extend 1) e13) v2) (_ bv1 1) (_ bv0 1))))
(let ((e28 (bvmul e22 e25)))
(let ((e29 (bvand ((_ zero_extend 10) e12) v2)))
(let ((e30 (ite (bvult e10 e29) (_ bv1 1) (_ bv0 1))))
(let ((e31 (bvxnor e22 e28)))
(let ((e32 (bvnor v2 ((_ zero_extend 10) e12))))
(let ((e33 (ite (bvule ((_ sign_extend 5) e16) e32) (_ bv1 1) (_ bv0 1))))
(let ((e34 (bvshl e17 ((_ zero_extend 5) e26))))
(let ((e35 (bvsdiv e32 e9)))
(let ((e36 (ite (bvsle e29 ((_ zero_extend 11) v1)) (_ bv1 1) (_ bv0 1))))
(let ((e37 (bvxor e7 ((_ zero_extend 3) v1))))
(let ((e38 (bvsrem ((_ sign_extend 7) e30) e37)))
(let ((e39 (bvlshr e17 ((_ sign_extend 3) e38))))
(let ((e40 ((_ rotate_right 0) e11)))
(let ((e41 (bvsgt ((_ zero_extend 1) e13) e24)))
(let ((e42 (bvslt v2 ((_ zero_extend 11) e8))))
(let ((e43 (bvsgt e36 e40)))
(let ((e44 (= e16 ((_ zero_extend 6) e6))))
(let ((e45 (bvule ((_ sign_extend 7) e6) e19)))
(let ((e46 (bvule e17 ((_ zero_extend 10) e33))))
(let ((e47 (= e26 ((_ sign_extend 5) e11))))
(let ((e48 (bvsgt e29 e28)))
(let ((e49 (bvule ((_ sign_extend 4) e34) e13)))
(let ((e50 (bvugt ((_ zero_extend 1) e16) e19)))
(let ((e51 (bvuge e39 ((_ sign_extend 10) e40))))
(let ((e52 (bvuge e30 e27)))
(let ((e53 (bvsgt v0 ((_ sign_extend 5) e30))))
(let ((e54 (bvuge ((_ zero_extend 8) e37) e10)))
(let ((e55 (bvult ((_ zero_extend 8) e38) e22)))
(let ((e56 (distinct ((_ sign_extend 11) e23) e29)))
(let ((e57 (bvsgt ((_ sign_extend 5) e11) e26)))
(let ((e58 (bvsle e28 ((_ zero_extend 5) e34))))
(let ((e59 (bvugt e31 ((_ zero_extend 11) e6))))
(let ((e60 (bvugt ((_ sign_extend 1) e13) e31)))
(let ((e61 (= e19 ((_ zero_extend 11) e36))))
(let ((e62 (bvsle e23 ((_ zero_extend 4) e30))))
(let ((e63 (= e28 ((_ zero_extend 8) e7))))
(let ((e64 (= ((_ zero_extend 8) e38) e24)))
(let ((e65 (bvule ((_ sign_extend 4) e27) e6)))
(let ((e66 (distinct e22 ((_ zero_extend 1) e13))))
(let ((e67 (bvsgt ((_ zero_extend 10) e30) e39)))
(let ((e68 (bvsle e29 ((_ zero_extend 10) e26))))
(let ((e69 (bvsgt e35 e25)))
(let ((e70 (= v2 ((_ sign_extend 11) e8))))
(let ((e71 (= ((_ zero_extend 11) e23) e9)))
(let ((e72 (distinct ((_ zero_extend 4) e40) e6)))
(let ((e73 (bvsge e23 ((_ sign_extend 4) e36))))
(let ((e74 (bvsgt ((_ sign_extend 15) e40) e31)))
(let ((e75 (bvsgt e22 e25)))
(let ((e76 (bvslt ((_ zero_extend 11) e23) v2)))
(let ((e77 (bvsgt e38 ((_ sign_extend 2) v0))))
(let ((e78 (bvsle e24 ((_ sign_extend 15) e11))))
(let ((e79 (= e29 ((_ zero_extend 8) e38))))
(let ((e80 (distinct e35 v2)))
(let ((e81 (bvsgt e24 ((_ sign_extend 15) e40))))
(let ((e82 (= ((_ sign_extend 3) e8) e7)))
(let ((e83 (bvsgt e28 ((_ sign_extend 15) e27))))
(let ((e84 (bvsge ((_ zero_extend 6) e8) e16)))
(let ((e85 (bvule ((_ zero_extend 10) e11) e39)))
(let ((e86 (bvult ((_ sign_extend 5) e16) e9)))
(let ((e87 (bvsge e35 ((_ sign_extend 15) e30))))
(let ((e88 (bvsgt ((_ zero_extend 11) v1) e28)))
(let ((e89 (bvsle e9 e9)))
(let ((e90 (bvugt ((_ zero_extend 2) e17) v3)))
(let ((e91 (= ((_ sign_extend 7) e30) e38)))
(let ((e92 (bvsgt ((_ zero_extend 1) e19) v3)))
(let ((e93 (bvuge ((_ sign_extend 10) v0) e9)))
(let ((e94 (distinct ((_ zero_extend 10) e27) e39)))
(let ((e95 (bvsgt e24 ((_ sign_extend 15) e40))))
(let ((e96 (= e21 ((_ zero_extend 12) e40))))
(let ((e97 (bvule ((_ zero_extend 3) e23) e37)))
(let ((e98 (bvsge e6 ((_ sign_extend 4) e33))))
(let ((e99 (bvult e7 ((_ sign_extend 7) e27))))
(let ((e100 (= ((_ sign_extend 1) e6) e12)))
(let ((e101 (bvule e25 e9)))
(let ((e102 (bvsgt ((_ zero_extend 8) e37) e31)))
(let ((e103 (bvsle e34 e39)))
(let ((e104 (bvsge e39 ((_ sign_extend 5) e26))))
(let ((e105 (bvule ((_ zero_extend 4) e19) e32)))
(let ((e106 (xor e73 e62)))
(let ((e107 (= e47 e67)))
(let ((e108 (=> e91 e100)))
(let ((e109 (xor e63 e87)))
(let ((e110 (= e41 e66)))
(let ((e111 (not e81)))
(let ((e112 (not e111)))
(let ((e113 (= e51 e52)))
(let ((e114 (=> e106 e60)))
(let ((e115 (and e77 e104)))
(let ((e116 (and e80 e85)))
(let ((e117 (not e72)))
(let ((e118 (= e70 e117)))
(let ((e119 (xor e86 e78)))
(let ((e120 (=> e75 e45)))
(let ((e121 (=> e108 e98)))
(let ((e122 (xor e102 e71)))
(let ((e123 (and e113 e64)))
(let ((e124 (=> e110 e103)))
(let ((e125 (xor e114 e92)))
(let ((e126 (or e107 e76)))
(let ((e127 (ite e120 e115 e112)))
(let ((e128 (or e79 e109)))
(let ((e129 (=> e97 e96)))
(let ((e130 (= e93 e94)))
(let ((e131 (or e74 e84)))
(let ((e132 (and e116 e88)))
(let ((e133 (=> e123 e118)))
(let ((e134 (or e119 e121)))
(let ((e135 (ite e131 e69 e68)))
(let ((e136 (and e99 e46)))
(let ((e137 (xor e90 e61)))
(let ((e138 (not e105)))
(let ((e139 (= e101 e42)))
(let ((e140 (and e43 e130)))
(let ((e141 (or e57 e89)))
(let ((e142 (or e127 e65)))
(let ((e143 (xor e125 e124)))
(let ((e144 (= e83 e50)))
(let ((e145 (= e49 e95)))
(let ((e146 (not e139)))
(let ((e147 (= e143 e128)))
(let ((e148 (= e141 e135)))
(let ((e149 (and e122 e126)))
(let ((e150 (and e140 e55)))
(let ((e151 (xor e134 e129)))
(let ((e152 (=> e148 e142)))
(let ((e153 (not e150)))
(let ((e154 (ite e133 e48 e144)))
(let ((e155 (or e149 e146)))
(let ((e156 (= e138 e145)))
(let ((e157 (not e58)))
(let ((e158 (and e54 e151)))
(let ((e159 (not e56)))
(let ((e160 (and e158 e157)))
(let ((e161 (=> e152 e137)))
(let ((e162 (and e159 e161)))
(let ((e163 (and e136 e160)))
(let ((e164 (= e44 e82)))
(let ((e165 (=> e147 e53)))
(let ((e166 (or e155 e156)))
(let ((e167 (and e153 e154)))
(let ((e168 (ite e165 e165 e163)))
(let ((e169 (= e164 e166)))
(let ((e170 (and e59 e162)))
(let ((e171 (and e170 e167)))
(let ((e172 (ite e171 e132 e132)))
(let ((e173 (ite e168 e172 e169)))
(let ((e174 (and e173 (not (= e9 (_ bv0 16))))))
(let ((e175 (and e174 (not (= e9 (bvnot (_ bv0 16)))))))
(let ((e176 (and e175 (not (= v2 (_ bv0 16))))))
(let ((e177 (and e176 (not (= e37 (_ bv0 8))))))
(let ((e178 (and e177 (not (= e37 (bvnot (_ bv0 8)))))))
e178
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
