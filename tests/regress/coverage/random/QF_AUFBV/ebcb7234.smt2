(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 10))
(declare-fun v1 () (_ BitVec 15))
(declare-fun v2 () (_ BitVec 9))
(declare-fun v3 () (_ BitVec 12))
(declare-fun v4 () (_ BitVec 10))
(declare-fun a5 () (Array  (_ BitVec 6)  (_ BitVec 15)))
(assert (let ((e6(_ bv5 3)))
(let ((e7(_ bv11727 14)))
(let ((e8 (ite (distinct ((_ zero_extend 1) e7) v1) (_ bv1 1) (_ bv0 1))))
(let ((e9 (ite (bvuge ((_ sign_extend 2) v0) v3) (_ bv1 1) (_ bv0 1))))
(let ((e10 (bvurem ((_ zero_extend 5) v4) v1)))
(let ((e11 (bvsrem ((_ zero_extend 2) e9) e6)))
(let ((e12 (ite (bvsgt ((_ zero_extend 3) v2) v3) (_ bv1 1) (_ bv0 1))))
(let ((e13 (store a5 ((_ extract 5 0) v3) e10)))
(let ((e14 (store e13 ((_ extract 8 3) v3) ((_ zero_extend 5) v0))))
(let ((e15 (select e14 ((_ zero_extend 5) e8))))
(let ((e16 (select e14 ((_ sign_extend 5) e9))))
(let ((e17 (store e13 ((_ sign_extend 5) e8) ((_ zero_extend 14) e8))))
(let ((e18 (select e14 ((_ extract 9 4) v4))))
(let ((e19 (ite (= (_ bv1 1) ((_ extract 0 0) e9)) e7 ((_ sign_extend 4) v0))))
(let ((e20 ((_ zero_extend 4) e9)))
(let ((e21 (ite (bvsge e16 ((_ zero_extend 1) e19)) (_ bv1 1) (_ bv0 1))))
(let ((e22 (ite (bvsge ((_ zero_extend 3) v3) v1) (_ bv1 1) (_ bv0 1))))
(let ((e23 (bvnand e18 e10)))
(let ((e24 (ite (bvule v3 ((_ sign_extend 11) e21)) (_ bv1 1) (_ bv0 1))))
(let ((e25 (ite (bvslt v4 ((_ zero_extend 7) e6)) (_ bv1 1) (_ bv0 1))))
(let ((e26 (bvor e18 ((_ zero_extend 6) v2))))
(let ((e27 (ite (bvuge ((_ sign_extend 2) e12) e6) (_ bv1 1) (_ bv0 1))))
(let ((e28 (bvnot e15)))
(let ((e29 (ite (bvsge ((_ zero_extend 14) e8) e15) (_ bv1 1) (_ bv0 1))))
(let ((e30 (bvnand ((_ sign_extend 9) e11) v3)))
(let ((e31 (bvsgt e15 ((_ sign_extend 10) e20))))
(let ((e32 (bvult v1 e16)))
(let ((e33 (distinct ((_ sign_extend 6) v2) e28)))
(let ((e34 (bvslt e18 ((_ zero_extend 12) e11))))
(let ((e35 (bvslt ((_ zero_extend 5) e20) v4)))
(let ((e36 (bvult ((_ zero_extend 4) v4) e19)))
(let ((e37 (bvslt e28 ((_ zero_extend 5) v0))))
(let ((e38 (= e16 e23)))
(let ((e39 (bvult e16 e16)))
(let ((e40 (= ((_ zero_extend 2) v0) e30)))
(let ((e41 (bvult ((_ zero_extend 11) e8) e30)))
(let ((e42 (bvsgt e16 ((_ zero_extend 12) e6))))
(let ((e43 (bvsge ((_ zero_extend 3) e30) e28)))
(let ((e44 (distinct ((_ zero_extend 14) e21) e10)))
(let ((e45 (bvsgt v4 ((_ zero_extend 9) e9))))
(let ((e46 (bvult ((_ zero_extend 10) e20) e23)))
(let ((e47 (bvult e23 e15)))
(let ((e48 (bvule v1 ((_ sign_extend 10) e20))))
(let ((e49 (bvsgt e15 e10)))
(let ((e50 (bvult e15 ((_ zero_extend 1) e7))))
(let ((e51 (bvsge ((_ sign_extend 2) e9) e6)))
(let ((e52 (bvsgt v3 ((_ sign_extend 11) e21))))
(let ((e53 (bvule v1 ((_ zero_extend 3) v3))))
(let ((e54 (bvsge e9 e24)))
(let ((e55 (bvuge ((_ sign_extend 14) e27) e28)))
(let ((e56 (bvsge e28 ((_ zero_extend 14) e8))))
(let ((e57 (bvugt ((_ zero_extend 14) e8) e18)))
(let ((e58 (distinct e29 e8)))
(let ((e59 (bvule e7 ((_ sign_extend 13) e9))))
(let ((e60 (distinct e16 ((_ zero_extend 6) v2))))
(let ((e61 (= e9 e9)))
(let ((e62 (bvsle ((_ zero_extend 9) e11) v3)))
(let ((e63 (bvult ((_ zero_extend 14) e8) e23)))
(let ((e64 (bvuge e20 ((_ zero_extend 4) e27))))
(let ((e65 (bvslt e11 ((_ sign_extend 2) e8))))
(let ((e66 (bvule e10 ((_ sign_extend 6) v2))))
(let ((e67 (bvugt ((_ sign_extend 9) e21) v0)))
(let ((e68 (bvsle ((_ zero_extend 9) e12) v4)))
(let ((e69 (bvsgt v4 ((_ zero_extend 9) e22))))
(let ((e70 (distinct e12 e22)))
(let ((e71 (bvsle v4 ((_ sign_extend 1) v2))))
(let ((e72 (bvult ((_ zero_extend 5) v4) e10)))
(let ((e73 (bvsgt ((_ sign_extend 14) e24) e23)))
(let ((e74 (bvsle e18 ((_ sign_extend 14) e27))))
(let ((e75 (bvult ((_ zero_extend 3) v3) v1)))
(let ((e76 (bvuge ((_ zero_extend 4) v0) e19)))
(let ((e77 (bvsle ((_ sign_extend 3) e30) v1)))
(let ((e78 (bvsgt e6 ((_ zero_extend 2) e24))))
(let ((e79 (bvugt ((_ zero_extend 5) v0) e18)))
(let ((e80 (= e15 e16)))
(let ((e81 (bvule ((_ zero_extend 5) v4) e16)))
(let ((e82 (bvsle e27 e12)))
(let ((e83 (bvslt v1 ((_ sign_extend 10) e20))))
(let ((e84 (bvsge ((_ sign_extend 8) e9) v2)))
(let ((e85 (bvslt v1 ((_ sign_extend 12) e6))))
(let ((e86 (bvsgt e19 ((_ zero_extend 2) e30))))
(let ((e87 (bvslt e23 ((_ zero_extend 6) v2))))
(let ((e88 (bvult v0 ((_ sign_extend 9) e25))))
(let ((e89 (bvslt v0 v0)))
(let ((e90 (= e15 e23)))
(let ((e91 (bvuge ((_ zero_extend 12) e6) e23)))
(let ((e92 (bvule v0 ((_ zero_extend 1) v2))))
(let ((e93 (bvsgt ((_ zero_extend 7) e6) v4)))
(let ((e94 (bvugt ((_ zero_extend 13) e21) e19)))
(let ((e95 (bvuge ((_ zero_extend 3) e30) e15)))
(let ((e96 (= ((_ zero_extend 8) e24) v2)))
(let ((e97 (bvule ((_ zero_extend 14) e12) e28)))
(let ((e98 (bvsge e23 e10)))
(let ((e99 (bvule e22 e27)))
(let ((e100 (distinct e28 v1)))
(let ((e101 (bvsgt e26 e26)))
(let ((e102 (and e91 e37)))
(let ((e103 (ite e62 e36 e67)))
(let ((e104 (or e69 e97)))
(let ((e105 (or e56 e63)))
(let ((e106 (xor e44 e92)))
(let ((e107 (= e99 e45)))
(let ((e108 (= e77 e59)))
(let ((e109 (xor e46 e84)))
(let ((e110 (ite e86 e96 e104)))
(let ((e111 (or e93 e66)))
(let ((e112 (or e81 e90)))
(let ((e113 (not e83)))
(let ((e114 (ite e42 e55 e105)))
(let ((e115 (= e79 e100)))
(let ((e116 (xor e50 e31)))
(let ((e117 (= e58 e71)))
(let ((e118 (=> e38 e65)))
(let ((e119 (or e54 e47)))
(let ((e120 (and e60 e57)))
(let ((e121 (xor e51 e49)))
(let ((e122 (and e108 e76)))
(let ((e123 (xor e68 e109)))
(let ((e124 (not e106)))
(let ((e125 (xor e33 e32)))
(let ((e126 (= e102 e114)))
(let ((e127 (ite e78 e89 e48)))
(let ((e128 (= e123 e122)))
(let ((e129 (or e121 e118)))
(let ((e130 (and e52 e72)))
(let ((e131 (or e41 e125)))
(let ((e132 (or e103 e95)))
(let ((e133 (ite e119 e130 e116)))
(let ((e134 (or e53 e129)))
(let ((e135 (=> e112 e133)))
(let ((e136 (xor e124 e73)))
(let ((e137 (and e74 e135)))
(let ((e138 (and e107 e35)))
(let ((e139 (xor e98 e115)))
(let ((e140 (= e70 e39)))
(let ((e141 (not e75)))
(let ((e142 (or e117 e117)))
(let ((e143 (xor e87 e134)))
(let ((e144 (ite e142 e143 e111)))
(let ((e145 (ite e80 e40 e139)))
(let ((e146 (not e64)))
(let ((e147 (ite e61 e88 e126)))
(let ((e148 (and e147 e132)))
(let ((e149 (xor e34 e34)))
(let ((e150 (ite e146 e43 e140)))
(let ((e151 (xor e149 e127)))
(let ((e152 (not e150)))
(let ((e153 (or e148 e94)))
(let ((e154 (ite e110 e145 e144)))
(let ((e155 (or e151 e101)))
(let ((e156 (or e141 e141)))
(let ((e157 (or e137 e128)))
(let ((e158 (=> e154 e120)))
(let ((e159 (not e85)))
(let ((e160 (ite e157 e131 e156)))
(let ((e161 (or e152 e159)))
(let ((e162 (xor e138 e113)))
(let ((e163 (not e161)))
(let ((e164 (=> e153 e158)))
(let ((e165 (=> e162 e164)))
(let ((e166 (ite e163 e136 e165)))
(let ((e167 (=> e160 e155)))
(let ((e168 (= e166 e167)))
(let ((e169 (xor e168 e82)))
(let ((e170 (and e169 (not (= v1 (_ bv0 15))))))
(let ((e171 (and e170 (not (= e6 (_ bv0 3))))))
(let ((e172 (and e171 (not (= e6 (bvnot (_ bv0 3)))))))
e172
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
