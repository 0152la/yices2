(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 5))
(declare-fun v1 () (_ BitVec 5))
(declare-fun a2 () (Array  (_ BitVec 6)  (_ BitVec 6)))
(declare-fun a3 () (Array  (_ BitVec 14)  (_ BitVec 2)))
(assert (let ((e4(_ bv15 4)))
(let ((e5 (bvurem e4 e4)))
(let ((e6 (ite (bvslt v1 v0) (_ bv1 1) (_ bv0 1))))
(let ((e7 (store a2 ((_ zero_extend 1) v1) ((_ sign_extend 1) v0))))
(let ((e8 (store a2 ((_ zero_extend 1) v0) ((_ sign_extend 1) v0))))
(let ((e9 (select e7 ((_ zero_extend 1) v1))))
(let ((e10 (select a2 ((_ sign_extend 2) e4))))
(let ((e11 (select e8 ((_ sign_extend 5) e6))))
(let ((e12 (store e8 ((_ sign_extend 2) e4) e11)))
(let ((e13 (select a3 ((_ zero_extend 8) e9))))
(let ((e14 (store a2 ((_ sign_extend 2) e5) e9)))
(let ((e15 (select e8 e11)))
(let ((e16 (ite (bvult e11 ((_ sign_extend 2) e4)) (_ bv1 1) (_ bv0 1))))
(let ((e17 (bvmul e9 ((_ sign_extend 2) e4))))
(let ((e18 (ite (= ((_ sign_extend 1) v0) e10) (_ bv1 1) (_ bv0 1))))
(let ((e19 (ite (bvuge v1 ((_ zero_extend 4) e18)) (_ bv1 1) (_ bv0 1))))
(let ((e20 (ite (bvult ((_ sign_extend 2) e5) e15) (_ bv1 1) (_ bv0 1))))
(let ((e21 (bvxnor ((_ zero_extend 4) e13) e17)))
(let ((e22 (ite (bvuge e6 e18) (_ bv1 1) (_ bv0 1))))
(let ((e23 (bvugt e21 e10)))
(let ((e24 (bvsle ((_ zero_extend 3) e22) e4)))
(let ((e25 (bvsgt ((_ sign_extend 5) e16) e10)))
(let ((e26 (bvsge e11 ((_ sign_extend 1) v1))))
(let ((e27 (bvslt e11 ((_ zero_extend 5) e20))))
(let ((e28 (bvsgt e10 ((_ zero_extend 4) e13))))
(let ((e29 (bvslt e10 ((_ sign_extend 2) e5))))
(let ((e30 (bvsgt e16 e22)))
(let ((e31 (bvugt ((_ sign_extend 4) e22) v1)))
(let ((e32 (bvsgt ((_ zero_extend 5) e20) e10)))
(let ((e33 (bvsgt ((_ sign_extend 4) e13) e9)))
(let ((e34 (bvsge ((_ zero_extend 4) e13) e11)))
(let ((e35 (bvuge e9 e15)))
(let ((e36 (bvuge e17 ((_ sign_extend 5) e16))))
(let ((e37 (bvugt e5 ((_ sign_extend 3) e16))))
(let ((e38 (bvule e4 ((_ zero_extend 2) e13))))
(let ((e39 (= ((_ zero_extend 4) e20) v0)))
(let ((e40 (bvslt ((_ sign_extend 1) e19) e13)))
(let ((e41 (bvule ((_ zero_extend 4) e13) e11)))
(let ((e42 (distinct ((_ zero_extend 1) v0) e9)))
(let ((e43 (bvsle e13 ((_ zero_extend 1) e16))))
(let ((e44 (bvsgt e16 e6)))
(let ((e45 (bvsge ((_ sign_extend 5) e20) e10)))
(let ((e46 (bvsgt e17 ((_ zero_extend 5) e16))))
(let ((e47 (bvule e17 ((_ zero_extend 5) e20))))
(let ((e48 (bvslt e18 e18)))
(let ((e49 (= e31 e23)))
(let ((e50 (=> e45 e26)))
(let ((e51 (or e48 e41)))
(let ((e52 (not e49)))
(let ((e53 (xor e39 e30)))
(let ((e54 (ite e35 e34 e25)))
(let ((e55 (xor e51 e53)))
(let ((e56 (and e36 e40)))
(let ((e57 (or e38 e52)))
(let ((e58 (=> e46 e43)))
(let ((e59 (not e27)))
(let ((e60 (not e55)))
(let ((e61 (=> e58 e60)))
(let ((e62 (or e59 e54)))
(let ((e63 (not e29)))
(let ((e64 (or e62 e50)))
(let ((e65 (not e57)))
(let ((e66 (or e24 e61)))
(let ((e67 (= e63 e28)))
(let ((e68 (=> e32 e56)))
(let ((e69 (=> e64 e42)))
(let ((e70 (= e65 e65)))
(let ((e71 (ite e66 e47 e69)))
(let ((e72 (=> e70 e67)))
(let ((e73 (ite e72 e33 e37)))
(let ((e74 (and e68 e68)))
(let ((e75 (=> e71 e73)))
(let ((e76 (or e44 e44)))
(let ((e77 (not e74)))
(let ((e78 (not e77)))
(let ((e79 (=> e76 e76)))
(let ((e80 (xor e75 e75)))
(let ((e81 (=> e79 e78)))
(let ((e82 (or e81 e80)))
(let ((e83 (and e82 (not (= e4 (_ bv0 4))))))
e83
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
