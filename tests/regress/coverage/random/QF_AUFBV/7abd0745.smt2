(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 6))
(declare-fun v1 () (_ BitVec 3))
(declare-fun a2 () (Array  (_ BitVec 13)  (_ BitVec 1)))
(declare-fun a3 () (Array  (_ BitVec 5)  (_ BitVec 5)))
(declare-fun a4 () (Array  (_ BitVec 7)  (_ BitVec 2)))
(assert (let ((e5(_ bv3 2)))
(let ((e6 (bvor v0 v0)))
(let ((e7 (bvmul v0 ((_ zero_extend 3) v1))))
(let ((e8 (bvadd v0 e7)))
(let ((e9 (bvsrem v0 e8)))
(let ((e10 (ite (bvsge ((_ sign_extend 1) e5) v1) (_ bv1 1) (_ bv0 1))))
(let ((e11 (store a3 ((_ extract 5 1) v0) ((_ extract 5 1) e7))))
(let ((e12 (store a3 ((_ zero_extend 3) e5) ((_ sign_extend 4) e10))))
(let ((e13 (select a2 ((_ zero_extend 7) e6))))
(let ((e14 (store a2 ((_ sign_extend 10) v1) ((_ extract 1 1) v1))))
(let ((e15 (select e12 ((_ sign_extend 3) e5))))
(let ((e16 (store a4 ((_ sign_extend 4) v1) ((_ extract 2 1) e9))))
(let ((e17 (bvmul e8 ((_ zero_extend 1) e15))))
(let ((e18 ((_ sign_extend 8) e8)))
(let ((e19 (ite (bvugt e18 ((_ zero_extend 8) e17)) (_ bv1 1) (_ bv0 1))))
(let ((e20 (ite (= ((_ sign_extend 3) e5) e15) (_ bv1 1) (_ bv0 1))))
(let ((e21 ((_ sign_extend 12) e20)))
(let ((e22 (bvor v1 ((_ sign_extend 2) e19))))
(let ((e23 (bvurem e13 e20)))
(let ((e24 (ite (distinct e9 ((_ sign_extend 5) e19)) (_ bv1 1) (_ bv0 1))))
(let ((e25 (bvand e5 ((_ sign_extend 1) e20))))
(let ((e26 (ite (bvule e7 ((_ zero_extend 4) e25)) (_ bv1 1) (_ bv0 1))))
(let ((e27 (bvxor ((_ zero_extend 5) e10) v0)))
(let ((e28 (bvshl e27 e27)))
(let ((e29 ((_ sign_extend 9) e19)))
(let ((e30 (bvudiv e28 e8)))
(let ((e31 (bvnor e29 ((_ sign_extend 9) e19))))
(let ((e32 (bvnand ((_ sign_extend 5) e24) e8)))
(let ((e33 (bvnor e22 e22)))
(let ((e34 (ite (bvsle e6 e17) (_ bv1 1) (_ bv0 1))))
(let ((e35 (bvule e29 ((_ zero_extend 4) e9))))
(let ((e36 (bvslt e29 ((_ zero_extend 7) e22))))
(let ((e37 (bvult v0 ((_ sign_extend 5) e20))))
(let ((e38 (bvsgt ((_ sign_extend 10) e22) e21)))
(let ((e39 (bvule e9 ((_ zero_extend 1) e15))))
(let ((e40 (distinct ((_ sign_extend 10) e33) e21)))
(let ((e41 (= e26 e26)))
(let ((e42 (bvult ((_ zero_extend 4) e25) e9)))
(let ((e43 (bvsge e6 ((_ sign_extend 4) e25))))
(let ((e44 (bvsge e32 ((_ zero_extend 3) v1))))
(let ((e45 (bvugt e23 e10)))
(let ((e46 (bvule ((_ zero_extend 1) e26) e25)))
(let ((e47 (bvslt e29 ((_ sign_extend 4) e6))))
(let ((e48 (bvslt ((_ sign_extend 4) e30) e29)))
(let ((e49 (bvsgt e15 ((_ sign_extend 4) e13))))
(let ((e50 (= ((_ sign_extend 1) e34) e5)))
(let ((e51 (bvuge e28 ((_ sign_extend 3) v1))))
(let ((e52 (= e6 ((_ zero_extend 5) e26))))
(let ((e53 (bvugt e20 e24)))
(let ((e54 (bvule e8 e6)))
(let ((e55 (bvugt e28 ((_ zero_extend 5) e10))))
(let ((e56 (bvugt e25 ((_ sign_extend 1) e23))))
(let ((e57 (bvsge ((_ zero_extend 5) e20) e7)))
(let ((e58 (bvsgt e30 ((_ zero_extend 5) e13))))
(let ((e59 (bvugt ((_ zero_extend 2) e24) e33)))
(let ((e60 (bvsgt e32 v0)))
(let ((e61 (bvule ((_ zero_extend 7) e8) e21)))
(let ((e62 (bvsgt v0 e9)))
(let ((e63 (bvule e21 ((_ zero_extend 7) e6))))
(let ((e64 (bvsle ((_ zero_extend 13) e20) e18)))
(let ((e65 (bvsge v0 ((_ sign_extend 3) e22))))
(let ((e66 (bvsge e7 ((_ zero_extend 3) e33))))
(let ((e67 (bvsgt ((_ zero_extend 1) e15) e32)))
(let ((e68 (= e22 ((_ zero_extend 2) e13))))
(let ((e69 (bvule e32 ((_ sign_extend 5) e19))))
(let ((e70 (bvslt e6 ((_ zero_extend 5) e10))))
(let ((e71 (= ((_ zero_extend 3) e22) e7)))
(let ((e72 (bvugt ((_ sign_extend 1) e19) e25)))
(let ((e73 (bvule ((_ zero_extend 5) e19) e7)))
(let ((e74 (distinct v1 ((_ zero_extend 2) e34))))
(let ((e75 (bvsgt ((_ sign_extend 7) e22) e31)))
(let ((e76 (bvugt ((_ sign_extend 1) e23) e25)))
(let ((e77 (= e31 ((_ zero_extend 9) e10))))
(let ((e78 (= e27 ((_ zero_extend 5) e13))))
(let ((e79 (bvsle ((_ zero_extend 9) e26) e29)))
(let ((e80 (bvsle e31 ((_ zero_extend 9) e19))))
(let ((e81 (bvsle e7 ((_ zero_extend 5) e34))))
(let ((e82 (bvult e22 ((_ sign_extend 2) e19))))
(let ((e83 (distinct ((_ sign_extend 10) e33) e21)))
(let ((e84 (bvsgt e27 v0)))
(let ((e85 (bvuge ((_ zero_extend 5) e19) e32)))
(let ((e86 (bvult e19 e24)))
(let ((e87 (bvsge e7 v0)))
(let ((e88 (bvugt ((_ zero_extend 4) e32) e29)))
(let ((e89 (bvslt e6 e9)))
(let ((e90 (bvugt e6 ((_ zero_extend 5) e20))))
(let ((e91 (bvsle e31 ((_ zero_extend 9) e26))))
(let ((e92 (bvslt ((_ zero_extend 5) e24) v0)))
(let ((e93 (= v0 e9)))
(let ((e94 (bvslt e8 e27)))
(let ((e95 (= v1 ((_ sign_extend 2) e20))))
(let ((e96 (bvult ((_ zero_extend 5) e20) e27)))
(let ((e97 (bvsle e18 ((_ zero_extend 4) e31))))
(let ((e98 (bvslt e25 e25)))
(let ((e99 (= e28 e27)))
(let ((e100 (distinct e7 e17)))
(let ((e101 (=> e41 e78)))
(let ((e102 (=> e81 e40)))
(let ((e103 (and e52 e46)))
(let ((e104 (or e82 e57)))
(let ((e105 (ite e68 e77 e38)))
(let ((e106 (=> e97 e89)))
(let ((e107 (= e102 e55)))
(let ((e108 (ite e43 e93 e42)))
(let ((e109 (xor e106 e50)))
(let ((e110 (and e51 e104)))
(let ((e111 (or e109 e75)))
(let ((e112 (xor e60 e80)))
(let ((e113 (not e69)))
(let ((e114 (= e88 e113)))
(let ((e115 (= e73 e58)))
(let ((e116 (ite e79 e61 e64)))
(let ((e117 (= e108 e56)))
(let ((e118 (xor e47 e53)))
(let ((e119 (= e87 e118)))
(let ((e120 (not e71)))
(let ((e121 (= e96 e70)))
(let ((e122 (or e49 e91)))
(let ((e123 (ite e37 e105 e117)))
(let ((e124 (not e92)))
(let ((e125 (not e85)))
(let ((e126 (= e100 e72)))
(let ((e127 (not e107)))
(let ((e128 (or e120 e44)))
(let ((e129 (xor e54 e62)))
(let ((e130 (or e66 e36)))
(let ((e131 (ite e90 e129 e111)))
(let ((e132 (and e115 e35)))
(let ((e133 (=> e119 e39)))
(let ((e134 (or e130 e95)))
(let ((e135 (not e116)))
(let ((e136 (xor e128 e125)))
(let ((e137 (and e131 e121)))
(let ((e138 (not e67)))
(let ((e139 (= e86 e123)))
(let ((e140 (=> e127 e139)))
(let ((e141 (xor e140 e126)))
(let ((e142 (=> e99 e138)))
(let ((e143 (=> e59 e84)))
(let ((e144 (and e141 e101)))
(let ((e145 (and e45 e122)))
(let ((e146 (or e94 e112)))
(let ((e147 (and e63 e63)))
(let ((e148 (not e146)))
(let ((e149 (not e132)))
(let ((e150 (=> e145 e133)))
(let ((e151 (and e76 e74)))
(let ((e152 (or e48 e136)))
(let ((e153 (not e149)))
(let ((e154 (and e143 e135)))
(let ((e155 (= e148 e124)))
(let ((e156 (ite e151 e153 e98)))
(let ((e157 (=> e147 e144)))
(let ((e158 (= e65 e103)))
(let ((e159 (ite e114 e158 e154)))
(let ((e160 (=> e110 e152)))
(let ((e161 (not e160)))
(let ((e162 (or e150 e159)))
(let ((e163 (xor e155 e162)))
(let ((e164 (not e156)))
(let ((e165 (ite e83 e157 e134)))
(let ((e166 (= e142 e161)))
(let ((e167 (ite e137 e165 e163)))
(let ((e168 (ite e167 e166 e166)))
(let ((e169 (not e168)))
(let ((e170 (xor e164 e169)))
(let ((e171 (and e170 (not (= e20 (_ bv0 1))))))
(let ((e172 (and e171 (not (= e8 (_ bv0 6))))))
(let ((e173 (and e172 (not (= e8 (bvnot (_ bv0 6)))))))
e173
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
