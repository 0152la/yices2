(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 16))
(declare-fun a1 () (Array  (_ BitVec 2)  (_ BitVec 2)))
(assert (let ((e2(_ bv31 15)))
(let ((e3 (bvnot v0)))
(let ((e4 (bvnot e2)))
(let ((e5 (store a1 ((_ extract 14 13) e3) ((_ extract 2 1) e2))))
(let ((e6 (store e5 ((_ extract 6 5) e2) ((_ extract 8 7) e3))))
(let ((e7 (store e6 ((_ extract 1 0) e4) ((_ extract 14 13) e4))))
(let ((e8 (select e6 ((_ extract 9 8) e3))))
(let ((e9 (select e6 e8)))
(let ((e10 (select e6 e8)))
(let ((e11 (store e6 ((_ extract 14 13) e2) e8)))
(let ((e12 (select e7 ((_ extract 15 14) v0))))
(let ((e13 (store a1 e8 e12)))
(let ((e14 (select e5 e8)))
(let ((e15 (bvand e2 e2)))
(let ((e16 (bvudiv e10 e12)))
(let ((e17 (ite (bvslt e8 e10) (_ bv1 1) (_ bv0 1))))
(let ((e18 ((_ extract 1 0) e14)))
(let ((e19 (bvadd v0 ((_ sign_extend 14) e16))))
(let ((e20 (bvurem ((_ sign_extend 14) e18) e3)))
(let ((e21 (bvneg e8)))
(let ((e22 (bvsub ((_ sign_extend 14) e21) e19)))
(let ((e23 ((_ rotate_right 13) e3)))
(let ((e24 ((_ zero_extend 12) e17)))
(let ((e25 (bvlshr ((_ sign_extend 11) e18) e24)))
(let ((e26 (bvxor e21 e9)))
(let ((e27 (bvnot e10)))
(let ((e28 (bvnor e27 e26)))
(let ((e29 (bvsub e4 ((_ zero_extend 13) e14))))
(let ((e30 (distinct e3 ((_ sign_extend 3) e25))))
(let ((e31 (bvult e8 e14)))
(let ((e32 (bvugt e3 e19)))
(let ((e33 (distinct e21 e28)))
(let ((e34 (bvsle ((_ sign_extend 11) e28) e25)))
(let ((e35 (bvsle e20 ((_ zero_extend 1) e15))))
(let ((e36 (bvsle ((_ zero_extend 14) e27) v0)))
(let ((e37 (bvult e2 ((_ sign_extend 13) e9))))
(let ((e38 (bvugt ((_ sign_extend 11) e26) e25)))
(let ((e39 (bvult e19 ((_ sign_extend 3) e25))))
(let ((e40 (bvslt ((_ zero_extend 1) e17) e16)))
(let ((e41 (bvsgt e16 e10)))
(let ((e42 (distinct ((_ zero_extend 14) e14) e20)))
(let ((e43 (= e9 e18)))
(let ((e44 (distinct v0 e3)))
(let ((e45 (bvult ((_ zero_extend 2) e24) e2)))
(let ((e46 (bvsle ((_ sign_extend 15) e17) e19)))
(let ((e47 (bvule ((_ zero_extend 1) e2) e19)))
(let ((e48 (bvsle e19 e23)))
(let ((e49 (bvslt e2 ((_ zero_extend 13) e9))))
(let ((e50 (bvsgt e18 e14)))
(let ((e51 (bvult e28 e16)))
(let ((e52 (bvuge ((_ zero_extend 13) e9) e29)))
(let ((e53 (bvugt e19 ((_ zero_extend 14) e10))))
(let ((e54 (bvule e28 e8)))
(let ((e55 (bvslt e28 e16)))
(let ((e56 (= e18 e16)))
(let ((e57 (bvsge e21 ((_ zero_extend 1) e17))))
(let ((e58 (bvult e29 ((_ sign_extend 13) e8))))
(let ((e59 (bvsle e21 e27)))
(let ((e60 (bvugt ((_ zero_extend 14) e10) e19)))
(let ((e61 (distinct e4 ((_ zero_extend 2) e25))))
(let ((e62 (bvuge e10 e10)))
(let ((e63 (bvsle e20 ((_ sign_extend 3) e24))))
(let ((e64 (bvuge v0 ((_ sign_extend 14) e9))))
(let ((e65 (bvsgt e3 ((_ zero_extend 3) e24))))
(let ((e66 (bvsle e29 ((_ zero_extend 13) e18))))
(let ((e67 (bvsle ((_ sign_extend 14) e12) e20)))
(let ((e68 (bvsge ((_ zero_extend 13) e16) e29)))
(let ((e69 (bvuge e16 e8)))
(let ((e70 (bvugt e22 ((_ zero_extend 14) e9))))
(let ((e71 (= e51 e36)))
(let ((e72 (not e58)))
(let ((e73 (xor e30 e72)))
(let ((e74 (=> e55 e37)))
(let ((e75 (=> e62 e46)))
(let ((e76 (or e64 e42)))
(let ((e77 (not e47)))
(let ((e78 (ite e71 e60 e68)))
(let ((e79 (= e49 e78)))
(let ((e80 (xor e43 e33)))
(let ((e81 (=> e66 e80)))
(let ((e82 (or e63 e65)))
(let ((e83 (ite e81 e40 e70)))
(let ((e84 (ite e61 e41 e45)))
(let ((e85 (=> e69 e84)))
(let ((e86 (not e79)))
(let ((e87 (not e44)))
(let ((e88 (not e34)))
(let ((e89 (not e50)))
(let ((e90 (and e74 e77)))
(let ((e91 (and e59 e75)))
(let ((e92 (=> e87 e32)))
(let ((e93 (= e82 e76)))
(let ((e94 (ite e56 e53 e35)))
(let ((e95 (= e52 e52)))
(let ((e96 (=> e31 e67)))
(let ((e97 (ite e96 e39 e88)))
(let ((e98 (or e73 e73)))
(let ((e99 (and e57 e48)))
(let ((e100 (= e92 e83)))
(let ((e101 (xor e38 e98)))
(let ((e102 (or e85 e91)))
(let ((e103 (ite e94 e94 e97)))
(let ((e104 (not e101)))
(let ((e105 (or e95 e95)))
(let ((e106 (= e93 e90)))
(let ((e107 (and e102 e54)))
(let ((e108 (ite e99 e106 e105)))
(let ((e109 (=> e89 e108)))
(let ((e110 (xor e109 e104)))
(let ((e111 (xor e107 e103)))
(let ((e112 (ite e86 e111 e110)))
(let ((e113 (=> e112 e100)))
(let ((e114 (and e113 (not (= e12 (_ bv0 2))))))
(let ((e115 (and e114 (not (= e3 (_ bv0 16))))))
e115
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
