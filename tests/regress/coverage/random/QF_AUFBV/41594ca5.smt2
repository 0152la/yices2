(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 16))
(declare-fun v1 () (_ BitVec 16))
(declare-fun v2 () (_ BitVec 7))
(declare-fun a3 () (Array  (_ BitVec 3)  (_ BitVec 10)))
(declare-fun a4 () (Array  (_ BitVec 6)  (_ BitVec 3)))
(declare-fun a5 () (Array  (_ BitVec 16)  (_ BitVec 9)))
(assert (let ((e6(_ bv25 5)))
(let ((e7 (ite (bvsgt ((_ zero_extend 2) e6) v2) (_ bv1 1) (_ bv0 1))))
(let ((e8 (bvudiv ((_ sign_extend 15) e7) v0)))
(let ((e9 (bvsdiv ((_ zero_extend 9) v2) v1)))
(let ((e10 (store a5 v0 ((_ extract 11 3) v0))))
(let ((e11 (store a4 ((_ extract 5 0) v2) ((_ extract 4 2) e6))))
(let ((e12 (store a5 ((_ zero_extend 15) e7) ((_ extract 13 5) e9))))
(let ((e13 (select a5 v0)))
(let ((e14 (select a3 ((_ extract 2 0) e6))))
(let ((e15 (store e11 ((_ extract 13 8) v0) ((_ sign_extend 2) e7))))
(let ((e16 (select e15 ((_ extract 5 0) v2))))
(let ((e17 (store a5 v1 ((_ extract 9 1) v1))))
(let ((e18 (ite (bvslt e13 ((_ sign_extend 2) v2)) (_ bv1 1) (_ bv0 1))))
(let ((e19 ((_ zero_extend 0) v1)))
(let ((e20 ((_ sign_extend 0) v0)))
(let ((e21 (bvsrem ((_ sign_extend 6) e18) v2)))
(let ((e22 (ite (bvult ((_ zero_extend 4) e16) e21) (_ bv1 1) (_ bv0 1))))
(let ((e23 ((_ extract 3 3) e14)))
(let ((e24 (bvurem ((_ sign_extend 15) e7) v0)))
(let ((e25 (ite (= (_ bv1 1) ((_ extract 13 13) e9)) ((_ zero_extend 15) e22) e9)))
(let ((e26 (ite (bvult e20 ((_ sign_extend 15) e7)) (_ bv1 1) (_ bv0 1))))
(let ((e27 (ite (bvslt e14 ((_ zero_extend 1) e13)) (_ bv1 1) (_ bv0 1))))
(let ((e28 (bvudiv ((_ zero_extend 11) e6) e25)))
(let ((e29 (ite (distinct e25 ((_ sign_extend 7) e13)) (_ bv1 1) (_ bv0 1))))
(let ((e30 (bvsub e8 ((_ zero_extend 15) e7))))
(let ((e31 (bvsge ((_ sign_extend 15) e26) e20)))
(let ((e32 (bvule ((_ zero_extend 13) e16) e20)))
(let ((e33 (bvsgt e30 e28)))
(let ((e34 (bvsgt ((_ zero_extend 15) e23) e30)))
(let ((e35 (distinct e7 e18)))
(let ((e36 (= e8 e25)))
(let ((e37 (bvslt ((_ zero_extend 2) e21) e13)))
(let ((e38 (bvsge v0 e25)))
(let ((e39 (bvslt v2 v2)))
(let ((e40 (bvsge ((_ sign_extend 15) e7) e28)))
(let ((e41 (= e30 ((_ sign_extend 6) e14))))
(let ((e42 (bvule v0 ((_ sign_extend 15) e29))))
(let ((e43 (bvuge e29 e7)))
(let ((e44 (bvult e16 ((_ zero_extend 2) e23))))
(let ((e45 (bvugt e28 e19)))
(let ((e46 (bvult ((_ sign_extend 9) v2) e30)))
(let ((e47 (distinct ((_ zero_extend 13) e16) e9)))
(let ((e48 (bvslt e6 ((_ zero_extend 4) e27))))
(let ((e49 (bvugt ((_ zero_extend 9) v2) e9)))
(let ((e50 (bvult e28 ((_ zero_extend 15) e26))))
(let ((e51 (bvuge e9 ((_ zero_extend 15) e27))))
(let ((e52 (bvugt ((_ zero_extend 2) e27) e16)))
(let ((e53 (bvsge ((_ zero_extend 13) e16) e8)))
(let ((e54 (= e23 e7)))
(let ((e55 (bvsle v1 e30)))
(let ((e56 (distinct ((_ zero_extend 15) e29) e9)))
(let ((e57 (bvuge ((_ zero_extend 15) e27) e30)))
(let ((e58 (bvult e20 ((_ zero_extend 15) e27))))
(let ((e59 (distinct e20 e24)))
(let ((e60 (bvult ((_ zero_extend 7) e13) e19)))
(let ((e61 (bvslt e24 ((_ zero_extend 11) e6))))
(let ((e62 (bvule e19 e25)))
(let ((e63 (distinct e13 ((_ sign_extend 8) e7))))
(let ((e64 (distinct ((_ zero_extend 6) e18) e21)))
(let ((e65 (bvult e8 e30)))
(let ((e66 (bvule e9 v1)))
(let ((e67 (bvult e9 ((_ sign_extend 11) e6))))
(let ((e68 (bvsgt ((_ zero_extend 2) e18) e16)))
(let ((e69 (bvsge e24 ((_ sign_extend 15) e22))))
(let ((e70 (and e43 e39)))
(let ((e71 (or e69 e40)))
(let ((e72 (or e48 e31)))
(let ((e73 (=> e62 e62)))
(let ((e74 (=> e44 e59)))
(let ((e75 (= e49 e42)))
(let ((e76 (not e64)))
(let ((e77 (= e76 e37)))
(let ((e78 (and e45 e71)))
(let ((e79 (xor e65 e47)))
(let ((e80 (or e35 e72)))
(let ((e81 (=> e74 e33)))
(let ((e82 (=> e36 e70)))
(let ((e83 (or e75 e56)))
(let ((e84 (ite e52 e46 e38)))
(let ((e85 (=> e53 e68)))
(let ((e86 (or e73 e66)))
(let ((e87 (or e83 e67)))
(let ((e88 (or e41 e34)))
(let ((e89 (ite e55 e61 e86)))
(let ((e90 (or e89 e57)))
(let ((e91 (= e84 e58)))
(let ((e92 (= e82 e63)))
(let ((e93 (not e87)))
(let ((e94 (xor e92 e79)))
(let ((e95 (or e32 e88)))
(let ((e96 (or e78 e85)))
(let ((e97 (not e77)))
(let ((e98 (xor e97 e90)))
(let ((e99 (and e98 e93)))
(let ((e100 (not e50)))
(let ((e101 (or e60 e51)))
(let ((e102 (ite e54 e91 e54)))
(let ((e103 (or e81 e101)))
(let ((e104 (and e102 e103)))
(let ((e105 (= e96 e95)))
(let ((e106 (not e99)))
(let ((e107 (ite e94 e104 e105)))
(let ((e108 (xor e100 e107)))
(let ((e109 (not e80)))
(let ((e110 (xor e109 e109)))
(let ((e111 (xor e106 e110)))
(let ((e112 (and e111 e111)))
(let ((e113 (not e112)))
(let ((e114 (=> e108 e113)))
(let ((e115 (and e114 (not (= v1 (_ bv0 16))))))
(let ((e116 (and e115 (not (= v1 (bvnot (_ bv0 16)))))))
(let ((e117 (and e116 (not (= v0 (_ bv0 16))))))
(let ((e118 (and e117 (not (= e25 (_ bv0 16))))))
(let ((e119 (and e118 (not (= v2 (_ bv0 7))))))
(let ((e120 (and e119 (not (= v2 (bvnot (_ bv0 7)))))))
e120
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
