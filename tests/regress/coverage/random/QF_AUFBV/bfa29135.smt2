(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 9))
(declare-fun v1 () (_ BitVec 6))
(declare-fun v2 () (_ BitVec 12))
(declare-fun v3 () (_ BitVec 10))
(declare-fun v4 () (_ BitVec 5))
(declare-fun a5 () (Array  (_ BitVec 15)  (_ BitVec 3)))
(declare-fun a6 () (Array  (_ BitVec 16)  (_ BitVec 5)))
(declare-fun a7 () (Array  (_ BitVec 5)  (_ BitVec 15)))
(assert (let ((e8(_ bv6 3)))
(let ((e9 (ite (bvsgt ((_ zero_extend 3) v1) v0) (_ bv1 1) (_ bv0 1))))
(let ((e10 ((_ rotate_right 4) v2)))
(let ((e11 (ite (bvugt e10 e10) (_ bv1 1) (_ bv0 1))))
(let ((e12 (ite (bvuge v3 v3) (_ bv1 1) (_ bv0 1))))
(let ((e13 (ite (bvule v1 ((_ sign_extend 5) e11)) (_ bv1 1) (_ bv0 1))))
(let ((e14 ((_ zero_extend 9) v4)))
(let ((e15 (bvsub e8 ((_ zero_extend 2) e9))))
(let ((e16 (store a5 ((_ zero_extend 12) e8) e15)))
(let ((e17 (select a5 ((_ zero_extend 3) v2))))
(let ((e18 (store a7 v4 ((_ sign_extend 14) e11))))
(let ((e19 (select e16 ((_ sign_extend 3) v2))))
(let ((e20 (bvashr ((_ zero_extend 11) e19) e14)))
(let ((e21 (bvadd ((_ zero_extend 3) v0) v2)))
(let ((e22 ((_ rotate_right 0) e8)))
(let ((e23 (bvneg v0)))
(let ((e24 (bvlshr ((_ zero_extend 11) e11) e21)))
(let ((e25 (ite (bvult e24 e21) (_ bv1 1) (_ bv0 1))))
(let ((e26 (bvxor ((_ sign_extend 7) v4) e24)))
(let ((e27 ((_ rotate_right 6) e10)))
(let ((e28 (bvnor ((_ sign_extend 6) v1) e10)))
(let ((e29 (bvnot e15)))
(let ((e30 (ite (bvsgt e28 ((_ sign_extend 3) e23)) (_ bv1 1) (_ bv0 1))))
(let ((e31 ((_ rotate_right 0) e12)))
(let ((e32 ((_ rotate_left 0) e13)))
(let ((e33 (bvand ((_ sign_extend 7) e17) v3)))
(let ((e34 (bvsdiv ((_ sign_extend 7) v4) e28)))
(let ((e35 ((_ rotate_left 8) e21)))
(let ((e36 (bvand ((_ sign_extend 2) e9) e19)))
(let ((e37 (distinct v1 ((_ sign_extend 5) e25))))
(let ((e38 (bvslt ((_ zero_extend 13) e25) e14)))
(let ((e39 (bvslt e35 ((_ sign_extend 9) e22))))
(let ((e40 (bvuge ((_ zero_extend 4) v3) e20)))
(let ((e41 (bvule ((_ sign_extend 4) e25) v4)))
(let ((e42 (bvule ((_ sign_extend 11) e31) e28)))
(let ((e43 (bvsge e13 e11)))
(let ((e44 (bvsgt ((_ sign_extend 11) e25) e34)))
(let ((e45 (bvslt ((_ zero_extend 7) e29) v3)))
(let ((e46 (distinct v2 e34)))
(let ((e47 (bvslt e10 ((_ sign_extend 3) v0))))
(let ((e48 (bvslt e34 e24)))
(let ((e49 (= e29 ((_ sign_extend 2) e25))))
(let ((e50 (= e19 e15)))
(let ((e51 (bvsle ((_ zero_extend 7) v4) e27)))
(let ((e52 (bvugt v0 ((_ zero_extend 3) v1))))
(let ((e53 (bvule ((_ sign_extend 11) e13) e26)))
(let ((e54 (bvugt e9 e12)))
(let ((e55 (bvule ((_ zero_extend 9) e36) e28)))
(let ((e56 (bvsgt v2 e21)))
(let ((e57 (bvult e26 ((_ zero_extend 9) e22))))
(let ((e58 (bvuge v3 ((_ sign_extend 9) e32))))
(let ((e59 (distinct ((_ zero_extend 11) e13) e24)))
(let ((e60 (bvslt e29 e8)))
(let ((e61 (bvsgt ((_ sign_extend 7) e15) e33)))
(let ((e62 (bvsge ((_ zero_extend 2) e12) e36)))
(let ((e63 (bvuge ((_ sign_extend 2) e30) e29)))
(let ((e64 (bvule ((_ sign_extend 6) v1) e28)))
(let ((e65 (bvslt ((_ sign_extend 2) e27) e20)))
(let ((e66 (distinct ((_ sign_extend 3) e23) e10)))
(let ((e67 (bvuge e27 ((_ sign_extend 11) e13))))
(let ((e68 (bvult ((_ zero_extend 9) v4) e14)))
(let ((e69 (= e26 ((_ zero_extend 9) e29))))
(let ((e70 (= e34 e26)))
(let ((e71 (bvsgt e32 e12)))
(let ((e72 (bvsge ((_ zero_extend 11) e13) e24)))
(let ((e73 (bvsgt e35 e27)))
(let ((e74 (bvslt ((_ sign_extend 11) e12) e34)))
(let ((e75 (bvuge ((_ zero_extend 11) e12) e34)))
(let ((e76 (bvuge e19 ((_ sign_extend 2) e9))))
(let ((e77 (= e34 ((_ sign_extend 11) e30))))
(let ((e78 (= ((_ sign_extend 9) e17) e28)))
(let ((e79 (=> e66 e68)))
(let ((e80 (and e48 e45)))
(let ((e81 (or e41 e70)))
(let ((e82 (and e54 e54)))
(let ((e83 (xor e39 e76)))
(let ((e84 (= e57 e60)))
(let ((e85 (ite e50 e52 e59)))
(let ((e86 (=> e53 e63)))
(let ((e87 (= e71 e73)))
(let ((e88 (and e79 e49)))
(let ((e89 (and e82 e77)))
(let ((e90 (= e75 e40)))
(let ((e91 (or e58 e81)))
(let ((e92 (=> e42 e69)))
(let ((e93 (xor e90 e88)))
(let ((e94 (or e55 e86)))
(let ((e95 (= e74 e93)))
(let ((e96 (and e37 e87)))
(let ((e97 (= e83 e95)))
(let ((e98 (= e84 e72)))
(let ((e99 (not e85)))
(let ((e100 (=> e56 e99)))
(let ((e101 (= e46 e94)))
(let ((e102 (=> e96 e43)))
(let ((e103 (and e47 e47)))
(let ((e104 (not e65)))
(let ((e105 (and e78 e100)))
(let ((e106 (ite e80 e105 e105)))
(let ((e107 (or e61 e38)))
(let ((e108 (or e67 e103)))
(let ((e109 (or e102 e98)))
(let ((e110 (or e109 e104)))
(let ((e111 (=> e64 e101)))
(let ((e112 (xor e51 e51)))
(let ((e113 (xor e97 e92)))
(let ((e114 (=> e110 e112)))
(let ((e115 (ite e44 e91 e89)))
(let ((e116 (xor e106 e62)))
(let ((e117 (or e107 e115)))
(let ((e118 (xor e108 e108)))
(let ((e119 (or e116 e113)))
(let ((e120 (=> e111 e111)))
(let ((e121 (=> e118 e119)))
(let ((e122 (not e120)))
(let ((e123 (ite e117 e122 e117)))
(let ((e124 (=> e121 e114)))
(let ((e125 (not e123)))
(let ((e126 (= e124 e125)))
(let ((e127 (and e126 (not (= e28 (_ bv0 12))))))
(let ((e128 (and e127 (not (= e28 (bvnot (_ bv0 12)))))))
e128
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
