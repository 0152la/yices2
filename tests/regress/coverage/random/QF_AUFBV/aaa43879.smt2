(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 14))
(declare-fun a1 () (Array  (_ BitVec 4)  (_ BitVec 4)))
(assert (let ((e2(_ bv107 7)))
(let ((e3(_ bv1762 13)))
(let ((e4 (bvnor e3 e3)))
(let ((e5 (ite (bvule ((_ zero_extend 1) e3) v0) (_ bv1 1) (_ bv0 1))))
(let ((e6 (ite (bvugt ((_ sign_extend 6) e2) e4) (_ bv1 1) (_ bv0 1))))
(let ((e7 (store a1 ((_ extract 5 2) e2) ((_ sign_extend 3) e6))))
(let ((e8 (select a1 ((_ zero_extend 3) e5))))
(let ((e9 (select e7 ((_ zero_extend 3) e5))))
(let ((e10 (select a1 e8)))
(let ((e11 (select e7 ((_ zero_extend 3) e6))))
(let ((e12 (select a1 ((_ extract 8 5) e3))))
(let ((e13 (ite (bvuge e10 ((_ zero_extend 3) e5)) (_ bv1 1) (_ bv0 1))))
(let ((e14 (ite (= (_ bv1 1) ((_ extract 2 2) e9)) v0 ((_ sign_extend 13) e6))))
(let ((e15 (bvshl v0 ((_ sign_extend 1) e3))))
(let ((e16 (ite (bvule e4 ((_ sign_extend 9) e12)) (_ bv1 1) (_ bv0 1))))
(let ((e17 (bvnot e6)))
(let ((e18 (ite (bvugt e2 e2) (_ bv1 1) (_ bv0 1))))
(let ((e19 (ite (bvsle ((_ sign_extend 10) e8) v0) (_ bv1 1) (_ bv0 1))))
(let ((e20 (ite (bvugt ((_ sign_extend 3) e18) e8) (_ bv1 1) (_ bv0 1))))
(let ((e21 (ite (= (_ bv1 1) ((_ extract 3 3) e11)) e5 e19)))
(let ((e22 (bvult ((_ zero_extend 12) e18) e4)))
(let ((e23 (= e20 e20)))
(let ((e24 (distinct e10 e8)))
(let ((e25 (bvule e10 ((_ sign_extend 3) e20))))
(let ((e26 (bvsgt ((_ sign_extend 3) e9) e2)))
(let ((e27 (bvuge ((_ zero_extend 13) e6) v0)))
(let ((e28 (distinct e10 e12)))
(let ((e29 (bvuge e8 ((_ sign_extend 3) e21))))
(let ((e30 (bvsle e2 ((_ zero_extend 3) e11))))
(let ((e31 (bvugt ((_ zero_extend 3) e6) e10)))
(let ((e32 (bvuge e15 ((_ sign_extend 13) e20))))
(let ((e33 (bvslt e10 e12)))
(let ((e34 (bvuge ((_ sign_extend 9) e8) e4)))
(let ((e35 (bvslt e10 e12)))
(let ((e36 (bvsle ((_ sign_extend 3) e17) e11)))
(let ((e37 (bvslt ((_ sign_extend 13) e13) e15)))
(let ((e38 (bvule ((_ sign_extend 9) e9) e3)))
(let ((e39 (distinct ((_ sign_extend 13) e21) e15)))
(let ((e40 (bvsle ((_ zero_extend 1) e4) e15)))
(let ((e41 (bvsge e17 e13)))
(let ((e42 (bvsgt e3 ((_ zero_extend 12) e19))))
(let ((e43 (bvsle ((_ zero_extend 12) e6) e3)))
(let ((e44 (bvsge e18 e5)))
(let ((e45 (bvule e18 e17)))
(let ((e46 (distinct ((_ zero_extend 10) e12) e14)))
(let ((e47 (bvugt ((_ zero_extend 9) e12) e4)))
(let ((e48 (bvule e12 ((_ sign_extend 3) e6))))
(let ((e49 (bvsle e19 e17)))
(let ((e50 (bvuge ((_ zero_extend 12) e18) e4)))
(let ((e51 (bvsgt e14 ((_ sign_extend 13) e13))))
(let ((e52 (bvsgt ((_ zero_extend 12) e21) e4)))
(let ((e53 (bvule ((_ sign_extend 12) e16) e4)))
(let ((e54 (ite e43 e53 e22)))
(let ((e55 (=> e32 e36)))
(let ((e56 (or e30 e51)))
(let ((e57 (xor e56 e23)))
(let ((e58 (ite e44 e41 e40)))
(let ((e59 (=> e45 e24)))
(let ((e60 (= e58 e52)))
(let ((e61 (xor e59 e25)))
(let ((e62 (= e33 e38)))
(let ((e63 (=> e34 e34)))
(let ((e64 (= e29 e35)))
(let ((e65 (=> e37 e57)))
(let ((e66 (or e55 e42)))
(let ((e67 (=> e27 e31)))
(let ((e68 (xor e60 e64)))
(let ((e69 (=> e62 e63)))
(let ((e70 (and e54 e66)))
(let ((e71 (=> e68 e69)))
(let ((e72 (not e48)))
(let ((e73 (not e26)))
(let ((e74 (= e28 e73)))
(let ((e75 (ite e50 e39 e47)))
(let ((e76 (=> e70 e67)))
(let ((e77 (and e65 e65)))
(let ((e78 (= e46 e72)))
(let ((e79 (and e75 e78)))
(let ((e80 (=> e61 e74)))
(let ((e81 (not e76)))
(let ((e82 (= e71 e77)))
(let ((e83 (xor e80 e80)))
(let ((e84 (xor e81 e83)))
(let ((e85 (ite e49 e84 e84)))
(let ((e86 (=> e79 e82)))
(let ((e87 (= e85 e86)))
e87
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
