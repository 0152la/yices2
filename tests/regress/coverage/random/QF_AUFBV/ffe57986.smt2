(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 13))
(declare-fun v1 () (_ BitVec 14))
(declare-fun v2 () (_ BitVec 5))
(declare-fun v3 () (_ BitVec 10))
(declare-fun v4 () (_ BitVec 15))
(declare-fun a5 () (Array  (_ BitVec 1)  (_ BitVec 12)))
(assert (let ((e6(_ bv216 8)))
(let ((e7 (bvnor v4 ((_ sign_extend 10) v2))))
(let ((e8 ((_ zero_extend 1) e7)))
(let ((e9 (bvudiv ((_ sign_extend 7) e6) e7)))
(let ((e10 (bvnot v0)))
(let ((e11 (bvsdiv ((_ sign_extend 3) v3) v0)))
(let ((e12 (bvneg e8)))
(let ((e13 (bvnor e12 ((_ zero_extend 1) e9))))
(let ((e14 (bvnand v1 ((_ sign_extend 1) e11))))
(let ((e15 (store a5 ((_ extract 5 5) e8) ((_ extract 13 2) e7))))
(let ((e16 (store e15 ((_ extract 8 8) v0) ((_ extract 13 2) v1))))
(let ((e17 (select a5 ((_ extract 3 3) v2))))
(let ((e18 (store e15 ((_ extract 7 7) e6) ((_ extract 11 0) e8))))
(let ((e19 (store e15 ((_ extract 7 7) e10) ((_ extract 11 0) v1))))
(let ((e20 (bvor e17 ((_ sign_extend 2) v3))))
(let ((e21 (ite (bvsge e10 ((_ zero_extend 3) v3)) (_ bv1 1) (_ bv0 1))))
(let ((e22 (bvnor ((_ sign_extend 4) e20) e8)))
(let ((e23 (ite (bvsge ((_ sign_extend 10) v2) e7) (_ bv1 1) (_ bv0 1))))
(let ((e24 (bvxor ((_ sign_extend 5) v3) e9)))
(let ((e25 (bvsrem ((_ zero_extend 3) v0) e12)))
(let ((e26 (bvudiv ((_ zero_extend 8) e6) e13)))
(let ((e27 (ite (bvslt e11 ((_ sign_extend 1) e20)) (_ bv1 1) (_ bv0 1))))
(let ((e28 (bvsrem ((_ sign_extend 1) e11) v1)))
(let ((e29 (ite (bvslt v4 ((_ zero_extend 1) e14)) (_ bv1 1) (_ bv0 1))))
(let ((e30 (bvuge e23 e23)))
(let ((e31 (bvsgt ((_ zero_extend 1) e9) e25)))
(let ((e32 (bvslt ((_ zero_extend 11) e27) e17)))
(let ((e33 (bvslt e14 ((_ sign_extend 13) e21))))
(let ((e34 (bvuge e22 ((_ sign_extend 4) e20))))
(let ((e35 (bvult e24 ((_ sign_extend 14) e29))))
(let ((e36 (bvsgt e25 ((_ zero_extend 2) e28))))
(let ((e37 (distinct ((_ zero_extend 15) e23) e13)))
(let ((e38 (bvsge e13 ((_ sign_extend 6) v3))))
(let ((e39 (distinct ((_ sign_extend 1) v1) e7)))
(let ((e40 (bvsgt e9 ((_ sign_extend 14) e23))))
(let ((e41 (bvule e25 ((_ sign_extend 11) v2))))
(let ((e42 (bvsgt e7 ((_ sign_extend 7) e6))))
(let ((e43 (bvugt e13 ((_ sign_extend 2) e14))))
(let ((e44 (bvule e25 ((_ sign_extend 6) v3))))
(let ((e45 (bvugt e22 ((_ sign_extend 8) e6))))
(let ((e46 (bvugt ((_ zero_extend 2) e28) e22)))
(let ((e47 (bvsgt e17 ((_ sign_extend 11) e23))))
(let ((e48 (bvult e7 ((_ zero_extend 1) e28))))
(let ((e49 (bvule ((_ sign_extend 4) e21) v2)))
(let ((e50 (distinct ((_ sign_extend 14) e21) e7)))
(let ((e51 (bvslt e25 ((_ sign_extend 1) e24))))
(let ((e52 (bvule e21 e27)))
(let ((e53 (bvugt ((_ sign_extend 1) e11) e14)))
(let ((e54 (bvugt e12 ((_ zero_extend 1) e7))))
(let ((e55 (= ((_ zero_extend 2) e6) v3)))
(let ((e56 (bvsgt e26 ((_ zero_extend 3) v0))))
(let ((e57 (bvsgt ((_ zero_extend 1) e17) e11)))
(let ((e58 (bvule ((_ zero_extend 3) v2) e6)))
(let ((e59 (bvule ((_ zero_extend 1) v1) e9)))
(let ((e60 (distinct ((_ sign_extend 3) e11) e22)))
(let ((e61 (bvult ((_ sign_extend 8) v2) e10)))
(let ((e62 (bvsle e7 ((_ sign_extend 14) e23))))
(let ((e63 (bvuge e13 ((_ zero_extend 15) e29))))
(let ((e64 (bvuge ((_ sign_extend 1) e9) e12)))
(let ((e65 (bvsle ((_ sign_extend 7) v2) e17)))
(let ((e66 (bvsge e8 ((_ sign_extend 15) e29))))
(let ((e67 (bvslt e26 ((_ sign_extend 1) e9))))
(let ((e68 (bvugt e22 ((_ zero_extend 4) e17))))
(let ((e69 (bvuge e24 ((_ zero_extend 14) e23))))
(let ((e70 (distinct ((_ zero_extend 2) v1) e12)))
(let ((e71 (bvsgt ((_ zero_extend 2) e28) e8)))
(let ((e72 (bvslt ((_ zero_extend 3) v3) v0)))
(let ((e73 (= e12 e8)))
(let ((e74 (bvsle e25 ((_ zero_extend 3) e10))))
(let ((e75 (distinct ((_ sign_extend 15) e27) e8)))
(let ((e76 (bvult ((_ zero_extend 9) v2) v1)))
(let ((e77 (bvult ((_ zero_extend 3) e10) e22)))
(let ((e78 (bvugt e9 ((_ zero_extend 2) e10))))
(let ((e79 (bvult e13 ((_ sign_extend 4) e17))))
(let ((e80 (bvult e14 ((_ zero_extend 13) e23))))
(let ((e81 (bvult ((_ sign_extend 11) e27) e17)))
(let ((e82 (bvsge ((_ sign_extend 5) v3) e9)))
(let ((e83 (bvsgt v2 v2)))
(let ((e84 (bvugt e26 ((_ sign_extend 1) e24))))
(let ((e85 (= e12 ((_ sign_extend 15) e21))))
(let ((e86 (bvsgt ((_ zero_extend 15) e29) e25)))
(let ((e87 (= v1 ((_ sign_extend 1) v0))))
(let ((e88 (distinct e8 e26)))
(let ((e89 (= e9 ((_ sign_extend 1) e28))))
(let ((e90 (bvule e22 ((_ zero_extend 11) v2))))
(let ((e91 (bvsle e25 ((_ sign_extend 15) e27))))
(let ((e92 (bvult ((_ sign_extend 12) e21) v0)))
(let ((e93 (bvule ((_ zero_extend 2) e14) e22)))
(let ((e94 (bvugt ((_ zero_extend 15) e27) e25)))
(let ((e95 (distinct e8 ((_ sign_extend 15) e21))))
(let ((e96 (distinct e25 ((_ sign_extend 6) v3))))
(let ((e97 (bvslt ((_ sign_extend 13) e27) e14)))
(let ((e98 (bvslt e25 ((_ sign_extend 2) e14))))
(let ((e99 (bvsle e17 ((_ sign_extend 11) e29))))
(let ((e100 (bvuge ((_ zero_extend 12) e29) e11)))
(let ((e101 (bvult e28 e28)))
(let ((e102 (bvsge ((_ sign_extend 15) e29) e25)))
(let ((e103 (bvsle e22 ((_ zero_extend 15) e23))))
(let ((e104 (bvsgt e7 ((_ zero_extend 2) e11))))
(let ((e105 (bvult e27 e23)))
(let ((e106 (bvult ((_ sign_extend 3) e11) e26)))
(let ((e107 (bvsge v2 v2)))
(let ((e108 (bvsge ((_ zero_extend 1) e9) e13)))
(let ((e109 (bvsle e26 e22)))
(let ((e110 (= ((_ zero_extend 8) e6) e26)))
(let ((e111 (bvule ((_ zero_extend 3) e11) e12)))
(let ((e112 (= e28 ((_ zero_extend 2) e17))))
(let ((e113 (bvsge e25 ((_ zero_extend 15) e27))))
(let ((e114 (bvult e28 ((_ zero_extend 1) e11))))
(let ((e115 (bvugt ((_ zero_extend 5) e6) e11)))
(let ((e116 (bvule ((_ zero_extend 1) e20) e11)))
(let ((e117 (bvsge e25 ((_ zero_extend 8) e6))))
(let ((e118 (bvsgt e7 ((_ sign_extend 14) e29))))
(let ((e119 (bvule e25 ((_ sign_extend 1) e24))))
(let ((e120 (bvslt ((_ zero_extend 1) e28) e24)))
(let ((e121 (bvsle ((_ sign_extend 14) e23) v4)))
(let ((e122 (xor e35 e52)))
(let ((e123 (ite e63 e73 e33)))
(let ((e124 (not e78)))
(let ((e125 (not e45)))
(let ((e126 (and e38 e111)))
(let ((e127 (and e98 e100)))
(let ((e128 (ite e80 e108 e82)))
(let ((e129 (ite e61 e104 e59)))
(let ((e130 (and e65 e56)))
(let ((e131 (and e101 e130)))
(let ((e132 (ite e122 e109 e107)))
(let ((e133 (xor e34 e110)))
(let ((e134 (not e58)))
(let ((e135 (xor e75 e32)))
(let ((e136 (or e91 e87)))
(let ((e137 (xor e118 e125)))
(let ((e138 (not e46)))
(let ((e139 (= e124 e121)))
(let ((e140 (xor e106 e135)))
(let ((e141 (= e40 e120)))
(let ((e142 (= e39 e53)))
(let ((e143 (or e90 e132)))
(let ((e144 (=> e37 e60)))
(let ((e145 (and e92 e64)))
(let ((e146 (or e47 e49)))
(let ((e147 (xor e70 e142)))
(let ((e148 (= e133 e62)))
(let ((e149 (or e86 e71)))
(let ((e150 (not e31)))
(let ((e151 (ite e144 e113 e150)))
(let ((e152 (= e74 e140)))
(let ((e153 (ite e69 e147 e115)))
(let ((e154 (and e95 e42)))
(let ((e155 (or e76 e89)))
(let ((e156 (or e51 e97)))
(let ((e157 (not e36)))
(let ((e158 (and e99 e102)))
(let ((e159 (and e105 e83)))
(let ((e160 (xor e72 e154)))
(let ((e161 (xor e136 e152)))
(let ((e162 (xor e146 e134)))
(let ((e163 (xor e54 e54)))
(let ((e164 (ite e128 e117 e68)))
(let ((e165 (xor e141 e126)))
(let ((e166 (not e119)))
(let ((e167 (=> e166 e66)))
(let ((e168 (or e157 e162)))
(let ((e169 (xor e55 e161)))
(let ((e170 (not e138)))
(let ((e171 (or e153 e131)))
(let ((e172 (ite e139 e103 e114)))
(let ((e173 (not e77)))
(let ((e174 (or e155 e93)))
(let ((e175 (and e116 e164)))
(let ((e176 (=> e127 e44)))
(let ((e177 (xor e151 e57)))
(let ((e178 (=> e79 e170)))
(let ((e179 (and e43 e96)))
(let ((e180 (= e158 e67)))
(let ((e181 (not e145)))
(let ((e182 (ite e148 e84 e168)))
(let ((e183 (not e163)))
(let ((e184 (not e149)))
(let ((e185 (ite e178 e169 e180)))
(let ((e186 (or e143 e174)))
(let ((e187 (=> e123 e173)))
(let ((e188 (not e176)))
(let ((e189 (=> e85 e165)))
(let ((e190 (= e183 e177)))
(let ((e191 (=> e137 e172)))
(let ((e192 (or e48 e182)))
(let ((e193 (ite e187 e156 e187)))
(let ((e194 (xor e179 e181)))
(let ((e195 (not e192)))
(let ((e196 (= e30 e129)))
(let ((e197 (ite e194 e194 e195)))
(let ((e198 (or e94 e197)))
(let ((e199 (xor e189 e188)))
(let ((e200 (not e185)))
(let ((e201 (xor e190 e160)))
(let ((e202 (not e201)))
(let ((e203 (not e196)))
(let ((e204 (and e198 e175)))
(let ((e205 (not e203)))
(let ((e206 (=> e205 e171)))
(let ((e207 (and e81 e88)))
(let ((e208 (ite e112 e41 e50)))
(let ((e209 (not e186)))
(let ((e210 (=> e209 e191)))
(let ((e211 (and e210 e200)))
(let ((e212 (=> e167 e206)))
(let ((e213 (or e184 e184)))
(let ((e214 (ite e193 e213 e211)))
(let ((e215 (ite e159 e212 e159)))
(let ((e216 (and e214 e215)))
(let ((e217 (or e204 e208)))
(let ((e218 (or e216 e217)))
(let ((e219 (ite e218 e202 e202)))
(let ((e220 (or e219 e207)))
(let ((e221 (or e220 e199)))
(let ((e222 (and e221 (not (= e13 (_ bv0 16))))))
(let ((e223 (and e222 (not (= e7 (_ bv0 15))))))
(let ((e224 (and e223 (not (= v1 (_ bv0 14))))))
(let ((e225 (and e224 (not (= v1 (bvnot (_ bv0 14)))))))
(let ((e226 (and e225 (not (= v0 (_ bv0 13))))))
(let ((e227 (and e226 (not (= v0 (bvnot (_ bv0 13)))))))
(let ((e228 (and e227 (not (= e12 (_ bv0 16))))))
(let ((e229 (and e228 (not (= e12 (bvnot (_ bv0 16)))))))
e229
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
