(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 13))
(declare-fun a1 () (Array  (_ BitVec 11)  (_ BitVec 12)))
(declare-fun a2 () (Array  (_ BitVec 14)  (_ BitVec 6)))
(assert (let ((e3(_ bv5888 13)))
(let ((e4 (bvurem v0 v0)))
(let ((e5 (bvxor e3 e4)))
(let ((e6 (store a1 ((_ extract 12 2) e4) ((_ extract 12 1) e5))))
(let ((e7 (select e6 ((_ extract 10 0) e4))))
(let ((e8 (select e6 ((_ extract 10 0) e7))))
(let ((e9 (store a1 ((_ extract 11 1) e7) ((_ extract 11 0) e3))))
(let ((e10 (select a2 ((_ sign_extend 2) e8))))
(let ((e11 ((_ repeat 1) e3)))
(let ((e12 (ite (bvsle v0 e11) (_ bv1 1) (_ bv0 1))))
(let ((e13 (bvneg e7)))
(let ((e14 ((_ rotate_right 10) e5)))
(let ((e15 (ite (bvult ((_ zero_extend 7) e10) e3) (_ bv1 1) (_ bv0 1))))
(let ((e16 ((_ sign_extend 2) e7)))
(let ((e17 (bvashr e3 ((_ sign_extend 12) e12))))
(let ((e18 ((_ rotate_left 5) e4)))
(let ((e19 (bvnor e18 ((_ sign_extend 1) e7))))
(let ((e20 (bvsub e4 e18)))
(let ((e21 (concat e13 e12)))
(let ((e22 (ite (bvule e8 e7) (_ bv1 1) (_ bv0 1))))
(let ((e23 (= e3 ((_ sign_extend 1) e13))))
(let ((e24 (bvsge ((_ sign_extend 11) e12) e8)))
(let ((e25 (= e4 ((_ sign_extend 7) e10))))
(let ((e26 (bvult e5 e21)))
(let ((e27 (distinct ((_ sign_extend 7) e10) e14)))
(let ((e28 (bvule ((_ sign_extend 7) e10) e20)))
(let ((e29 (bvsle e21 ((_ sign_extend 1) e8))))
(let ((e30 (distinct e16 ((_ sign_extend 1) e14))))
(let ((e31 (bvsgt e18 ((_ zero_extend 12) e12))))
(let ((e32 (bvult ((_ sign_extend 12) e22) e17)))
(let ((e33 (bvslt e20 e5)))
(let ((e34 (bvsge e16 ((_ sign_extend 1) e5))))
(let ((e35 (bvugt e16 ((_ sign_extend 2) e7))))
(let ((e36 (bvsge e11 ((_ zero_extend 1) e8))))
(let ((e37 (bvsgt e17 e4)))
(let ((e38 (distinct e21 e17)))
(let ((e39 (bvugt ((_ zero_extend 8) e10) e16)))
(let ((e40 (bvugt e21 ((_ sign_extend 12) e12))))
(let ((e41 (bvult e22 e15)))
(let ((e42 (bvult e5 e17)))
(let ((e43 (distinct e20 e11)))
(let ((e44 (bvuge ((_ zero_extend 12) e15) e21)))
(let ((e45 (bvult ((_ sign_extend 12) e12) e3)))
(let ((e46 (bvule e17 e21)))
(let ((e47 (bvsle v0 e11)))
(let ((e48 (bvslt e17 e4)))
(let ((e49 (bvsgt e3 e4)))
(let ((e50 (bvuge ((_ sign_extend 6) e10) e7)))
(let ((e51 (= e18 ((_ sign_extend 7) e10))))
(let ((e52 (= e21 ((_ sign_extend 1) e8))))
(let ((e53 (bvugt ((_ sign_extend 1) e8) e3)))
(let ((e54 (bvult e4 e20)))
(let ((e55 (= e11 e11)))
(let ((e56 (bvslt e19 e14)))
(let ((e57 (ite e33 e54 e43)))
(let ((e58 (or e27 e49)))
(let ((e59 (or e28 e38)))
(let ((e60 (= e35 e35)))
(let ((e61 (and e57 e44)))
(let ((e62 (xor e34 e36)))
(let ((e63 (= e37 e51)))
(let ((e64 (ite e23 e47 e40)))
(let ((e65 (= e29 e60)))
(let ((e66 (= e24 e62)))
(let ((e67 (= e46 e63)))
(let ((e68 (= e56 e45)))
(let ((e69 (xor e66 e31)))
(let ((e70 (or e64 e68)))
(let ((e71 (not e65)))
(let ((e72 (=> e42 e41)))
(let ((e73 (ite e71 e70 e52)))
(let ((e74 (= e61 e32)))
(let ((e75 (= e25 e39)))
(let ((e76 (xor e53 e69)))
(let ((e77 (ite e55 e67 e72)))
(let ((e78 (=> e48 e75)))
(let ((e79 (ite e77 e30 e30)))
(let ((e80 (= e78 e76)))
(let ((e81 (and e50 e58)))
(let ((e82 (not e26)))
(let ((e83 (or e79 e59)))
(let ((e84 (and e74 e73)))
(let ((e85 (xor e83 e83)))
(let ((e86 (or e84 e81)))
(let ((e87 (and e85 e86)))
(let ((e88 (ite e87 e80 e80)))
(let ((e89 (not e82)))
(let ((e90 (=> e88 e89)))
(let ((e91 (and e90 (not (= v0 (_ bv0 13))))))
e91
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
