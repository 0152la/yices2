(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 14))
(declare-fun v1 () (_ BitVec 15))
(declare-fun v2 () (_ BitVec 3))
(declare-fun v3 () (_ BitVec 3))
(declare-fun v4 () (_ BitVec 11))
(declare-fun a5 () (Array  (_ BitVec 14)  (_ BitVec 12)))
(assert (let ((e6(_ bv2318 13)))
(let ((e7 (bvurem ((_ sign_extend 12) v3) v1)))
(let ((e8 (bvmul ((_ zero_extend 4) v4) e7)))
(let ((e9 ((_ extract 8 8) v4)))
(let ((e10 (bvudiv v1 v1)))
(let ((e11 ((_ extract 8 1) v0)))
(let ((e12 (bvsrem ((_ zero_extend 12) e9) e6)))
(let ((e13 (bvneg v0)))
(let ((e14 (bvnot v1)))
(let ((e15 (bvsub ((_ zero_extend 10) v2) e12)))
(let ((e16 (store a5 ((_ zero_extend 6) e11) ((_ sign_extend 4) e11))))
(let ((e17 (store a5 ((_ extract 13 0) e10) ((_ extract 11 0) e12))))
(let ((e18 (select e16 ((_ sign_extend 1) e15))))
(let ((e19 (select e17 ((_ extract 14 1) e8))))
(let ((e20 (select e16 ((_ extract 13 0) e8))))
(let ((e21 (store e16 e13 ((_ zero_extend 1) v4))))
(let ((e22 (select e21 ((_ extract 14 1) e10))))
(let ((e23 (store e17 ((_ zero_extend 2) e18) ((_ extract 12 1) e12))))
(let ((e24 (select e23 ((_ sign_extend 13) e9))))
(let ((e25 (bvnor ((_ zero_extend 3) e19) e10)))
(let ((e26 (bvxnor e10 ((_ sign_extend 12) v2))))
(let ((e27 (bvsdiv ((_ sign_extend 3) e22) e7)))
(let ((e28 (bvnot e22)))
(let ((e29 (ite (bvslt e10 ((_ zero_extend 2) e15)) (_ bv1 1) (_ bv0 1))))
(let ((e30 (bvand e10 ((_ zero_extend 7) e11))))
(let ((e31 ((_ repeat 1) e12)))
(let ((e32 (ite (bvult e13 ((_ zero_extend 11) v3)) (_ bv1 1) (_ bv0 1))))
(let ((e33 (bvnot e9)))
(let ((e34 (bvsrem ((_ sign_extend 13) e32) v0)))
(let ((e35 (bvxor ((_ zero_extend 3) e28) e26)))
(let ((e36 (bvsub e24 e22)))
(let ((e37 (ite (= (_ bv1 1) ((_ extract 10 10) e6)) v4 v4)))
(let ((e38 (ite (= (_ bv1 1) ((_ extract 3 3) v0)) ((_ zero_extend 11) e9) e19)))
(let ((e39 ((_ sign_extend 0) e20)))
(let ((e40 (bvor ((_ zero_extend 11) e29) e20)))
(let ((e41 (bvnor v1 ((_ zero_extend 3) e22))))
(let ((e42 (ite (bvuge e40 e28) (_ bv1 1) (_ bv0 1))))
(let ((e43 ((_ repeat 1) e30)))
(let ((e44 (bvcomp e11 ((_ sign_extend 7) e42))))
(let ((e45 ((_ rotate_left 7) v1)))
(let ((e46 (bvadd ((_ sign_extend 11) e42) e36)))
(let ((e47 (bvnot e14)))
(let ((e48 (bvneg v4)))
(let ((e49 (bvsrem ((_ sign_extend 14) e44) e26)))
(let ((e50 (bvmul e8 e47)))
(let ((e51 ((_ rotate_left 9) e30)))
(let ((e52 (bvnor e18 e28)))
(let ((e53 (bvsge e30 v1)))
(let ((e54 (= e20 ((_ zero_extend 11) e32))))
(let ((e55 (bvult e43 e41)))
(let ((e56 (bvslt e43 ((_ zero_extend 14) e9))))
(let ((e57 (bvuge e34 ((_ zero_extend 2) e18))))
(let ((e58 (bvslt e27 ((_ zero_extend 3) e19))))
(let ((e59 (= e18 e36)))
(let ((e60 (bvsle e9 e44)))
(let ((e61 (distinct ((_ zero_extend 11) e33) e28)))
(let ((e62 (bvsge e37 ((_ zero_extend 10) e32))))
(let ((e63 (bvslt ((_ zero_extend 7) e33) e11)))
(let ((e64 (bvugt ((_ zero_extend 14) e32) e26)))
(let ((e65 (distinct ((_ zero_extend 2) e48) e31)))
(let ((e66 (bvsle e10 e30)))
(let ((e67 (bvslt e25 ((_ sign_extend 4) v4))))
(let ((e68 (bvsgt ((_ sign_extend 13) e42) v0)))
(let ((e69 (bvugt e34 ((_ sign_extend 1) e31))))
(let ((e70 (= e41 ((_ sign_extend 3) e24))))
(let ((e71 (bvsgt e47 ((_ zero_extend 4) e48))))
(let ((e72 (bvsge e25 ((_ zero_extend 2) e12))))
(let ((e73 (bvsle v0 ((_ sign_extend 1) e15))))
(let ((e74 (= ((_ sign_extend 6) e11) e34)))
(let ((e75 (= ((_ zero_extend 14) e29) e27)))
(let ((e76 (distinct v0 ((_ sign_extend 13) e29))))
(let ((e77 (= e30 e51)))
(let ((e78 (bvuge ((_ zero_extend 1) e40) e15)))
(let ((e79 (bvult ((_ sign_extend 1) e48) e52)))
(let ((e80 (bvugt e18 ((_ sign_extend 9) v2))))
(let ((e81 (bvuge ((_ sign_extend 12) v2) e8)))
(let ((e82 (bvuge e50 e10)))
(let ((e83 (distinct ((_ sign_extend 1) e46) e6)))
(let ((e84 (bvsge ((_ zero_extend 3) e38) e26)))
(let ((e85 (bvslt ((_ sign_extend 2) e39) e34)))
(let ((e86 (bvult ((_ sign_extend 2) e12) e8)))
(let ((e87 (bvule ((_ sign_extend 3) e39) v1)))
(let ((e88 (bvule ((_ sign_extend 2) e6) e49)))
(let ((e89 (= e22 e19)))
(let ((e90 (bvugt ((_ zero_extend 11) e42) e22)))
(let ((e91 (= e43 ((_ zero_extend 3) e52))))
(let ((e92 (distinct ((_ sign_extend 3) e38) e8)))
(let ((e93 (bvult ((_ sign_extend 3) e36) e10)))
(let ((e94 (bvugt e41 e49)))
(let ((e95 (bvugt ((_ zero_extend 3) e40) e30)))
(let ((e96 (bvugt ((_ zero_extend 3) e52) e41)))
(let ((e97 (bvslt ((_ zero_extend 3) e38) e7)))
(let ((e98 (bvuge e49 ((_ sign_extend 3) e38))))
(let ((e99 (bvslt e12 ((_ sign_extend 1) e40))))
(let ((e100 (bvule e31 ((_ sign_extend 10) v3))))
(let ((e101 (= v1 e8)))
(let ((e102 (bvsle e37 ((_ sign_extend 10) e32))))
(let ((e103 (bvult ((_ zero_extend 3) e40) e26)))
(let ((e104 (bvule ((_ zero_extend 3) e18) v1)))
(let ((e105 (distinct ((_ sign_extend 2) e48) e31)))
(let ((e106 (bvsle ((_ sign_extend 11) e32) e39)))
(let ((e107 (bvult e26 ((_ zero_extend 14) e9))))
(let ((e108 (bvsle e50 ((_ zero_extend 14) e42))))
(let ((e109 (bvsge ((_ sign_extend 3) e19) e26)))
(let ((e110 (= e31 ((_ sign_extend 10) v3))))
(let ((e111 (bvsgt v4 ((_ zero_extend 10) e33))))
(let ((e112 (distinct ((_ sign_extend 1) e34) e7)))
(let ((e113 (bvsgt ((_ zero_extend 2) v4) e31)))
(let ((e114 (bvuge ((_ sign_extend 2) e36) e13)))
(let ((e115 (bvugt e12 ((_ zero_extend 12) e32))))
(let ((e116 (bvsge ((_ sign_extend 3) e20) e41)))
(let ((e117 (bvugt v1 ((_ sign_extend 3) e38))))
(let ((e118 (bvule e35 ((_ sign_extend 3) e18))))
(let ((e119 (bvugt e7 ((_ sign_extend 1) e34))))
(let ((e120 (bvuge e49 ((_ zero_extend 3) e19))))
(let ((e121 (bvule e24 e40)))
(let ((e122 (bvuge ((_ zero_extend 12) v2) e10)))
(let ((e123 (bvslt ((_ sign_extend 1) e34) e14)))
(let ((e124 (bvugt e19 e18)))
(let ((e125 (bvult ((_ sign_extend 3) e11) e48)))
(let ((e126 (bvuge e15 ((_ zero_extend 1) e22))))
(let ((e127 (bvslt ((_ sign_extend 3) e19) v1)))
(let ((e128 (bvuge e14 ((_ sign_extend 2) e31))))
(let ((e129 (bvsgt ((_ zero_extend 3) e18) e10)))
(let ((e130 (bvule ((_ sign_extend 14) e33) e10)))
(let ((e131 (bvule ((_ zero_extend 10) e9) e37)))
(let ((e132 (bvult e45 e26)))
(let ((e133 (and e112 e74)))
(let ((e134 (ite e91 e65 e119)))
(let ((e135 (xor e116 e68)))
(let ((e136 (ite e71 e54 e86)))
(let ((e137 (= e122 e123)))
(let ((e138 (xor e66 e67)))
(let ((e139 (or e90 e95)))
(let ((e140 (not e139)))
(let ((e141 (=> e63 e99)))
(let ((e142 (=> e110 e134)))
(let ((e143 (=> e105 e124)))
(let ((e144 (or e111 e126)))
(let ((e145 (= e64 e59)))
(let ((e146 (ite e133 e115 e107)))
(let ((e147 (xor e85 e130)))
(let ((e148 (or e121 e53)))
(let ((e149 (ite e92 e87 e78)))
(let ((e150 (=> e141 e69)))
(let ((e151 (ite e147 e138 e125)))
(let ((e152 (=> e140 e62)))
(let ((e153 (xor e93 e127)))
(let ((e154 (and e142 e113)))
(let ((e155 (or e145 e61)))
(let ((e156 (ite e114 e80 e56)))
(let ((e157 (or e128 e72)))
(let ((e158 (or e135 e75)))
(let ((e159 (=> e79 e57)))
(let ((e160 (= e149 e98)))
(let ((e161 (or e150 e120)))
(let ((e162 (not e151)))
(let ((e163 (ite e106 e58 e97)))
(let ((e164 (not e60)))
(let ((e165 (or e152 e83)))
(let ((e166 (= e96 e103)))
(let ((e167 (not e104)))
(let ((e168 (or e137 e131)))
(let ((e169 (ite e157 e143 e163)))
(let ((e170 (= e55 e70)))
(let ((e171 (and e158 e108)))
(let ((e172 (xor e154 e165)))
(let ((e173 (=> e171 e82)))
(let ((e174 (xor e155 e148)))
(let ((e175 (= e156 e159)))
(let ((e176 (or e166 e84)))
(let ((e177 (and e89 e109)))
(let ((e178 (=> e94 e170)))
(let ((e179 (or e169 e177)))
(let ((e180 (xor e153 e132)))
(let ((e181 (ite e100 e176 e164)))
(let ((e182 (ite e181 e179 e173)))
(let ((e183 (=> e76 e73)))
(let ((e184 (xor e168 e178)))
(let ((e185 (= e88 e102)))
(let ((e186 (not e185)))
(let ((e187 (or e174 e184)))
(let ((e188 (not e167)))
(let ((e189 (=> e161 e146)))
(let ((e190 (not e144)))
(let ((e191 (=> e175 e187)))
(let ((e192 (or e191 e77)))
(let ((e193 (not e189)))
(let ((e194 (ite e129 e117 e188)))
(let ((e195 (or e193 e186)))
(let ((e196 (and e136 e136)))
(let ((e197 (=> e190 e182)))
(let ((e198 (xor e192 e81)))
(let ((e199 (= e183 e172)))
(let ((e200 (and e160 e196)))
(let ((e201 (or e118 e195)))
(let ((e202 (not e101)))
(let ((e203 (= e198 e197)))
(let ((e204 (ite e200 e180 e194)))
(let ((e205 (and e199 e204)))
(let ((e206 (=> e205 e202)))
(let ((e207 (xor e162 e201)))
(let ((e208 (and e206 e206)))
(let ((e209 (=> e203 e208)))
(let ((e210 (=> e207 e209)))
(let ((e211 (and e210 (not (= e7 (_ bv0 15))))))
(let ((e212 (and e211 (not (= e7 (bvnot (_ bv0 15)))))))
(let ((e213 (and e212 (not (= v1 (_ bv0 15))))))
(let ((e214 (and e213 (not (= v0 (_ bv0 14))))))
(let ((e215 (and e214 (not (= v0 (bvnot (_ bv0 14)))))))
(let ((e216 (and e215 (not (= e6 (_ bv0 13))))))
(let ((e217 (and e216 (not (= e6 (bvnot (_ bv0 13)))))))
(let ((e218 (and e217 (not (= e26 (_ bv0 15))))))
(let ((e219 (and e218 (not (= e26 (bvnot (_ bv0 15)))))))
e219
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
