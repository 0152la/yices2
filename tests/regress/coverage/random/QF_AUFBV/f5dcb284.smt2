(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 3))
(declare-fun v1 () (_ BitVec 6))
(declare-fun v2 () (_ BitVec 11))
(declare-fun v3 () (_ BitVec 11))
(declare-fun v4 () (_ BitVec 6))
(declare-fun a5 () (Array  (_ BitVec 4)  (_ BitVec 4)))
(assert (let ((e6(_ bv12 6)))
(let ((e7 (bvcomp ((_ sign_extend 8) v0) v3)))
(let ((e8 (bvsdiv v1 v1)))
(let ((e9 ((_ sign_extend 3) v4)))
(let ((e10 (ite (= v4 ((_ zero_extend 3) v0)) (_ bv1 1) (_ bv0 1))))
(let ((e11 (bvshl ((_ zero_extend 2) e7) v0)))
(let ((e12 (ite (bvult v2 v2) (_ bv1 1) (_ bv0 1))))
(let ((e13 ((_ zero_extend 10) e6)))
(let ((e14 (store a5 ((_ extract 6 3) v2) ((_ zero_extend 1) e11))))
(let ((e15 (select e14 ((_ extract 15 12) e13))))
(let ((e16 (store e14 ((_ extract 7 4) e9) e15)))
(let ((e17 (select e16 ((_ sign_extend 3) e10))))
(let ((e18 (bvnot e7)))
(let ((e19 (ite (= (_ bv1 1) ((_ extract 2 2) v0)) v1 e6)))
(let ((e20 (ite (bvsle e12 e12) (_ bv1 1) (_ bv0 1))))
(let ((e21 (bvsrem ((_ zero_extend 1) e11) e17)))
(let ((e22 (ite (bvsge e13 ((_ zero_extend 12) e15)) (_ bv1 1) (_ bv0 1))))
(let ((e23 (bvsdiv ((_ sign_extend 2) e12) v0)))
(let ((e24 ((_ rotate_right 5) v1)))
(let ((e25 (bvadd e9 ((_ zero_extend 6) v0))))
(let ((e26 (ite (distinct e10 e7) (_ bv1 1) (_ bv0 1))))
(let ((e27 (bvxor ((_ sign_extend 3) e8) e9)))
(let ((e28 (bvudiv ((_ zero_extend 13) e11) e13)))
(let ((e29 (bvxor v2 ((_ sign_extend 10) e18))))
(let ((e30 (ite (bvuge v3 v2) (_ bv1 1) (_ bv0 1))))
(let ((e31 (bvmul v4 ((_ sign_extend 5) e20))))
(let ((e32 (bvult e18 e26)))
(let ((e33 (bvugt e28 ((_ sign_extend 13) v0))))
(let ((e34 (bvuge ((_ sign_extend 13) e11) e13)))
(let ((e35 (bvslt e26 e26)))
(let ((e36 (bvsle v4 e8)))
(let ((e37 (bvule v1 ((_ zero_extend 5) e20))))
(let ((e38 (bvsle ((_ sign_extend 5) v1) v2)))
(let ((e39 (bvsle ((_ sign_extend 5) e7) v1)))
(let ((e40 (bvult e17 e17)))
(let ((e41 (bvule e29 ((_ sign_extend 10) e18))))
(let ((e42 (bvsgt e28 ((_ zero_extend 15) e18))))
(let ((e43 (bvult ((_ zero_extend 2) e27) v2)))
(let ((e44 (bvule ((_ zero_extend 5) e7) e6)))
(let ((e45 (bvsle ((_ sign_extend 15) e20) e28)))
(let ((e46 (= ((_ zero_extend 8) e7) e25)))
(let ((e47 (= ((_ zero_extend 5) e10) e24)))
(let ((e48 (= v2 ((_ zero_extend 8) e23))))
(let ((e49 (distinct ((_ zero_extend 8) e30) e27)))
(let ((e50 (bvule e13 e13)))
(let ((e51 (distinct v4 e24)))
(let ((e52 (bvult e13 ((_ zero_extend 15) e30))))
(let ((e53 (bvugt e8 ((_ sign_extend 3) e11))))
(let ((e54 (bvule e24 ((_ sign_extend 5) e10))))
(let ((e55 (bvugt ((_ sign_extend 2) e30) v0)))
(let ((e56 (bvslt e23 ((_ zero_extend 2) e10))))
(let ((e57 (bvslt ((_ sign_extend 13) e23) e13)))
(let ((e58 (bvugt ((_ sign_extend 15) e10) e13)))
(let ((e59 (bvslt ((_ zero_extend 10) e26) v3)))
(let ((e60 (bvult e15 ((_ sign_extend 3) e20))))
(let ((e61 (bvult ((_ zero_extend 10) e7) e29)))
(let ((e62 (bvslt ((_ zero_extend 3) v1) e9)))
(let ((e63 (bvslt ((_ zero_extend 5) e21) e9)))
(let ((e64 (bvule e12 e22)))
(let ((e65 (distinct e13 ((_ sign_extend 12) e21))))
(let ((e66 (bvsge ((_ sign_extend 3) e24) e25)))
(let ((e67 (bvslt ((_ zero_extend 3) v0) v4)))
(let ((e68 (bvule ((_ sign_extend 2) e25) v2)))
(let ((e69 (bvslt v4 e8)))
(let ((e70 (bvsgt ((_ zero_extend 1) e23) e15)))
(let ((e71 (bvuge ((_ sign_extend 10) e22) v3)))
(let ((e72 (bvslt v2 ((_ zero_extend 5) e8))))
(let ((e73 (bvsgt e12 e20)))
(let ((e74 (bvugt e17 ((_ sign_extend 3) e30))))
(let ((e75 (bvsge v2 ((_ zero_extend 8) e23))))
(let ((e76 (bvule e9 ((_ sign_extend 8) e10))))
(let ((e77 (bvsgt ((_ sign_extend 8) e7) e27)))
(let ((e78 (bvugt ((_ sign_extend 5) e26) e31)))
(let ((e79 (bvult e29 ((_ zero_extend 10) e7))))
(let ((e80 (bvule ((_ sign_extend 13) v0) e13)))
(let ((e81 (bvuge ((_ zero_extend 2) e17) e8)))
(let ((e82 (bvult e13 ((_ zero_extend 15) e10))))
(let ((e83 (bvugt ((_ zero_extend 5) e8) e29)))
(let ((e84 (bvslt e8 ((_ sign_extend 2) e17))))
(let ((e85 (bvslt e29 ((_ sign_extend 10) e10))))
(let ((e86 (bvult e31 e31)))
(let ((e87 (bvule v3 ((_ sign_extend 5) e24))))
(let ((e88 (bvsgt e8 ((_ sign_extend 5) e12))))
(let ((e89 (= v1 ((_ zero_extend 5) e18))))
(let ((e90 (bvsge v3 ((_ sign_extend 5) v1))))
(let ((e91 (bvsge e25 e25)))
(let ((e92 (distinct e6 e31)))
(let ((e93 (bvule e27 ((_ zero_extend 8) e10))))
(let ((e94 (bvult v3 ((_ sign_extend 7) e21))))
(let ((e95 (bvuge ((_ zero_extend 3) e11) v4)))
(let ((e96 (bvuge e27 ((_ sign_extend 8) e7))))
(let ((e97 (= ((_ zero_extend 7) e25) e13)))
(let ((e98 (bvsgt v3 ((_ zero_extend 2) e27))))
(let ((e99 (= ((_ zero_extend 2) e12) e11)))
(let ((e100 (bvuge v4 ((_ sign_extend 5) e12))))
(let ((e101 (bvsle e13 ((_ zero_extend 5) v3))))
(let ((e102 (bvuge e13 ((_ zero_extend 7) e9))))
(let ((e103 (bvsge ((_ zero_extend 3) e23) v4)))
(let ((e104 (= e29 ((_ zero_extend 10) e22))))
(let ((e105 (bvslt v2 ((_ sign_extend 2) e27))))
(let ((e106 (bvsge ((_ sign_extend 8) e30) e25)))
(let ((e107 (bvugt e6 ((_ sign_extend 5) e7))))
(let ((e108 (bvule ((_ sign_extend 10) e7) v2)))
(let ((e109 (bvsle ((_ zero_extend 5) e10) e8)))
(let ((e110 (bvsle e19 ((_ sign_extend 2) e15))))
(let ((e111 (xor e57 e72)))
(let ((e112 (and e106 e50)))
(let ((e113 (xor e104 e100)))
(let ((e114 (not e66)))
(let ((e115 (= e94 e32)))
(let ((e116 (ite e78 e99 e54)))
(let ((e117 (not e82)))
(let ((e118 (= e63 e51)))
(let ((e119 (=> e87 e33)))
(let ((e120 (xor e58 e101)))
(let ((e121 (not e114)))
(let ((e122 (ite e86 e38 e98)))
(let ((e123 (= e93 e68)))
(let ((e124 (ite e73 e108 e70)))
(let ((e125 (=> e41 e46)))
(let ((e126 (xor e59 e75)))
(let ((e127 (xor e67 e88)))
(let ((e128 (not e117)))
(let ((e129 (= e64 e118)))
(let ((e130 (=> e112 e60)))
(let ((e131 (or e89 e80)))
(let ((e132 (or e110 e69)))
(let ((e133 (not e61)))
(let ((e134 (xor e36 e76)))
(let ((e135 (and e56 e116)))
(let ((e136 (not e121)))
(let ((e137 (and e102 e131)))
(let ((e138 (or e74 e128)))
(let ((e139 (and e111 e133)))
(let ((e140 (ite e53 e125 e85)))
(let ((e141 (and e97 e79)))
(let ((e142 (=> e124 e127)))
(let ((e143 (= e44 e136)))
(let ((e144 (or e45 e81)))
(let ((e145 (or e119 e135)))
(let ((e146 (or e96 e42)))
(let ((e147 (and e146 e130)))
(let ((e148 (ite e39 e47 e83)))
(let ((e149 (xor e37 e43)))
(let ((e150 (= e129 e65)))
(let ((e151 (ite e126 e123 e145)))
(let ((e152 (ite e120 e91 e91)))
(let ((e153 (not e105)))
(let ((e154 (not e152)))
(let ((e155 (ite e49 e153 e149)))
(let ((e156 (=> e147 e151)))
(let ((e157 (ite e115 e155 e40)))
(let ((e158 (=> e34 e52)))
(let ((e159 (xor e132 e132)))
(let ((e160 (xor e141 e150)))
(let ((e161 (=> e143 e90)))
(let ((e162 (=> e103 e103)))
(let ((e163 (xor e109 e142)))
(let ((e164 (xor e163 e144)))
(let ((e165 (xor e154 e62)))
(let ((e166 (= e139 e140)))
(let ((e167 (=> e161 e84)))
(let ((e168 (or e113 e134)))
(let ((e169 (xor e165 e92)))
(let ((e170 (=> e159 e164)))
(let ((e171 (not e167)))
(let ((e172 (xor e162 e162)))
(let ((e173 (xor e160 e148)))
(let ((e174 (not e172)))
(let ((e175 (or e95 e174)))
(let ((e176 (ite e158 e170 e158)))
(let ((e177 (or e166 e171)))
(let ((e178 (xor e55 e177)))
(let ((e179 (=> e138 e178)))
(let ((e180 (and e173 e35)))
(let ((e181 (=> e179 e71)))
(let ((e182 (not e169)))
(let ((e183 (ite e107 e168 e175)))
(let ((e184 (xor e181 e181)))
(let ((e185 (=> e48 e180)))
(let ((e186 (ite e137 e184 e176)))
(let ((e187 (ite e186 e156 e122)))
(let ((e188 (or e157 e77)))
(let ((e189 (ite e185 e188 e182)))
(let ((e190 (=> e183 e183)))
(let ((e191 (ite e187 e187 e189)))
(let ((e192 (=> e191 e190)))
(let ((e193 (and e192 (not (= e13 (_ bv0 16))))))
(let ((e194 (and e193 (not (= v1 (_ bv0 6))))))
(let ((e195 (and e194 (not (= v1 (bvnot (_ bv0 6)))))))
(let ((e196 (and e195 (not (= v0 (_ bv0 3))))))
(let ((e197 (and e196 (not (= v0 (bvnot (_ bv0 3)))))))
(let ((e198 (and e197 (not (= e17 (_ bv0 4))))))
(let ((e199 (and e198 (not (= e17 (bvnot (_ bv0 4)))))))
e199
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
