(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 4))
(declare-fun v1 () (_ BitVec 10))
(declare-fun v2 () (_ BitVec 11))
(declare-fun a3 () (Array  (_ BitVec 7)  (_ BitVec 5)))
(declare-fun a4 () (Array  (_ BitVec 15)  (_ BitVec 13)))
(assert (let ((e5(_ bv2795 12)))
(let ((e6(_ bv530 10)))
(let ((e7 (bvmul v2 ((_ sign_extend 7) v0))))
(let ((e8 ((_ rotate_left 0) e5)))
(let ((e9 (bvudiv v1 e6)))
(let ((e10 (store a3 ((_ extract 6 0) e6) ((_ extract 7 3) e7))))
(let ((e11 (store a4 ((_ sign_extend 5) e6) ((_ sign_extend 3) e6))))
(let ((e12 (select e10 ((_ extract 6 0) e9))))
(let ((e13 (select a3 ((_ extract 6 0) e5))))
(let ((e14 (store e10 ((_ extract 9 3) e8) ((_ extract 8 4) v1))))
(let ((e15 (select e11 ((_ sign_extend 3) e8))))
(let ((e16 (select e11 ((_ sign_extend 3) e8))))
(let ((e17 (bvurem ((_ zero_extend 1) v1) e7)))
(let ((e18 (ite (distinct v1 e6) (_ bv1 1) (_ bv0 1))))
(let ((e19 (bvmul ((_ sign_extend 1) e9) e7)))
(let ((e20 ((_ rotate_right 4) e15)))
(let ((e21 (bvneg e5)))
(let ((e22 (ite (bvugt e8 e5) (_ bv1 1) (_ bv0 1))))
(let ((e23 (bvadd ((_ zero_extend 6) e12) v2)))
(let ((e24 (ite (bvule e16 ((_ zero_extend 2) e7)) (_ bv1 1) (_ bv0 1))))
(let ((e25 (bvsub ((_ zero_extend 8) e13) e16)))
(let ((e26 (bvnand ((_ sign_extend 11) e18) e21)))
(let ((e27 (bvurem ((_ zero_extend 8) v0) e8)))
(let ((e28 (bvugt ((_ sign_extend 1) e17) e27)))
(let ((e29 (= e9 ((_ zero_extend 9) e22))))
(let ((e30 (bvugt e25 ((_ sign_extend 12) e18))))
(let ((e31 (bvult e5 ((_ sign_extend 2) e9))))
(let ((e32 (bvule e27 ((_ sign_extend 1) e23))))
(let ((e33 (bvugt e23 ((_ sign_extend 1) v1))))
(let ((e34 (bvsge ((_ sign_extend 2) v2) e20)))
(let ((e35 (bvsle ((_ zero_extend 7) v0) e23)))
(let ((e36 (bvsgt ((_ zero_extend 2) e7) e25)))
(let ((e37 (bvsle ((_ zero_extend 2) e17) e25)))
(let ((e38 (bvslt ((_ zero_extend 2) e17) e16)))
(let ((e39 (bvsle e8 ((_ zero_extend 1) v2))))
(let ((e40 (bvslt ((_ sign_extend 8) v0) e21)))
(let ((e41 (= e20 e16)))
(let ((e42 (= ((_ sign_extend 1) e27) e25)))
(let ((e43 (distinct e6 e6)))
(let ((e44 (bvslt v1 ((_ sign_extend 9) e22))))
(let ((e45 (bvsge e24 e18)))
(let ((e46 (distinct ((_ sign_extend 11) e22) e26)))
(let ((e47 (bvult ((_ zero_extend 11) e18) e8)))
(let ((e48 (bvule e27 ((_ zero_extend 11) e24))))
(let ((e49 (distinct e7 e23)))
(let ((e50 (bvuge e15 ((_ sign_extend 1) e8))))
(let ((e51 (bvslt ((_ sign_extend 1) e19) e21)))
(let ((e52 (bvsgt e17 ((_ sign_extend 7) v0))))
(let ((e53 (= e19 e19)))
(let ((e54 (bvule ((_ sign_extend 7) e12) e26)))
(let ((e55 (bvsle ((_ zero_extend 7) e13) e27)))
(let ((e56 (=> e36 e30)))
(let ((e57 (xor e54 e45)))
(let ((e58 (xor e42 e32)))
(let ((e59 (not e35)))
(let ((e60 (= e55 e39)))
(let ((e61 (= e28 e47)))
(let ((e62 (and e43 e56)))
(let ((e63 (xor e53 e62)))
(let ((e64 (and e51 e46)))
(let ((e65 (=> e37 e59)))
(let ((e66 (ite e44 e29 e52)))
(let ((e67 (or e33 e65)))
(let ((e68 (or e41 e67)))
(let ((e69 (xor e48 e57)))
(let ((e70 (xor e66 e34)))
(let ((e71 (or e69 e69)))
(let ((e72 (or e31 e50)))
(let ((e73 (=> e68 e70)))
(let ((e74 (not e58)))
(let ((e75 (and e60 e72)))
(let ((e76 (and e74 e40)))
(let ((e77 (and e73 e61)))
(let ((e78 (=> e71 e75)))
(let ((e79 (and e78 e38)))
(let ((e80 (xor e79 e79)))
(let ((e81 (= e64 e76)))
(let ((e82 (ite e77 e81 e80)))
(let ((e83 (not e49)))
(let ((e84 (and e63 e83)))
(let ((e85 (= e82 e82)))
(let ((e86 (and e84 e84)))
(let ((e87 (and e85 e85)))
(let ((e88 (= e87 e86)))
(let ((e89 (and e88 (not (= e8 (_ bv0 12))))))
(let ((e90 (and e89 (not (= e6 (_ bv0 10))))))
(let ((e91 (and e90 (not (= e7 (_ bv0 11))))))
e91
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
