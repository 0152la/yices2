(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 2))
(declare-fun v1 () (_ BitVec 16))
(declare-fun a2 () (Array  (_ BitVec 10)  (_ BitVec 13)))
(declare-fun a3 () (Array  (_ BitVec 16)  (_ BitVec 16)))
(assert (let ((e4(_ bv1606 13)))
(let ((e5 (bvand v1 ((_ sign_extend 14) v0))))
(let ((e6 (bvxor e5 ((_ zero_extend 3) e4))))
(let ((e7 (store a2 ((_ extract 9 0) e4) e4)))
(let ((e8 (select a3 e6)))
(let ((e9 (store a2 ((_ extract 10 1) e8) ((_ extract 12 0) v1))))
(let ((e10 (bvadd e5 e5)))
(let ((e11 (bvnor e5 ((_ zero_extend 14) v0))))
(let ((e12 (bvor v1 e11)))
(let ((e13 ((_ extract 1 0) v0)))
(let ((e14 (bvsub ((_ zero_extend 3) e4) e11)))
(let ((e15 (bvadd e6 e12)))
(let ((e16 (bvneg e5)))
(let ((e17 (bvsrem ((_ sign_extend 3) e4) e12)))
(let ((e18 (bvxnor e5 e5)))
(let ((e19 (bvlshr ((_ zero_extend 3) e4) e12)))
(let ((e20 (ite (= e17 e6) (_ bv1 1) (_ bv0 1))))
(let ((e21 (ite (bvslt e8 ((_ sign_extend 3) e4)) (_ bv1 1) (_ bv0 1))))
(let ((e22 (bvult e4 ((_ zero_extend 11) e13))))
(let ((e23 (bvult ((_ sign_extend 15) e20) e11)))
(let ((e24 (bvsgt e17 e11)))
(let ((e25 (bvugt e6 ((_ zero_extend 15) e21))))
(let ((e26 (bvsle v1 e18)))
(let ((e27 (= e6 e11)))
(let ((e28 (bvuge e10 e16)))
(let ((e29 (distinct ((_ sign_extend 14) v0) e6)))
(let ((e30 (bvslt e16 ((_ sign_extend 3) e4))))
(let ((e31 (bvslt e18 ((_ sign_extend 14) v0))))
(let ((e32 (bvuge ((_ zero_extend 14) v0) e19)))
(let ((e33 (bvuge e5 e19)))
(let ((e34 (bvule ((_ sign_extend 11) e13) e4)))
(let ((e35 (bvsgt v1 e5)))
(let ((e36 (bvsgt e14 e16)))
(let ((e37 (bvugt e18 e10)))
(let ((e38 (bvugt ((_ sign_extend 15) e20) v1)))
(let ((e39 (bvsgt e8 v1)))
(let ((e40 (distinct ((_ sign_extend 14) v0) e17)))
(let ((e41 (bvult ((_ zero_extend 15) e21) e17)))
(let ((e42 (= e11 ((_ sign_extend 14) v0))))
(let ((e43 (bvuge e16 e14)))
(let ((e44 (= e17 e19)))
(let ((e45 (bvsgt e17 e10)))
(let ((e46 (bvule v1 ((_ sign_extend 3) e4))))
(let ((e47 (distinct e16 ((_ zero_extend 14) e13))))
(let ((e48 (bvuge e17 e10)))
(let ((e49 (bvsgt e5 ((_ sign_extend 15) e21))))
(let ((e50 (bvsge e4 ((_ sign_extend 12) e21))))
(let ((e51 (bvugt e17 ((_ zero_extend 14) v0))))
(let ((e52 (bvugt e19 v1)))
(let ((e53 (bvsgt e11 e18)))
(let ((e54 (bvugt ((_ zero_extend 14) e13) e17)))
(let ((e55 (bvult e8 e18)))
(let ((e56 (bvsle ((_ sign_extend 3) e4) e8)))
(let ((e57 (bvsge ((_ sign_extend 15) e20) e10)))
(let ((e58 (= e12 e5)))
(let ((e59 (bvuge e4 ((_ zero_extend 12) e20))))
(let ((e60 (bvsge e16 v1)))
(let ((e61 (bvsle e16 e17)))
(let ((e62 (bvsle v1 e10)))
(let ((e63 (bvsle e18 ((_ sign_extend 15) e20))))
(let ((e64 (bvuge e14 e15)))
(let ((e65 (= e39 e43)))
(let ((e66 (= e30 e44)))
(let ((e67 (ite e52 e33 e60)))
(let ((e68 (= e65 e46)))
(let ((e69 (and e36 e58)))
(let ((e70 (xor e61 e31)))
(let ((e71 (= e50 e70)))
(let ((e72 (ite e49 e71 e40)))
(let ((e73 (xor e26 e67)))
(let ((e74 (not e57)))
(let ((e75 (xor e72 e45)))
(let ((e76 (ite e34 e59 e51)))
(let ((e77 (xor e55 e27)))
(let ((e78 (and e42 e64)))
(let ((e79 (not e48)))
(let ((e80 (=> e74 e63)))
(let ((e81 (xor e66 e24)))
(let ((e82 (or e68 e53)))
(let ((e83 (xor e81 e82)))
(let ((e84 (=> e35 e56)))
(let ((e85 (= e75 e80)))
(let ((e86 (ite e28 e25 e62)))
(let ((e87 (xor e32 e73)))
(let ((e88 (or e76 e38)))
(let ((e89 (ite e79 e88 e77)))
(let ((e90 (= e87 e89)))
(let ((e91 (not e78)))
(let ((e92 (=> e90 e22)))
(let ((e93 (=> e54 e47)))
(let ((e94 (ite e41 e69 e93)))
(let ((e95 (ite e83 e84 e83)))
(let ((e96 (= e37 e37)))
(let ((e97 (ite e85 e96 e29)))
(let ((e98 (not e94)))
(let ((e99 (or e86 e91)))
(let ((e100 (ite e95 e92 e23)))
(let ((e101 (ite e100 e100 e98)))
(let ((e102 (and e97 e97)))
(let ((e103 (not e99)))
(let ((e104 (or e103 e102)))
(let ((e105 (not e104)))
(let ((e106 (or e101 e101)))
(let ((e107 (or e106 e106)))
(let ((e108 (= e107 e105)))
(let ((e109 (and e108 (not (= e12 (_ bv0 16))))))
(let ((e110 (and e109 (not (= e12 (bvnot (_ bv0 16)))))))
e110
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
