(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 16))
(declare-fun v1 () (_ BitVec 4))
(declare-fun v2 () (_ BitVec 14))
(declare-fun v3 () (_ BitVec 1))
(declare-fun v4 () (_ BitVec 1))
(declare-fun a5 () (Array  (_ BitVec 3)  (_ BitVec 5)))
(declare-fun a6 () (Array  (_ BitVec 13)  (_ BitVec 9)))
(assert (let ((e7(_ bv34711 16)))
(let ((e8 (ite (bvult ((_ zero_extend 15) v3) e7) (_ bv1 1) (_ bv0 1))))
(let ((e9 (bvxnor v3 e8)))
(let ((e10 ((_ extract 0 0) v4)))
(let ((e11 (bvashr ((_ zero_extend 3) e10) v1)))
(let ((e12 (bvneg v0)))
(let ((e13 (ite (bvslt ((_ sign_extend 12) e11) e12) (_ bv1 1) (_ bv0 1))))
(let ((e14 (bvashr ((_ sign_extend 15) e13) e12)))
(let ((e15 (bvnot e13)))
(let ((e16 (bvmul v3 e13)))
(let ((e17 (bvshl ((_ sign_extend 2) v2) e12)))
(let ((e18 (store a5 ((_ extract 14 12) e14) ((_ sign_extend 1) v1))))
(let ((e19 (select a5 ((_ zero_extend 2) e10))))
(let ((e20 (select e18 ((_ zero_extend 2) e16))))
(let ((e21 (store e18 ((_ extract 11 9) e17) ((_ extract 13 9) e7))))
(let ((e22 (select e18 ((_ zero_extend 2) v4))))
(let ((e23 (ite (bvugt v0 ((_ zero_extend 2) v2)) (_ bv1 1) (_ bv0 1))))
(let ((e24 (bvmul ((_ sign_extend 15) v4) v0)))
(let ((e25 (ite (bvslt e24 ((_ sign_extend 11) e22)) (_ bv1 1) (_ bv0 1))))
(let ((e26 (bvnot e20)))
(let ((e27 (ite (bvuge e12 v0) (_ bv1 1) (_ bv0 1))))
(let ((e28 (bvadd ((_ zero_extend 11) e22) v0)))
(let ((e29 (bvxnor v3 e10)))
(let ((e30 (bvmul ((_ zero_extend 15) e15) e7)))
(let ((e31 ((_ rotate_right 0) e13)))
(let ((e32 (bvlshr v1 ((_ zero_extend 3) e27))))
(let ((e33 (bvnor e9 e27)))
(let ((e34 ((_ rotate_left 2) e19)))
(let ((e35 (bvnot e17)))
(let ((e36 (ite (bvsge e11 ((_ zero_extend 3) e23)) (_ bv1 1) (_ bv0 1))))
(let ((e37 ((_ zero_extend 2) e19)))
(let ((e38 (bvadd e11 ((_ zero_extend 3) e9))))
(let ((e39 (ite (bvsgt e14 e30) (_ bv1 1) (_ bv0 1))))
(let ((e40 (ite (distinct ((_ sign_extend 15) e16) e35) (_ bv1 1) (_ bv0 1))))
(let ((e41 ((_ rotate_right 0) e8)))
(let ((e42 (bvult e7 e28)))
(let ((e43 (= e38 e32)))
(let ((e44 (bvsle ((_ zero_extend 15) e25) e17)))
(let ((e45 (bvsle ((_ sign_extend 3) v3) v1)))
(let ((e46 (distinct e40 e10)))
(let ((e47 (bvult ((_ sign_extend 15) e40) e30)))
(let ((e48 (bvslt e20 ((_ zero_extend 4) e13))))
(let ((e49 (bvult v0 ((_ zero_extend 15) e8))))
(let ((e50 (bvuge v2 ((_ zero_extend 13) e27))))
(let ((e51 (bvugt e34 ((_ zero_extend 4) e41))))
(let ((e52 (bvsle e28 ((_ zero_extend 12) e11))))
(let ((e53 (bvslt ((_ zero_extend 4) e40) e20)))
(let ((e54 (= e35 e35)))
(let ((e55 (distinct e8 e40)))
(let ((e56 (bvsge ((_ zero_extend 4) e9) e22)))
(let ((e57 (bvslt ((_ sign_extend 4) e25) e20)))
(let ((e58 (bvslt e35 v0)))
(let ((e59 (= e12 ((_ zero_extend 12) e11))))
(let ((e60 (bvult e35 ((_ sign_extend 2) v2))))
(let ((e61 (bvugt e28 e14)))
(let ((e62 (bvsle ((_ sign_extend 12) e11) e7)))
(let ((e63 (= ((_ zero_extend 4) v4) e26)))
(let ((e64 (bvsle e9 e23)))
(let ((e65 (bvsge e26 e34)))
(let ((e66 (bvuge ((_ sign_extend 15) e13) e14)))
(let ((e67 (bvule e14 ((_ sign_extend 12) e38))))
(let ((e68 (= ((_ sign_extend 6) v4) e37)))
(let ((e69 (bvugt ((_ sign_extend 11) e34) e35)))
(let ((e70 (bvsle ((_ sign_extend 3) e38) e37)))
(let ((e71 (bvsge e7 ((_ sign_extend 15) e8))))
(let ((e72 (bvslt ((_ sign_extend 13) e31) v2)))
(let ((e73 (bvuge ((_ sign_extend 4) e15) e26)))
(let ((e74 (bvsgt ((_ sign_extend 15) e40) e28)))
(let ((e75 (bvult v1 ((_ sign_extend 3) e40))))
(let ((e76 (bvsge ((_ zero_extend 15) e41) v0)))
(let ((e77 (bvsge ((_ zero_extend 2) v2) e24)))
(let ((e78 (bvsge e17 e28)))
(let ((e79 (bvslt e36 e16)))
(let ((e80 (bvsle e14 ((_ zero_extend 15) e39))))
(let ((e81 (bvuge ((_ sign_extend 12) v1) e14)))
(let ((e82 (bvsgt e28 e24)))
(let ((e83 (= v0 ((_ zero_extend 11) e22))))
(let ((e84 (= v3 e29)))
(let ((e85 (bvsge e26 ((_ zero_extend 4) e36))))
(let ((e86 (bvult e41 e39)))
(let ((e87 (bvult e19 ((_ zero_extend 4) e36))))
(let ((e88 (bvsgt e24 ((_ sign_extend 9) e37))))
(let ((e89 (bvsgt ((_ sign_extend 15) e33) e14)))
(let ((e90 (=> e84 e46)))
(let ((e91 (=> e90 e57)))
(let ((e92 (and e82 e62)))
(let ((e93 (not e51)))
(let ((e94 (ite e93 e78 e59)))
(let ((e95 (and e86 e55)))
(let ((e96 (not e85)))
(let ((e97 (xor e72 e63)))
(let ((e98 (or e88 e43)))
(let ((e99 (ite e42 e53 e83)))
(let ((e100 (xor e80 e77)))
(let ((e101 (xor e47 e96)))
(let ((e102 (or e66 e75)))
(let ((e103 (= e64 e97)))
(let ((e104 (=> e79 e79)))
(let ((e105 (xor e74 e91)))
(let ((e106 (or e58 e70)))
(let ((e107 (ite e94 e92 e61)))
(let ((e108 (and e69 e71)))
(let ((e109 (not e101)))
(let ((e110 (= e56 e106)))
(let ((e111 (=> e108 e60)))
(let ((e112 (=> e81 e102)))
(let ((e113 (not e109)))
(let ((e114 (xor e50 e113)))
(let ((e115 (ite e103 e99 e95)))
(let ((e116 (xor e111 e87)))
(let ((e117 (ite e65 e73 e67)))
(let ((e118 (not e104)))
(let ((e119 (or e52 e112)))
(let ((e120 (or e107 e116)))
(let ((e121 (= e49 e68)))
(let ((e122 (and e54 e45)))
(let ((e123 (ite e122 e115 e110)))
(let ((e124 (xor e89 e121)))
(let ((e125 (= e124 e123)))
(let ((e126 (xor e119 e117)))
(let ((e127 (ite e76 e114 e118)))
(let ((e128 (=> e100 e125)))
(let ((e129 (and e44 e128)))
(let ((e130 (= e98 e105)))
(let ((e131 (ite e120 e126 e127)))
(let ((e132 (or e130 e48)))
(let ((e133 (=> e132 e129)))
(let ((e134 (=> e131 e131)))
(let ((e135 (=> e134 e133)))
e135
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
