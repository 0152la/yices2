(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 9))
(declare-fun v1 () (_ BitVec 14))
(declare-fun v2 () (_ BitVec 1))
(declare-fun v3 () (_ BitVec 12))
(declare-fun v4 () (_ BitVec 13))
(declare-fun a5 () (Array  (_ BitVec 4)  (_ BitVec 16)))
(assert (let ((e6(_ bv22985 16)))
(let ((e7(_ bv15176 15)))
(let ((e8 (bvashr ((_ zero_extend 3) v0) v3)))
(let ((e9 (ite (bvule v1 ((_ zero_extend 13) v2)) (_ bv1 1) (_ bv0 1))))
(let ((e10 (ite (bvult e7 ((_ zero_extend 6) v0)) (_ bv1 1) (_ bv0 1))))
(let ((e11 (ite (= e7 ((_ sign_extend 14) e9)) (_ bv1 1) (_ bv0 1))))
(let ((e12 ((_ zero_extend 0) e6)))
(let ((e13 (bvnor v4 ((_ sign_extend 12) e11))))
(let ((e14 (store a5 ((_ zero_extend 3) e11) e6)))
(let ((e15 (store a5 ((_ sign_extend 3) e9) e12)))
(let ((e16 (store a5 ((_ extract 8 5) e7) ((_ zero_extend 3) v4))))
(let ((e17 (select a5 ((_ extract 10 7) e13))))
(let ((e18 (select e14 ((_ sign_extend 3) v2))))
(let ((e19 (store e14 ((_ extract 12 9) v1) ((_ zero_extend 15) e11))))
(let ((e20 (select e19 ((_ extract 9 6) e18))))
(let ((e21 (store a5 ((_ zero_extend 3) e9) ((_ sign_extend 3) v4))))
(let ((e22 (bvlshr ((_ zero_extend 2) v1) e17)))
(let ((e23 (bvsdiv ((_ zero_extend 12) v2) e13)))
(let ((e24 (ite (bvslt e6 ((_ zero_extend 15) v2)) (_ bv1 1) (_ bv0 1))))
(let ((e25 (bvshl ((_ zero_extend 11) v2) v3)))
(let ((e26 ((_ rotate_left 0) e11)))
(let ((e27 ((_ zero_extend 0) e12)))
(let ((e28 (ite (= e20 ((_ zero_extend 3) e13)) (_ bv1 1) (_ bv0 1))))
(let ((e29 (bvmul ((_ zero_extend 8) e26) v0)))
(let ((e30 (bvneg e22)))
(let ((e31 (ite (bvuge ((_ zero_extend 15) e10) e6) (_ bv1 1) (_ bv0 1))))
(let ((e32 (bvsrem ((_ zero_extend 7) e29) e22)))
(let ((e33 (ite (= (_ bv1 1) ((_ extract 0 0) e9)) e22 ((_ zero_extend 4) e25))))
(let ((e34 ((_ rotate_left 5) v0)))
(let ((e35 (bvmul ((_ zero_extend 15) e11) e22)))
(let ((e36 (bvsub ((_ zero_extend 4) e34) e23)))
(let ((e37 (bvsub ((_ sign_extend 1) e7) e18)))
(let ((e38 (ite (bvult v4 ((_ zero_extend 4) e34)) (_ bv1 1) (_ bv0 1))))
(let ((e39 (ite (bvsle e37 ((_ zero_extend 15) e10)) (_ bv1 1) (_ bv0 1))))
(let ((e40 ((_ rotate_left 5) e37)))
(let ((e41 ((_ extract 10 6) e23)))
(let ((e42 (ite (= ((_ zero_extend 15) e38) e35) (_ bv1 1) (_ bv0 1))))
(let ((e43 ((_ extract 4 3) e8)))
(let ((e44 (distinct e31 e28)))
(let ((e45 (distinct ((_ zero_extend 4) e29) e23)))
(let ((e46 (distinct e13 ((_ sign_extend 12) e11))))
(let ((e47 (bvsge e34 ((_ zero_extend 8) e38))))
(let ((e48 (distinct v3 ((_ zero_extend 11) e28))))
(let ((e49 (bvule e17 ((_ zero_extend 15) e24))))
(let ((e50 (bvugt ((_ zero_extend 3) v4) e6)))
(let ((e51 (bvsle e40 e17)))
(let ((e52 (bvuge ((_ zero_extend 15) e24) e22)))
(let ((e53 (bvsge e10 e28)))
(let ((e54 (distinct e43 ((_ zero_extend 1) e31))))
(let ((e55 (bvslt ((_ sign_extend 14) e28) e7)))
(let ((e56 (bvsle e23 ((_ sign_extend 12) e10))))
(let ((e57 (bvslt e13 ((_ sign_extend 12) e28))))
(let ((e58 (bvule e33 ((_ sign_extend 4) e8))))
(let ((e59 (bvsgt ((_ sign_extend 8) v2) e34)))
(let ((e60 (distinct e7 ((_ sign_extend 14) e9))))
(let ((e61 (= e38 e9)))
(let ((e62 (bvuge ((_ zero_extend 14) e10) e7)))
(let ((e63 (bvule ((_ sign_extend 8) v2) v0)))
(let ((e64 (distinct ((_ sign_extend 4) e25) e35)))
(let ((e65 (bvsgt ((_ sign_extend 2) v1) e40)))
(let ((e66 (= ((_ sign_extend 15) e42) e12)))
(let ((e67 (bvuge e22 e40)))
(let ((e68 (bvuge e9 e38)))
(let ((e69 (bvslt ((_ zero_extend 1) e8) v4)))
(let ((e70 (bvsle ((_ sign_extend 12) e26) e13)))
(let ((e71 (bvult e30 e17)))
(let ((e72 (bvult ((_ sign_extend 15) e26) e27)))
(let ((e73 (bvsge e40 e27)))
(let ((e74 (distinct e20 e40)))
(let ((e75 (distinct e25 e25)))
(let ((e76 (bvslt e7 ((_ zero_extend 13) e43))))
(let ((e77 (bvsge ((_ sign_extend 7) e29) e27)))
(let ((e78 (bvsge e41 e41)))
(let ((e79 (bvslt e9 e10)))
(let ((e80 (distinct e18 e35)))
(let ((e81 (bvsge ((_ sign_extend 11) e41) e18)))
(let ((e82 (= e17 ((_ sign_extend 15) e42))))
(let ((e83 (bvsgt ((_ sign_extend 3) e36) e20)))
(let ((e84 (distinct e8 ((_ zero_extend 11) e39))))
(let ((e85 (bvuge e31 e9)))
(let ((e86 (= e24 e31)))
(let ((e87 (bvsle e20 e30)))
(let ((e88 (bvule ((_ zero_extend 11) e24) e8)))
(let ((e89 (bvslt e20 ((_ zero_extend 4) e8))))
(let ((e90 (bvule v0 e29)))
(let ((e91 (bvsgt v4 ((_ sign_extend 4) e34))))
(let ((e92 (bvult e37 ((_ sign_extend 3) e23))))
(let ((e93 (bvule ((_ zero_extend 4) v3) e37)))
(let ((e94 (bvule e17 ((_ sign_extend 3) e13))))
(let ((e95 (= e20 ((_ sign_extend 15) e39))))
(let ((e96 (bvugt e37 ((_ sign_extend 3) v4))))
(let ((e97 (bvsgt ((_ sign_extend 7) e29) e32)))
(let ((e98 (not e85)))
(let ((e99 (or e80 e65)))
(let ((e100 (=> e46 e53)))
(let ((e101 (or e48 e89)))
(let ((e102 (=> e72 e70)))
(let ((e103 (ite e52 e95 e44)))
(let ((e104 (not e79)))
(let ((e105 (and e59 e78)))
(let ((e106 (= e99 e61)))
(let ((e107 (and e93 e100)))
(let ((e108 (or e66 e75)))
(let ((e109 (and e108 e47)))
(let ((e110 (xor e81 e91)))
(let ((e111 (not e50)))
(let ((e112 (not e58)))
(let ((e113 (=> e76 e101)))
(let ((e114 (= e54 e112)))
(let ((e115 (ite e83 e88 e64)))
(let ((e116 (ite e113 e107 e111)))
(let ((e117 (=> e77 e73)))
(let ((e118 (= e103 e74)))
(let ((e119 (or e97 e106)))
(let ((e120 (not e114)))
(let ((e121 (xor e104 e115)))
(let ((e122 (=> e57 e87)))
(let ((e123 (= e110 e45)))
(let ((e124 (xor e63 e56)))
(let ((e125 (or e123 e119)))
(let ((e126 (= e92 e60)))
(let ((e127 (or e109 e122)))
(let ((e128 (ite e67 e124 e116)))
(let ((e129 (ite e105 e127 e68)))
(let ((e130 (not e118)))
(let ((e131 (=> e51 e121)))
(let ((e132 (= e131 e131)))
(let ((e133 (not e84)))
(let ((e134 (or e55 e129)))
(let ((e135 (xor e133 e126)))
(let ((e136 (= e125 e90)))
(let ((e137 (and e71 e62)))
(let ((e138 (or e130 e49)))
(let ((e139 (xor e128 e128)))
(let ((e140 (and e132 e69)))
(let ((e141 (and e94 e98)))
(let ((e142 (or e117 e86)))
(let ((e143 (ite e137 e102 e137)))
(let ((e144 (or e139 e136)))
(let ((e145 (ite e120 e138 e138)))
(let ((e146 (xor e145 e140)))
(let ((e147 (or e146 e141)))
(let ((e148 (and e82 e147)))
(let ((e149 (=> e143 e96)))
(let ((e150 (or e149 e148)))
(let ((e151 (not e142)))
(let ((e152 (ite e151 e151 e134)))
(let ((e153 (=> e144 e144)))
(let ((e154 (or e150 e135)))
(let ((e155 (xor e154 e153)))
(let ((e156 (or e155 e152)))
(let ((e157 (and e156 (not (= e13 (_ bv0 13))))))
(let ((e158 (and e157 (not (= e13 (bvnot (_ bv0 13)))))))
(let ((e159 (and e158 (not (= e22 (_ bv0 16))))))
(let ((e160 (and e159 (not (= e22 (bvnot (_ bv0 16)))))))
e160
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
