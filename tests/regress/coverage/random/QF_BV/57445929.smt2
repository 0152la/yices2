(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun v0 () (_ BitVec 6))
(declare-fun v1 () (_ BitVec 10))
(assert (let ((e2(_ bv79 7)))
(let ((e3(_ bv7377 16)))
(let ((e4 (bvadd ((_ zero_extend 10) v0) e3)))
(let ((e5 (ite (bvugt ((_ sign_extend 10) v0) e3) (_ bv1 1) (_ bv0 1))))
(let ((e6 (bvxor e2 ((_ sign_extend 6) e5))))
(let ((e7 (bvmul v1 ((_ sign_extend 3) e2))))
(let ((e8 (bvsle e6 ((_ sign_extend 6) e5))))
(let ((e9 (bvugt e2 e2)))
(let ((e10 (bvule v1 v1)))
(let ((e11 (bvult e2 ((_ sign_extend 1) v0))))
(let ((e12 (= e7 v1)))
(let ((e13 (bvult e6 ((_ sign_extend 1) v0))))
(let ((e14 (bvsgt e7 ((_ sign_extend 4) v0))))
(let ((e15 (bvule e7 v1)))
(let ((e16 (bvslt v1 ((_ sign_extend 3) e2))))
(let ((e17 (= e4 ((_ zero_extend 6) e7))))
(let ((e18 (bvule ((_ sign_extend 6) v1) e4)))
(let ((e19 (bvsle v1 e7)))
(let ((e20 (bvsle ((_ zero_extend 9) e2) e4)))
(let ((e21 (bvsle ((_ zero_extend 1) v0) e6)))
(let ((e22 (bvult ((_ zero_extend 9) e5) e7)))
(let ((e23 (bvule ((_ sign_extend 3) e6) v1)))
(let ((e24 (bvuge ((_ zero_extend 6) e7) e3)))
(let ((e25 (= e11 e11)))
(let ((e26 (ite e19 e23 e8)))
(let ((e27 (ite e16 e15 e24)))
(let ((e28 (ite e27 e20 e21)))
(let ((e29 (not e22)))
(let ((e30 (or e29 e9)))
(let ((e31 (not e12)))
(let ((e32 (ite e18 e13 e30)))
(let ((e33 (not e14)))
(let ((e34 (ite e25 e25 e28)))
(let ((e35 (xor e34 e17)))
(let ((e36 (or e31 e26)))
(let ((e37 (and e36 e33)))
(let ((e38 (= e35 e10)))
(let ((e39 (ite e38 e32 e37)))
e39
)))))))))))))))))))))))))))))))))))))))

(check-sat)
