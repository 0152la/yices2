(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun v0 () (_ BitVec 12))
(declare-fun v1 () (_ BitVec 2))
(declare-fun v2 () (_ BitVec 1))
(assert (let ((e3(_ bv15594 15)))
(let ((e4 ((_ extract 3 0) e3)))
(let ((e5 (bvmul e3 ((_ zero_extend 14) v2))))
(let ((e6 (bvsub ((_ zero_extend 2) v1) e4)))
(let ((e7 (ite (bvult e5 ((_ sign_extend 13) v1)) (_ bv1 1) (_ bv0 1))))
(let ((e8 (concat v2 e7)))
(let ((e9 (bvudiv ((_ zero_extend 11) e7) v0)))
(let ((e10 (bvsge ((_ zero_extend 3) v0) e3)))
(let ((e11 (bvuge ((_ zero_extend 11) e6) e5)))
(let ((e12 (bvsge v1 e8)))
(let ((e13 (bvsgt e3 ((_ sign_extend 13) v1))))
(let ((e14 (bvslt e5 ((_ zero_extend 11) e4))))
(let ((e15 (bvugt ((_ zero_extend 13) v1) e3)))
(let ((e16 (bvult ((_ zero_extend 14) v2) e3)))
(let ((e17 (bvuge ((_ sign_extend 10) e8) e9)))
(let ((e18 (bvuge ((_ sign_extend 8) e4) v0)))
(let ((e19 (bvule e6 ((_ sign_extend 2) v1))))
(let ((e20 (bvsge e9 ((_ zero_extend 8) e6))))
(let ((e21 (distinct e5 ((_ zero_extend 11) e6))))
(let ((e22 (bvugt ((_ zero_extend 14) e7) e3)))
(let ((e23 (or e15 e16)))
(let ((e24 (or e12 e13)))
(let ((e25 (or e18 e17)))
(let ((e26 (and e14 e20)))
(let ((e27 (not e26)))
(let ((e28 (=> e21 e23)))
(let ((e29 (not e28)))
(let ((e30 (or e25 e11)))
(let ((e31 (xor e27 e30)))
(let ((e32 (ite e24 e22 e29)))
(let ((e33 (ite e32 e31 e31)))
(let ((e34 (ite e10 e33 e19)))
(let ((e35 (and e34 (not (= v0 (_ bv0 12))))))
e35
))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
