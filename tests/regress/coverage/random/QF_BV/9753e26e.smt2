(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun v0 () (_ BitVec 11))
(assert (let ((e1(_ bv1377 12)))
(let ((e2(_ bv3 4)))
(let ((e3 (bvor e1 ((_ zero_extend 1) v0))))
(let ((e4 (bvadd e3 e1)))
(let ((e5 ((_ rotate_left 3) e3)))
(let ((e6 (bvxor e5 e4)))
(let ((e7 (bvmul e4 e3)))
(let ((e8 (bvor ((_ zero_extend 8) e2) e3)))
(let ((e9 (distinct e1 e1)))
(let ((e10 (bvslt e2 e2)))
(let ((e11 (distinct e4 e8)))
(let ((e12 (bvslt e6 e1)))
(let ((e13 (bvsge ((_ zero_extend 1) v0) e8)))
(let ((e14 (bvuge e1 e5)))
(let ((e15 (bvslt e1 e4)))
(let ((e16 (bvult v0 ((_ zero_extend 7) e2))))
(let ((e17 (bvsle ((_ sign_extend 8) e2) e5)))
(let ((e18 (bvugt e8 e4)))
(let ((e19 (bvule ((_ zero_extend 1) v0) e3)))
(let ((e20 (bvslt e3 ((_ zero_extend 1) v0))))
(let ((e21 (= e3 e7)))
(let ((e22 (or e19 e16)))
(let ((e23 (= e22 e22)))
(let ((e24 (xor e12 e23)))
(let ((e25 (ite e11 e9 e18)))
(let ((e26 (or e15 e21)))
(let ((e27 (ite e13 e24 e20)))
(let ((e28 (or e27 e25)))
(let ((e29 (= e17 e14)))
(let ((e30 (not e10)))
(let ((e31 (and e30 e26)))
(let ((e32 (xor e29 e29)))
(let ((e33 (or e31 e28)))
(let ((e34 (not e32)))
(let ((e35 (=> e34 e33)))
e35
))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
