(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun v0 () (_ BitVec 5))
(declare-fun v1 () (_ BitVec 7))
(declare-fun v2 () (_ BitVec 7))
(assert (let ((e3(_ bv78 7)))
(let ((e4(_ bv19753 16)))
(let ((e5 (bvxnor e3 ((_ zero_extend 2) v0))))
(let ((e6 (bvxor e4 ((_ zero_extend 9) e3))))
(let ((e7 (ite (bvult v2 e3) (_ bv1 1) (_ bv0 1))))
(let ((e8 (bvmul e3 ((_ zero_extend 6) e7))))
(let ((e9 (bvadd ((_ zero_extend 9) e8) e4)))
(let ((e10 (bvnot e9)))
(let ((e11 (bvxor e6 e9)))
(let ((e12 (ite (bvslt e10 e10) (_ bv1 1) (_ bv0 1))))
(let ((e13 (bvxnor v2 e3)))
(let ((e14 ((_ sign_extend 0) e9)))
(let ((e15 ((_ extract 11 2) e10)))
(let ((e16 (ite (= e4 ((_ sign_extend 11) v0)) (_ bv1 1) (_ bv0 1))))
(let ((e17 (bvxor e15 ((_ zero_extend 9) e7))))
(let ((e18 ((_ rotate_left 0) e3)))
(let ((e19 (ite (bvsge e10 ((_ zero_extend 15) e12)) (_ bv1 1) (_ bv0 1))))
(let ((e20 (bvneg e19)))
(let ((e21 (bvnand ((_ sign_extend 15) e7) e9)))
(let ((e22 (bvsub e14 ((_ sign_extend 15) e19))))
(let ((e23 (bvsub e18 e5)))
(let ((e24 (bvurem e5 e23)))
(let ((e25 (ite (bvsge ((_ zero_extend 3) e5) e17) (_ bv1 1) (_ bv0 1))))
(let ((e26 (ite (distinct ((_ zero_extend 9) v1) e11) (_ bv1 1) (_ bv0 1))))
(let ((e27 (bvsle ((_ zero_extend 6) e20) e13)))
(let ((e28 (bvult ((_ zero_extend 6) e7) e13)))
(let ((e29 (bvsle e15 ((_ zero_extend 9) e12))))
(let ((e30 (bvule e21 ((_ zero_extend 11) v0))))
(let ((e31 (= e5 e8)))
(let ((e32 (bvugt e24 e23)))
(let ((e33 (bvult e18 ((_ sign_extend 6) e7))))
(let ((e34 (bvsgt ((_ sign_extend 6) e15) e9)))
(let ((e35 (bvule e22 ((_ zero_extend 15) e19))))
(let ((e36 (bvule e11 ((_ zero_extend 9) e13))))
(let ((e37 (distinct ((_ sign_extend 15) e19) e21)))
(let ((e38 (bvsgt ((_ sign_extend 6) e17) e6)))
(let ((e39 (= v0 v0)))
(let ((e40 (bvsgt ((_ zero_extend 9) e7) e15)))
(let ((e41 (distinct ((_ zero_extend 6) e16) e3)))
(let ((e42 (bvult ((_ zero_extend 15) e7) e6)))
(let ((e43 (bvsge e14 ((_ zero_extend 6) e15))))
(let ((e44 (bvsgt e15 ((_ sign_extend 3) e8))))
(let ((e45 (bvslt e10 e4)))
(let ((e46 (bvult ((_ sign_extend 6) e16) e23)))
(let ((e47 (bvslt ((_ zero_extend 9) e3) e21)))
(let ((e48 (bvuge ((_ zero_extend 9) v1) e11)))
(let ((e49 (bvsge e6 ((_ sign_extend 6) e17))))
(let ((e50 (bvuge e11 e22)))
(let ((e51 (distinct e15 ((_ sign_extend 3) e13))))
(let ((e52 (bvsgt ((_ sign_extend 4) e26) v0)))
(let ((e53 (bvule e21 e22)))
(let ((e54 (bvslt e15 ((_ sign_extend 9) e20))))
(let ((e55 (bvsge e5 e5)))
(let ((e56 (bvslt e24 v2)))
(let ((e57 (bvslt ((_ sign_extend 6) e15) e22)))
(let ((e58 (distinct e22 e21)))
(let ((e59 (bvsle e7 e19)))
(let ((e60 (bvugt e4 ((_ sign_extend 9) e3))))
(let ((e61 (= ((_ sign_extend 4) e7) v0)))
(let ((e62 (bvsgt ((_ sign_extend 15) e12) e22)))
(let ((e63 (bvslt e23 e8)))
(let ((e64 (bvslt e11 ((_ sign_extend 9) v2))))
(let ((e65 (bvuge e10 ((_ sign_extend 15) e7))))
(let ((e66 (bvsge ((_ sign_extend 9) v2) e22)))
(let ((e67 (= ((_ sign_extend 6) e19) e3)))
(let ((e68 (bvult e14 e9)))
(let ((e69 (bvugt e5 e18)))
(let ((e70 (bvule ((_ sign_extend 9) e7) e17)))
(let ((e71 (bvult e18 ((_ sign_extend 6) e16))))
(let ((e72 (bvuge e5 ((_ sign_extend 6) e25))))
(let ((e73 (xor e52 e69)))
(let ((e74 (= e64 e50)))
(let ((e75 (and e28 e29)))
(let ((e76 (xor e40 e53)))
(let ((e77 (xor e70 e67)))
(let ((e78 (not e75)))
(let ((e79 (ite e44 e58 e43)))
(let ((e80 (xor e55 e33)))
(let ((e81 (or e45 e51)))
(let ((e82 (= e63 e41)))
(let ((e83 (not e74)))
(let ((e84 (= e83 e49)))
(let ((e85 (or e34 e37)))
(let ((e86 (=> e72 e79)))
(let ((e87 (= e39 e48)))
(let ((e88 (ite e27 e54 e84)))
(let ((e89 (=> e35 e73)))
(let ((e90 (=> e60 e31)))
(let ((e91 (not e32)))
(let ((e92 (= e57 e78)))
(let ((e93 (or e91 e80)))
(let ((e94 (xor e36 e46)))
(let ((e95 (ite e38 e81 e76)))
(let ((e96 (xor e59 e68)))
(let ((e97 (=> e42 e96)))
(let ((e98 (or e92 e89)))
(let ((e99 (= e62 e82)))
(let ((e100 (ite e65 e71 e85)))
(let ((e101 (=> e95 e90)))
(let ((e102 (xor e77 e66)))
(let ((e103 (= e94 e98)))
(let ((e104 (and e93 e100)))
(let ((e105 (xor e104 e102)))
(let ((e106 (=> e99 e87)))
(let ((e107 (=> e105 e86)))
(let ((e108 (and e101 e56)))
(let ((e109 (= e103 e97)))
(let ((e110 (or e107 e47)))
(let ((e111 (= e108 e106)))
(let ((e112 (=> e109 e88)))
(let ((e113 (= e61 e61)))
(let ((e114 (= e30 e112)))
(let ((e115 (and e111 e111)))
(let ((e116 (= e113 e114)))
(let ((e117 (not e116)))
(let ((e118 (and e110 e115)))
(let ((e119 (= e118 e117)))
(let ((e120 (and e119 (not (= e23 (_ bv0 7))))))
e120
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
