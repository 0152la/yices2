(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun v0 () (_ BitVec 6))
(declare-fun v1 () (_ BitVec 7))
(declare-fun v2 () (_ BitVec 14))
(assert (let ((e3(_ bv12344 14)))
(let ((e4 (bvadd ((_ zero_extend 8) v0) e3)))
(let ((e5 (bvcomp e3 v2)))
(let ((e6 (bvadd ((_ zero_extend 7) v1) e4)))
(let ((e7 (bvult v2 e3)))
(let ((e8 (= e6 e3)))
(let ((e9 (= e6 ((_ zero_extend 7) v1))))
(let ((e10 (bvsgt v2 ((_ zero_extend 7) v1))))
(let ((e11 (= ((_ sign_extend 8) v0) e3)))
(let ((e12 (bvuge v1 v1)))
(let ((e13 (bvuge e3 ((_ sign_extend 8) v0))))
(let ((e14 (bvult ((_ zero_extend 8) v0) e6)))
(let ((e15 (bvsge e6 e3)))
(let ((e16 (bvugt ((_ zero_extend 13) e5) e6)))
(let ((e17 (= ((_ sign_extend 8) v0) e6)))
(let ((e18 (bvult ((_ sign_extend 13) e5) e3)))
(let ((e19 (bvslt e3 e3)))
(let ((e20 (bvsge ((_ sign_extend 1) v0) v1)))
(let ((e21 (bvslt ((_ zero_extend 13) e5) e4)))
(let ((e22 (or e21 e16)))
(let ((e23 (or e15 e15)))
(let ((e24 (=> e10 e13)))
(let ((e25 (not e24)))
(let ((e26 (and e11 e22)))
(let ((e27 (ite e14 e20 e19)))
(let ((e28 (ite e8 e27 e8)))
(let ((e29 (ite e23 e9 e17)))
(let ((e30 (and e12 e26)))
(let ((e31 (xor e18 e7)))
(let ((e32 (=> e25 e28)))
(let ((e33 (ite e30 e30 e29)))
(let ((e34 (and e31 e32)))
(let ((e35 (or e34 e33)))
e35
))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
