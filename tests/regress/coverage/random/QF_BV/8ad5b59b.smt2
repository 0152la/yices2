(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun v0 () (_ BitVec 5))
(declare-fun v1 () (_ BitVec 1))
(declare-fun v2 () (_ BitVec 1))
(declare-fun v3 () (_ BitVec 8))
(assert (let ((e4(_ bv1 1)))
(let ((e5(_ bv2971 12)))
(let ((e6 (bvand ((_ zero_extend 4) v2) v0)))
(let ((e7 (bvnand v3 ((_ sign_extend 3) v0))))
(let ((e8 (bvshl e5 ((_ zero_extend 11) v2))))
(let ((e9 (ite (bvsle e7 ((_ sign_extend 3) e6)) (_ bv1 1) (_ bv0 1))))
(let ((e10 (ite (bvuge ((_ zero_extend 4) e7) e5) (_ bv1 1) (_ bv0 1))))
(let ((e11 (bvsdiv e6 e6)))
(let ((e12 (bvlshr e11 ((_ zero_extend 4) v2))))
(let ((e13 (ite (= v2 v2) (_ bv1 1) (_ bv0 1))))
(let ((e14 (ite (bvult v0 ((_ zero_extend 4) e9)) (_ bv1 1) (_ bv0 1))))
(let ((e15 (ite (bvult e9 e13) (_ bv1 1) (_ bv0 1))))
(let ((e16 (concat e6 e10)))
(let ((e17 (bvurem e7 e7)))
(let ((e18 ((_ repeat 1) v3)))
(let ((e19 (bvnor ((_ sign_extend 3) e6) e18)))
(let ((e20 (bvlshr ((_ sign_extend 4) e18) e8)))
(let ((e21 (bvurem ((_ zero_extend 4) v1) e6)))
(let ((e22 (ite (distinct v2 e10) (_ bv1 1) (_ bv0 1))))
(let ((e23 (ite (bvslt ((_ sign_extend 4) v1) v0) (_ bv1 1) (_ bv0 1))))
(let ((e24 (bvsub e23 e15)))
(let ((e25 ((_ extract 3 2) e5)))
(let ((e26 ((_ sign_extend 11) e6)))
(let ((e27 (ite (bvsge e6 v0) (_ bv1 1) (_ bv0 1))))
(let ((e28 (ite (bvslt ((_ zero_extend 7) e9) e7) (_ bv1 1) (_ bv0 1))))
(let ((e29 (bvlshr ((_ zero_extend 7) e27) e19)))
(let ((e30 ((_ rotate_right 1) e16)))
(let ((e31 (bvor e21 ((_ zero_extend 4) e4))))
(let ((e32 (bvsge e12 ((_ sign_extend 4) e10))))
(let ((e33 (distinct ((_ zero_extend 7) e9) v3)))
(let ((e34 (= e11 ((_ zero_extend 4) e9))))
(let ((e35 (bvuge e16 ((_ zero_extend 1) e31))))
(let ((e36 (bvule e14 e14)))
(let ((e37 (bvule ((_ zero_extend 4) e17) e20)))
(let ((e38 (bvule e23 e22)))
(let ((e39 (= e20 ((_ sign_extend 7) e31))))
(let ((e40 (bvsle e30 ((_ sign_extend 5) e9))))
(let ((e41 (bvsgt ((_ zero_extend 7) e10) e7)))
(let ((e42 (bvuge e13 e10)))
(let ((e43 (bvult ((_ sign_extend 7) e13) e7)))
(let ((e44 (bvslt ((_ zero_extend 5) e10) e30)))
(let ((e45 (bvslt e31 ((_ zero_extend 4) e14))))
(let ((e46 (bvugt e8 ((_ sign_extend 11) e10))))
(let ((e47 (distinct e30 ((_ zero_extend 1) e21))))
(let ((e48 (bvsle ((_ sign_extend 4) v2) e12)))
(let ((e49 (bvugt e8 ((_ sign_extend 7) e31))))
(let ((e50 (bvult ((_ sign_extend 6) e30) e5)))
(let ((e51 (= ((_ sign_extend 4) v2) e21)))
(let ((e52 (bvsle ((_ zero_extend 5) e9) e30)))
(let ((e53 (bvult e8 ((_ sign_extend 11) e24))))
(let ((e54 (bvuge e6 ((_ zero_extend 4) e10))))
(let ((e55 (bvsgt ((_ zero_extend 7) e12) e8)))
(let ((e56 (bvule e14 e27)))
(let ((e57 (= e11 ((_ sign_extend 4) e22))))
(let ((e58 (bvslt ((_ zero_extend 4) e15) e11)))
(let ((e59 (bvule v0 ((_ zero_extend 4) e28))))
(let ((e60 (= e10 e22)))
(let ((e61 (bvsge e23 e28)))
(let ((e62 (bvugt e4 v2)))
(let ((e63 (bvsle ((_ sign_extend 4) e14) v0)))
(let ((e64 (bvslt e8 ((_ zero_extend 11) e10))))
(let ((e65 (bvult e31 e6)))
(let ((e66 (distinct e14 e4)))
(let ((e67 (bvugt ((_ zero_extend 7) e13) e7)))
(let ((e68 (bvsge v3 ((_ sign_extend 7) e27))))
(let ((e69 (bvult e19 ((_ zero_extend 7) e22))))
(let ((e70 (distinct e31 e12)))
(let ((e71 (bvsge e18 e19)))
(let ((e72 (distinct ((_ sign_extend 4) v1) e12)))
(let ((e73 (bvsgt e16 ((_ zero_extend 5) v1))))
(let ((e74 (bvule e11 ((_ zero_extend 4) e10))))
(let ((e75 (bvslt e20 ((_ sign_extend 7) e21))))
(let ((e76 (bvult e17 ((_ sign_extend 7) e27))))
(let ((e77 (bvslt e27 e4)))
(let ((e78 (bvslt e7 ((_ sign_extend 3) v0))))
(let ((e79 (bvsgt e26 ((_ zero_extend 8) v3))))
(let ((e80 (bvule ((_ sign_extend 3) e12) e17)))
(let ((e81 (distinct ((_ zero_extend 7) v1) e29)))
(let ((e82 (bvsge e6 ((_ sign_extend 4) e22))))
(let ((e83 (bvsgt v1 e10)))
(let ((e84 (bvule ((_ zero_extend 3) e11) e18)))
(let ((e85 (bvult e16 ((_ zero_extend 5) e24))))
(let ((e86 (bvslt ((_ sign_extend 11) e22) e20)))
(let ((e87 (distinct e17 e19)))
(let ((e88 (bvsge ((_ sign_extend 15) e24) e26)))
(let ((e89 (bvslt ((_ zero_extend 4) e28) e6)))
(let ((e90 (bvslt ((_ zero_extend 6) e25) e29)))
(let ((e91 (ite e81 e81 e74)))
(let ((e92 (=> e66 e45)))
(let ((e93 (= e85 e59)))
(let ((e94 (= e63 e54)))
(let ((e95 (not e80)))
(let ((e96 (or e68 e82)))
(let ((e97 (xor e49 e75)))
(let ((e98 (xor e53 e48)))
(let ((e99 (not e42)))
(let ((e100 (=> e44 e33)))
(let ((e101 (= e76 e40)))
(let ((e102 (= e87 e73)))
(let ((e103 (=> e50 e56)))
(let ((e104 (and e62 e86)))
(let ((e105 (xor e78 e67)))
(let ((e106 (=> e92 e83)))
(let ((e107 (and e100 e69)))
(let ((e108 (=> e99 e52)))
(let ((e109 (or e107 e91)))
(let ((e110 (or e96 e98)))
(let ((e111 (not e43)))
(let ((e112 (= e89 e71)))
(let ((e113 (=> e57 e64)))
(let ((e114 (ite e93 e79 e95)))
(let ((e115 (=> e112 e36)))
(let ((e116 (=> e109 e60)))
(let ((e117 (ite e110 e110 e114)))
(let ((e118 (= e70 e46)))
(let ((e119 (=> e65 e103)))
(let ((e120 (ite e101 e35 e72)))
(let ((e121 (= e61 e58)))
(let ((e122 (= e41 e121)))
(let ((e123 (or e47 e94)))
(let ((e124 (ite e111 e104 e84)))
(let ((e125 (xor e37 e37)))
(let ((e126 (and e32 e51)))
(let ((e127 (or e113 e88)))
(let ((e128 (=> e115 e120)))
(let ((e129 (xor e127 e117)))
(let ((e130 (=> e129 e90)))
(let ((e131 (xor e38 e128)))
(let ((e132 (or e131 e108)))
(let ((e133 (=> e105 e118)))
(let ((e134 (or e77 e34)))
(let ((e135 (not e132)))
(let ((e136 (and e134 e126)))
(let ((e137 (= e133 e39)))
(let ((e138 (ite e124 e116 e123)))
(let ((e139 (=> e102 e135)))
(let ((e140 (=> e136 e122)))
(let ((e141 (= e106 e137)))
(let ((e142 (or e125 e140)))
(let ((e143 (not e97)))
(let ((e144 (ite e141 e55 e142)))
(let ((e145 (= e144 e119)))
(let ((e146 (=> e145 e139)))
(let ((e147 (ite e130 e130 e130)))
(let ((e148 (= e138 e143)))
(let ((e149 (= e146 e148)))
(let ((e150 (or e147 e147)))
(let ((e151 (= e149 e149)))
(let ((e152 (or e150 e150)))
(let ((e153 (=> e151 e152)))
(let ((e154 (and e153 (not (= e7 (_ bv0 8))))))
(let ((e155 (and e154 (not (= e6 (_ bv0 5))))))
(let ((e156 (and e155 (not (= e6 (bvnot (_ bv0 5)))))))
e156
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
