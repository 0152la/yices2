(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun v0 () (_ BitVec 10))
(declare-fun v1 () (_ BitVec 14))
(declare-fun v2 () (_ BitVec 11))
(declare-fun v3 () (_ BitVec 9))
(declare-fun v4 () (_ BitVec 1))
(assert (let ((e5(_ bv2 2)))
(let ((e6 (bvashr v0 ((_ zero_extend 8) e5))))
(let ((e7 (bvnand v1 ((_ sign_extend 4) v0))))
(let ((e8 (ite (bvsle e6 ((_ sign_extend 9) v4)) (_ bv1 1) (_ bv0 1))))
(let ((e9 (ite (bvult ((_ zero_extend 1) v4) e5) (_ bv1 1) (_ bv0 1))))
(let ((e10 (ite (bvsge e6 ((_ zero_extend 1) v3)) (_ bv1 1) (_ bv0 1))))
(let ((e11 (bvadd v3 v3)))
(let ((e12 (ite (= (_ bv1 1) ((_ extract 0 0) e8)) ((_ sign_extend 8) v4) v3)))
(let ((e13 (bvsub v3 ((_ zero_extend 8) e9))))
(let ((e14 (bvnot e9)))
(let ((e15 (ite (bvuge e11 ((_ zero_extend 8) e8)) (_ bv1 1) (_ bv0 1))))
(let ((e16 (ite (= (_ bv1 1) ((_ extract 0 0) e15)) e6 ((_ sign_extend 1) e13))))
(let ((e17 (bvand e11 ((_ zero_extend 8) e10))))
(let ((e18 ((_ rotate_right 1) e7)))
(let ((e19 (bvadd ((_ zero_extend 13) e9) e7)))
(let ((e20 (ite (distinct e11 e13) (_ bv1 1) (_ bv0 1))))
(let ((e21 (ite (= (_ bv1 1) ((_ extract 0 0) e14)) ((_ sign_extend 4) e16) e19)))
(let ((e22 (bvadd ((_ sign_extend 8) e8) e13)))
(let ((e23 (ite (bvule ((_ sign_extend 10) v4) v2) (_ bv1 1) (_ bv0 1))))
(let ((e24 (bvsle e15 e15)))
(let ((e25 (bvult e7 ((_ sign_extend 4) e16))))
(let ((e26 (distinct e10 e8)))
(let ((e27 (bvsle v4 e14)))
(let ((e28 (bvule e21 ((_ sign_extend 13) e14))))
(let ((e29 (= e12 ((_ zero_extend 8) e14))))
(let ((e30 (distinct ((_ zero_extend 8) e10) e22)))
(let ((e31 (bvugt v1 ((_ zero_extend 4) e6))))
(let ((e32 (bvuge e6 ((_ zero_extend 9) e23))))
(let ((e33 (distinct e17 ((_ sign_extend 8) e10))))
(let ((e34 (bvsgt e11 ((_ zero_extend 8) e14))))
(let ((e35 (bvult e18 e21)))
(let ((e36 (bvsle v1 ((_ sign_extend 13) e8))))
(let ((e37 (bvule e22 ((_ zero_extend 8) e10))))
(let ((e38 (bvult ((_ zero_extend 8) e10) e12)))
(let ((e39 (distinct ((_ sign_extend 13) e23) e18)))
(let ((e40 (bvugt e5 ((_ sign_extend 1) e9))))
(let ((e41 (bvsgt ((_ zero_extend 8) e20) v3)))
(let ((e42 (bvsle e8 e10)))
(let ((e43 (bvult ((_ zero_extend 4) v0) v1)))
(let ((e44 (bvult ((_ sign_extend 13) e9) e21)))
(let ((e45 (bvule e19 e21)))
(let ((e46 (bvsle ((_ zero_extend 12) e5) e7)))
(let ((e47 (bvult e7 ((_ zero_extend 5) e13))))
(let ((e48 (bvsle v1 ((_ sign_extend 13) e23))))
(let ((e49 (bvsle ((_ sign_extend 13) e20) e18)))
(let ((e50 (distinct e13 ((_ zero_extend 8) e23))))
(let ((e51 (bvsgt e10 e9)))
(let ((e52 (distinct ((_ zero_extend 13) e10) v1)))
(let ((e53 (= e13 ((_ zero_extend 8) e15))))
(let ((e54 (bvult e22 ((_ zero_extend 8) e10))))
(let ((e55 (bvslt v2 ((_ sign_extend 2) e12))))
(let ((e56 (and e33 e50)))
(let ((e57 (ite e39 e53 e32)))
(let ((e58 (or e40 e42)))
(let ((e59 (ite e54 e55 e52)))
(let ((e60 (= e37 e37)))
(let ((e61 (= e24 e30)))
(let ((e62 (not e28)))
(let ((e63 (and e35 e47)))
(let ((e64 (not e46)))
(let ((e65 (not e62)))
(let ((e66 (=> e51 e63)))
(let ((e67 (and e26 e29)))
(let ((e68 (= e31 e56)))
(let ((e69 (or e48 e67)))
(let ((e70 (ite e61 e38 e58)))
(let ((e71 (=> e43 e45)))
(let ((e72 (not e65)))
(let ((e73 (or e36 e41)))
(let ((e74 (=> e25 e59)))
(let ((e75 (ite e74 e57 e72)))
(let ((e76 (ite e66 e34 e60)))
(let ((e77 (=> e44 e70)))
(let ((e78 (xor e71 e71)))
(let ((e79 (or e73 e78)))
(let ((e80 (xor e68 e75)))
(let ((e81 (xor e27 e77)))
(let ((e82 (=> e79 e80)))
(let ((e83 (and e81 e49)))
(let ((e84 (xor e83 e64)))
(let ((e85 (=> e69 e76)))
(let ((e86 (= e82 e84)))
(let ((e87 (xor e85 e86)))
e87
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
