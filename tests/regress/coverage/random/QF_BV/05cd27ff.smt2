(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun v0 () (_ BitVec 11))
(declare-fun v1 () (_ BitVec 10))
(declare-fun v2 () (_ BitVec 14))
(declare-fun v3 () (_ BitVec 12))
(assert (let ((e4(_ bv6 5)))
(let ((e5(_ bv6 4)))
(let ((e6 (bvcomp ((_ zero_extend 1) v1) v0)))
(let ((e7 (bvsrem ((_ sign_extend 10) e5) v2)))
(let ((e8 (ite (bvsle ((_ sign_extend 2) v3) e7) (_ bv1 1) (_ bv0 1))))
(let ((e9 (bvcomp ((_ sign_extend 2) v1) v3)))
(let ((e10 (bvudiv ((_ zero_extend 4) v1) e7)))
(let ((e11 (bvashr ((_ zero_extend 13) e9) v2)))
(let ((e12 (ite (bvult e11 ((_ sign_extend 9) e4)) (_ bv1 1) (_ bv0 1))))
(let ((e13 (bvsle e11 ((_ sign_extend 10) e5))))
(let ((e14 (bvuge ((_ sign_extend 10) e6) v0)))
(let ((e15 (distinct e5 ((_ sign_extend 3) e6))))
(let ((e16 (bvsle ((_ zero_extend 2) v1) v3)))
(let ((e17 (= e10 ((_ sign_extend 2) v3))))
(let ((e18 (bvule e10 ((_ zero_extend 4) v1))))
(let ((e19 (bvsle e4 ((_ zero_extend 4) e6))))
(let ((e20 (bvuge ((_ sign_extend 13) e12) e11)))
(let ((e21 (bvsge ((_ sign_extend 11) e8) v3)))
(let ((e22 (bvuge e4 ((_ zero_extend 4) e9))))
(let ((e23 (bvsgt e11 ((_ zero_extend 13) e8))))
(let ((e24 (= ((_ sign_extend 4) e12) e4)))
(let ((e25 (= ((_ sign_extend 3) v0) e7)))
(let ((e26 (bvult ((_ zero_extend 10) e9) v0)))
(let ((e27 (= ((_ sign_extend 3) v0) e10)))
(let ((e28 (bvslt ((_ sign_extend 13) e12) e10)))
(let ((e29 (bvugt e10 ((_ sign_extend 10) e5))))
(let ((e30 (bvsle ((_ zero_extend 3) e6) e5)))
(let ((e31 (bvuge e9 e9)))
(let ((e32 (bvuge ((_ sign_extend 3) e12) e5)))
(let ((e33 (bvsle e5 ((_ zero_extend 3) e12))))
(let ((e34 (= ((_ zero_extend 9) e4) e7)))
(let ((e35 (bvule e5 ((_ sign_extend 3) e12))))
(let ((e36 (distinct ((_ zero_extend 9) e4) e7)))
(let ((e37 (= v2 e10)))
(let ((e38 (ite e20 e23 e34)))
(let ((e39 (or e26 e17)))
(let ((e40 (xor e29 e30)))
(let ((e41 (= e19 e28)))
(let ((e42 (=> e15 e33)))
(let ((e43 (ite e13 e27 e37)))
(let ((e44 (and e24 e39)))
(let ((e45 (= e43 e21)))
(let ((e46 (xor e35 e36)))
(let ((e47 (=> e38 e16)))
(let ((e48 (and e44 e41)))
(let ((e49 (and e14 e42)))
(let ((e50 (and e32 e45)))
(let ((e51 (and e50 e31)))
(let ((e52 (not e47)))
(let ((e53 (= e40 e52)))
(let ((e54 (ite e48 e53 e25)))
(let ((e55 (ite e22 e51 e51)))
(let ((e56 (or e54 e54)))
(let ((e57 (and e46 e55)))
(let ((e58 (or e49 e57)))
(let ((e59 (and e18 e56)))
(let ((e60 (not e59)))
(let ((e61 (xor e58 e58)))
(let ((e62 (xor e60 e61)))
(let ((e63 (and e62 (not (= e7 (_ bv0 14))))))
(let ((e64 (and e63 (not (= v2 (_ bv0 14))))))
(let ((e65 (and e64 (not (= v2 (bvnot (_ bv0 14)))))))
e65
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
