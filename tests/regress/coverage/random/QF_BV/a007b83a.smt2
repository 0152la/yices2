(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun v0 () (_ BitVec 15))
(declare-fun v1 () (_ BitVec 3))
(declare-fun v2 () (_ BitVec 5))
(assert (let ((e3(_ bv61 6)))
(let ((e4 ((_ extract 5 4) e3)))
(let ((e5 (bvlshr e3 e3)))
(let ((e6 (bvxnor e3 e5)))
(let ((e7 (ite (= (_ bv1 1) ((_ extract 4 4) e3)) e3 e5)))
(let ((e8 (ite (bvuge ((_ sign_extend 3) v1) e3) (_ bv1 1) (_ bv0 1))))
(let ((e9 ((_ zero_extend 0) v0)))
(let ((e10 (bvnand v0 ((_ zero_extend 9) e6))))
(let ((e11 (ite (bvsle e9 ((_ zero_extend 9) e3)) (_ bv1 1) (_ bv0 1))))
(let ((e12 (bvnot e10)))
(let ((e13 (concat e11 v1)))
(let ((e14 (ite (bvule ((_ zero_extend 1) v1) e13) (_ bv1 1) (_ bv0 1))))
(let ((e15 (ite (bvslt e13 ((_ zero_extend 3) e8)) (_ bv1 1) (_ bv0 1))))
(let ((e16 (bvxnor ((_ sign_extend 5) e11) e5)))
(let ((e17 (bvxnor e8 e11)))
(let ((e18 (bvudiv e16 e6)))
(let ((e19 (bvshl ((_ zero_extend 9) e16) v0)))
(let ((e20 (bvadd ((_ zero_extend 5) e14) e16)))
(let ((e21 (bvsrem ((_ zero_extend 2) e15) v1)))
(let ((e22 (ite (distinct ((_ zero_extend 1) e13) v2) (_ bv1 1) (_ bv0 1))))
(let ((e23 (bvult e10 ((_ zero_extend 9) e6))))
(let ((e24 (bvsle v2 ((_ zero_extend 4) e8))))
(let ((e25 (bvslt ((_ sign_extend 14) e8) v0)))
(let ((e26 (bvsge e16 ((_ sign_extend 5) e15))))
(let ((e27 (bvuge v0 ((_ sign_extend 11) e13))))
(let ((e28 (bvsle ((_ sign_extend 4) e8) v2)))
(let ((e29 (bvult ((_ zero_extend 14) e17) e10)))
(let ((e30 (bvult e15 e14)))
(let ((e31 (bvslt ((_ zero_extend 14) e17) e10)))
(let ((e32 (bvult e19 ((_ sign_extend 12) v1))))
(let ((e33 (bvslt e10 ((_ sign_extend 14) e22))))
(let ((e34 (bvuge ((_ sign_extend 2) e11) v1)))
(let ((e35 (bvslt e17 e15)))
(let ((e36 (bvsgt e9 ((_ zero_extend 14) e8))))
(let ((e37 (bvugt v2 ((_ sign_extend 4) e17))))
(let ((e38 (bvsgt e10 ((_ sign_extend 9) e3))))
(let ((e39 (bvsle ((_ zero_extend 9) e18) e9)))
(let ((e40 (= ((_ zero_extend 13) e4) v0)))
(let ((e41 (bvsgt e16 e7)))
(let ((e42 (bvule e20 e3)))
(let ((e43 (= ((_ zero_extend 12) v1) e19)))
(let ((e44 (bvsle e9 ((_ zero_extend 14) e17))))
(let ((e45 (bvslt ((_ sign_extend 10) v2) e19)))
(let ((e46 (distinct e5 e16)))
(let ((e47 (bvsge e3 e18)))
(let ((e48 (bvslt ((_ sign_extend 2) e13) e5)))
(let ((e49 (bvule e4 e4)))
(let ((e50 (bvule e17 e11)))
(let ((e51 (bvule ((_ zero_extend 3) e17) e13)))
(let ((e52 (bvsle e6 e20)))
(let ((e53 (bvsle e16 e6)))
(let ((e54 (bvugt e16 e5)))
(let ((e55 (bvsle ((_ zero_extend 5) e22) e6)))
(let ((e56 (bvult e15 e8)))
(let ((e57 (bvsle e4 ((_ zero_extend 1) e22))))
(let ((e58 (bvsgt e5 ((_ zero_extend 5) e14))))
(let ((e59 (bvugt ((_ zero_extend 4) e15) v2)))
(let ((e60 (bvsge v0 ((_ zero_extend 12) v1))))
(let ((e61 (bvule e16 ((_ zero_extend 2) e13))))
(let ((e62 (bvugt ((_ zero_extend 5) e8) e6)))
(let ((e63 (bvsgt ((_ zero_extend 9) e6) e12)))
(let ((e64 (bvuge e18 e20)))
(let ((e65 (bvugt e11 e15)))
(let ((e66 (bvsge v0 ((_ zero_extend 11) e13))))
(let ((e67 (bvslt ((_ sign_extend 14) e14) e12)))
(let ((e68 (distinct ((_ zero_extend 5) e14) e5)))
(let ((e69 (distinct e7 e6)))
(let ((e70 (bvuge e6 ((_ sign_extend 3) e21))))
(let ((e71 (=> e24 e57)))
(let ((e72 (= e71 e43)))
(let ((e73 (xor e72 e50)))
(let ((e74 (= e48 e53)))
(let ((e75 (= e38 e60)))
(let ((e76 (and e42 e70)))
(let ((e77 (and e40 e39)))
(let ((e78 (xor e33 e75)))
(let ((e79 (not e47)))
(let ((e80 (=> e55 e45)))
(let ((e81 (and e56 e66)))
(let ((e82 (xor e58 e65)))
(let ((e83 (= e49 e78)))
(let ((e84 (=> e81 e68)))
(let ((e85 (xor e44 e84)))
(let ((e86 (xor e67 e73)))
(let ((e87 (= e77 e26)))
(let ((e88 (=> e51 e51)))
(let ((e89 (= e27 e31)))
(let ((e90 (and e74 e76)))
(let ((e91 (ite e62 e28 e61)))
(let ((e92 (= e52 e69)))
(let ((e93 (ite e41 e91 e64)))
(let ((e94 (or e36 e23)))
(let ((e95 (and e83 e87)))
(let ((e96 (or e54 e30)))
(let ((e97 (and e29 e95)))
(let ((e98 (or e80 e32)))
(let ((e99 (or e93 e89)))
(let ((e100 (= e86 e96)))
(let ((e101 (or e63 e97)))
(let ((e102 (= e101 e85)))
(let ((e103 (=> e88 e59)))
(let ((e104 (ite e99 e25 e79)))
(let ((e105 (and e94 e92)))
(let ((e106 (ite e105 e102 e37)))
(let ((e107 (ite e98 e103 e46)))
(let ((e108 (or e106 e82)))
(let ((e109 (xor e34 e34)))
(let ((e110 (= e100 e104)))
(let ((e111 (xor e35 e108)))
(let ((e112 (or e110 e90)))
(let ((e113 (= e107 e112)))
(let ((e114 (and e111 e111)))
(let ((e115 (or e114 e114)))
(let ((e116 (and e115 e115)))
(let ((e117 (ite e113 e116 e113)))
(let ((e118 (=> e109 e117)))
(let ((e119 (and e118 (not (= v1 (_ bv0 3))))))
(let ((e120 (and e119 (not (= v1 (bvnot (_ bv0 3)))))))
(let ((e121 (and e120 (not (= e6 (_ bv0 6))))))
e121
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
