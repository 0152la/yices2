(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun v0 () (_ BitVec 15))
(declare-fun v1 () (_ BitVec 9))
(declare-fun v2 () (_ BitVec 2))
(declare-fun v3 () (_ BitVec 7))
(declare-fun v4 () (_ BitVec 8))
(assert (let ((e5(_ bv5 3)))
(let ((e6 (ite (= ((_ zero_extend 8) v3) v0) (_ bv1 1) (_ bv0 1))))
(let ((e7 (bvlshr e5 e5)))
(let ((e8 ((_ extract 4 0) v1)))
(let ((e9 (bvnor ((_ sign_extend 2) e8) v3)))
(let ((e10 (bvmul v3 v3)))
(let ((e11 (bvshl v1 ((_ sign_extend 1) v4))))
(let ((e12 (bvmul e11 ((_ zero_extend 4) e8))))
(let ((e13 (bvxnor ((_ zero_extend 2) v3) e11)))
(let ((e14 (bvand ((_ zero_extend 6) e5) e13)))
(let ((e15 (bvand e9 ((_ zero_extend 2) e8))))
(let ((e16 (ite (= ((_ zero_extend 10) e8) v0) (_ bv1 1) (_ bv0 1))))
(let ((e17 (ite (distinct ((_ sign_extend 4) e16) e8) (_ bv1 1) (_ bv0 1))))
(let ((e18 (bvlshr ((_ sign_extend 2) e15) e11)))
(let ((e19 (bvneg e10)))
(let ((e20 ((_ zero_extend 0) v0)))
(let ((e21 (concat v3 e16)))
(let ((e22 (ite (bvslt v1 ((_ sign_extend 7) v2)) (_ bv1 1) (_ bv0 1))))
(let ((e23 (distinct e18 ((_ sign_extend 2) e15))))
(let ((e24 (bvslt ((_ zero_extend 6) e6) e19)))
(let ((e25 (bvsge e9 e19)))
(let ((e26 (= e9 ((_ zero_extend 2) e8))))
(let ((e27 (bvule ((_ sign_extend 7) e16) e21)))
(let ((e28 (bvule ((_ zero_extend 2) v3) e12)))
(let ((e29 (= ((_ sign_extend 6) e11) v0)))
(let ((e30 (bvsgt e7 ((_ zero_extend 2) e6))))
(let ((e31 (bvult v0 ((_ sign_extend 7) e21))))
(let ((e32 (bvsgt ((_ zero_extend 4) e7) e9)))
(let ((e33 (bvsgt e19 e9)))
(let ((e34 (bvugt ((_ sign_extend 2) e5) e8)))
(let ((e35 (bvsge ((_ zero_extend 14) e16) e20)))
(let ((e36 (bvuge e20 e20)))
(let ((e37 (bvult e14 ((_ sign_extend 8) e22))))
(let ((e38 (bvslt v4 ((_ zero_extend 6) v2))))
(let ((e39 (bvsle v4 ((_ zero_extend 7) e6))))
(let ((e40 (bvule e7 ((_ zero_extend 2) e16))))
(let ((e41 (bvule e14 e11)))
(let ((e42 (bvsge v4 e21)))
(let ((e43 (bvslt ((_ sign_extend 8) e6) v1)))
(let ((e44 (bvuge ((_ zero_extend 2) e8) e10)))
(let ((e45 (bvule ((_ zero_extend 2) e10) e14)))
(let ((e46 (bvsge v1 ((_ zero_extend 8) e22))))
(let ((e47 (bvuge ((_ sign_extend 1) v4) e11)))
(let ((e48 (bvsge v0 ((_ sign_extend 6) e18))))
(let ((e49 (bvsge e20 ((_ sign_extend 14) e6))))
(let ((e50 (bvule e21 ((_ sign_extend 1) e10))))
(let ((e51 (bvsge e14 e11)))
(let ((e52 (bvsge ((_ sign_extend 7) e21) v0)))
(let ((e53 (bvule e20 ((_ zero_extend 6) v1))))
(let ((e54 (= e20 ((_ sign_extend 6) e14))))
(let ((e55 (bvule ((_ zero_extend 1) v4) v1)))
(let ((e56 (distinct e6 e6)))
(let ((e57 (bvuge e8 ((_ zero_extend 4) e6))))
(let ((e58 (bvult e12 e14)))
(let ((e59 (bvule e8 ((_ zero_extend 4) e17))))
(let ((e60 (= ((_ zero_extend 8) e6) e12)))
(let ((e61 (bvuge ((_ sign_extend 6) e16) e10)))
(let ((e62 (= v3 ((_ sign_extend 6) e22))))
(let ((e63 (bvule e10 e15)))
(let ((e64 (bvsge v1 ((_ zero_extend 8) e17))))
(let ((e65 (bvule ((_ zero_extend 2) e17) e5)))
(let ((e66 (bvsle v3 ((_ sign_extend 6) e16))))
(let ((e67 (= e5 ((_ zero_extend 2) e16))))
(let ((e68 (bvsgt v0 ((_ zero_extend 8) v3))))
(let ((e69 (distinct ((_ zero_extend 14) e6) v0)))
(let ((e70 (bvsge v0 ((_ sign_extend 10) e8))))
(let ((e71 (bvule ((_ sign_extend 2) e16) e5)))
(let ((e72 (bvult e18 ((_ sign_extend 2) e15))))
(let ((e73 (distinct e20 ((_ sign_extend 14) e16))))
(let ((e74 (bvult ((_ sign_extend 4) e8) e18)))
(let ((e75 (bvuge ((_ zero_extend 7) e17) v4)))
(let ((e76 (= ((_ zero_extend 4) e8) e11)))
(let ((e77 (bvslt ((_ sign_extend 2) e8) e9)))
(let ((e78 (bvuge e18 e18)))
(let ((e79 (bvuge e8 ((_ sign_extend 4) e6))))
(let ((e80 (bvule ((_ zero_extend 6) e7) e14)))
(let ((e81 (bvugt e20 ((_ sign_extend 14) e17))))
(let ((e82 (distinct ((_ sign_extend 6) e14) v0)))
(let ((e83 (bvsgt ((_ zero_extend 6) e16) v3)))
(let ((e84 (bvule ((_ zero_extend 6) e7) e11)))
(let ((e85 (bvult e20 ((_ sign_extend 8) e19))))
(let ((e86 (bvult ((_ zero_extend 6) e22) e9)))
(let ((e87 (bvsle e8 ((_ zero_extend 4) e16))))
(let ((e88 (bvsle v3 e15)))
(let ((e89 (bvugt v0 e20)))
(let ((e90 (distinct ((_ sign_extend 1) v4) e11)))
(let ((e91 (bvslt e13 e18)))
(let ((e92 (ite e86 e86 e86)))
(let ((e93 (ite e91 e74 e83)))
(let ((e94 (or e84 e57)))
(let ((e95 (xor e88 e54)))
(let ((e96 (or e52 e79)))
(let ((e97 (= e62 e38)))
(let ((e98 (= e75 e41)))
(let ((e99 (and e50 e36)))
(let ((e100 (ite e71 e95 e32)))
(let ((e101 (= e49 e97)))
(let ((e102 (or e76 e39)))
(let ((e103 (= e67 e59)))
(let ((e104 (or e28 e29)))
(let ((e105 (ite e68 e85 e96)))
(let ((e106 (ite e47 e66 e93)))
(let ((e107 (xor e51 e100)))
(let ((e108 (= e78 e43)))
(let ((e109 (xor e58 e107)))
(let ((e110 (ite e77 e23 e106)))
(let ((e111 (ite e81 e46 e30)))
(let ((e112 (=> e24 e40)))
(let ((e113 (=> e111 e80)))
(let ((e114 (ite e102 e64 e113)))
(let ((e115 (ite e92 e65 e94)))
(let ((e116 (and e26 e82)))
(let ((e117 (= e98 e45)))
(let ((e118 (and e70 e103)))
(let ((e119 (and e105 e99)))
(let ((e120 (ite e60 e109 e109)))
(let ((e121 (not e34)))
(let ((e122 (=> e25 e25)))
(let ((e123 (=> e87 e48)))
(let ((e124 (ite e118 e35 e61)))
(let ((e125 (= e101 e120)))
(let ((e126 (or e124 e37)))
(let ((e127 (= e121 e31)))
(let ((e128 (or e126 e73)))
(let ((e129 (not e104)))
(let ((e130 (= e115 e90)))
(let ((e131 (ite e55 e123 e116)))
(let ((e132 (xor e63 e27)))
(let ((e133 (= e72 e42)))
(let ((e134 (=> e89 e117)))
(let ((e135 (xor e125 e108)))
(let ((e136 (not e119)))
(let ((e137 (or e136 e53)))
(let ((e138 (not e131)))
(let ((e139 (not e128)))
(let ((e140 (xor e135 e127)))
(let ((e141 (not e137)))
(let ((e142 (and e69 e134)))
(let ((e143 (=> e138 e138)))
(let ((e144 (= e129 e112)))
(let ((e145 (=> e44 e33)))
(let ((e146 (=> e110 e141)))
(let ((e147 (xor e139 e143)))
(let ((e148 (and e122 e140)))
(let ((e149 (= e114 e146)))
(let ((e150 (not e56)))
(let ((e151 (or e150 e147)))
(let ((e152 (= e144 e142)))
(let ((e153 (xor e130 e149)))
(let ((e154 (and e153 e153)))
(let ((e155 (not e133)))
(let ((e156 (or e151 e145)))
(let ((e157 (not e152)))
(let ((e158 (and e157 e148)))
(let ((e159 (or e155 e154)))
(let ((e160 (ite e159 e158 e156)))
(let ((e161 (not e132)))
(let ((e162 (or e160 e161)))
e162
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
