(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun v0 () (_ BitVec 9))
(assert (let ((e1(_ bv6 3)))
(let ((e2(_ bv27 6)))
(let ((e3 (bvnand ((_ zero_extend 3) e2) v0)))
(let ((e4 (bvnand e3 v0)))
(let ((e5 (ite (bvugt v0 e3) (_ bv1 1) (_ bv0 1))))
(let ((e6 (bvmul e3 ((_ sign_extend 3) e2))))
(let ((e7 (bvnand e4 e3)))
(let ((e8 ((_ repeat 1) e6)))
(let ((e9 (bvsrem e6 e8)))
(let ((e10 (bvurem ((_ zero_extend 8) e5) e8)))
(let ((e11 (ite (bvsge e2 e2) (_ bv1 1) (_ bv0 1))))
(let ((e12 (bvsub e7 e3)))
(let ((e13 ((_ rotate_right 0) e1)))
(let ((e14 (bvsgt e9 ((_ zero_extend 8) e5))))
(let ((e15 (= e8 e6)))
(let ((e16 (bvuge e2 ((_ zero_extend 3) e13))))
(let ((e17 (bvuge e9 e9)))
(let ((e18 (bvult v0 ((_ sign_extend 6) e13))))
(let ((e19 (bvugt ((_ zero_extend 6) e13) e7)))
(let ((e20 (= e11 e5)))
(let ((e21 (bvsge e5 e5)))
(let ((e22 (bvsle e7 e9)))
(let ((e23 (bvult v0 ((_ sign_extend 3) e2))))
(let ((e24 (distinct e3 ((_ sign_extend 3) e2))))
(let ((e25 (bvsle ((_ sign_extend 2) e5) e13)))
(let ((e26 (bvsle ((_ sign_extend 8) e5) v0)))
(let ((e27 (bvsle v0 e8)))
(let ((e28 (= ((_ sign_extend 8) e5) e7)))
(let ((e29 (bvule e8 ((_ zero_extend 3) e2))))
(let ((e30 (= ((_ zero_extend 2) e5) e13)))
(let ((e31 (= ((_ sign_extend 6) e13) e9)))
(let ((e32 (bvsge e5 e5)))
(let ((e33 (= e8 ((_ sign_extend 6) e13))))
(let ((e34 (bvuge ((_ sign_extend 3) e2) v0)))
(let ((e35 (bvsgt e8 ((_ sign_extend 8) e5))))
(let ((e36 (distinct e3 e3)))
(let ((e37 (bvslt ((_ sign_extend 8) e11) e6)))
(let ((e38 (distinct e6 ((_ sign_extend 6) e1))))
(let ((e39 (= ((_ sign_extend 6) e1) e7)))
(let ((e40 (distinct e6 ((_ zero_extend 6) e1))))
(let ((e41 (bvugt e4 e8)))
(let ((e42 (bvslt ((_ zero_extend 6) e1) e6)))
(let ((e43 (= e2 ((_ sign_extend 3) e13))))
(let ((e44 (bvugt e10 ((_ zero_extend 8) e5))))
(let ((e45 (bvuge ((_ zero_extend 6) e13) e12)))
(let ((e46 (not e38)))
(let ((e47 (and e45 e31)))
(let ((e48 (not e29)))
(let ((e49 (ite e37 e44 e40)))
(let ((e50 (= e25 e27)))
(let ((e51 (and e46 e22)))
(let ((e52 (ite e23 e23 e15)))
(let ((e53 (xor e20 e19)))
(let ((e54 (or e48 e41)))
(let ((e55 (not e33)))
(let ((e56 (=> e36 e14)))
(let ((e57 (or e39 e18)))
(let ((e58 (=> e16 e52)))
(let ((e59 (xor e34 e32)))
(let ((e60 (ite e24 e26 e21)))
(let ((e61 (= e59 e50)))
(let ((e62 (not e56)))
(let ((e63 (not e57)))
(let ((e64 (xor e30 e53)))
(let ((e65 (=> e17 e64)))
(let ((e66 (ite e54 e42 e55)))
(let ((e67 (and e49 e62)))
(let ((e68 (ite e63 e65 e58)))
(let ((e69 (and e66 e35)))
(let ((e70 (xor e69 e67)))
(let ((e71 (ite e47 e68 e68)))
(let ((e72 (xor e60 e70)))
(let ((e73 (= e61 e51)))
(let ((e74 (xor e73 e43)))
(let ((e75 (xor e28 e74)))
(let ((e76 (or e72 e71)))
(let ((e77 (= e76 e76)))
(let ((e78 (not e75)))
(let ((e79 (= e77 e78)))
(let ((e80 (and e79 (not (= e8 (_ bv0 9))))))
(let ((e81 (and e80 (not (= e8 (bvnot (_ bv0 9)))))))
e81
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
