(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_LIA)
(declare-fun v0 () Int)
(declare-fun v1 () Int)
(assert (let ((e2 4))
(let ((e3 5))
(let ((e4 (+ v1 v1)))
(let ((e5 (- v0)))
(let ((e6 (* v0 (- e2))))
(let ((e7 (* (- e2) e6)))
(let ((e8 (+ e7 v1)))
(let ((e9 (- v0 e4)))
(let ((e10 (- e8 e6)))
(let ((e11 (* v1 e3)))
(let ((e12 (distinct v0 e5)))
(let ((e13 (= e10 e9)))
(let ((e14 (< e8 e9)))
(let ((e15 (<= v0 e4)))
(let ((e16 (>= v0 e4)))
(let ((e17 (>= v1 v0)))
(let ((e18 (= e5 e8)))
(let ((e19 (= e11 e10)))
(let ((e20 (>= e4 e11)))
(let ((e21 (> e8 e4)))
(let ((e22 (>= v0 e5)))
(let ((e23 (= e4 e9)))
(let ((e24 (<= e8 v1)))
(let ((e25 (= e6 v1)))
(let ((e26 (< v1 e10)))
(let ((e27 (>= e11 e7)))
(let ((e28 (ite e23 e5 e6)))
(let ((e29 (ite e20 e5 e8)))
(let ((e30 (ite e19 e11 e11)))
(let ((e31 (ite e18 v0 e10)))
(let ((e32 (ite e25 e7 e7)))
(let ((e33 (ite e20 e4 v0)))
(let ((e34 (ite e16 e9 e31)))
(let ((e35 (ite e17 v1 e34)))
(let ((e36 (ite e22 e8 e30)))
(let ((e37 (ite e27 v0 e4)))
(let ((e38 (ite e18 e4 e36)))
(let ((e39 (ite e14 e34 e31)))
(let ((e40 (ite e14 e8 e38)))
(let ((e41 (ite e15 e34 e34)))
(let ((e42 (ite e13 e34 e30)))
(let ((e43 (ite e26 e38 e35)))
(let ((e44 (ite e24 e5 v1)))
(let ((e45 (ite e21 e37 v1)))
(let ((e46 (ite e12 e35 e29)))
(let ((e47 (> e44 e8)))
(let ((e48 (<= e34 e11)))
(let ((e49 (distinct e38 e5)))
(let ((e50 (> e29 e11)))
(let ((e51 (= e28 e42)))
(let ((e52 (<= e38 e40)))
(let ((e53 (> e35 e45)))
(let ((e54 (distinct e34 e44)))
(let ((e55 (<= e38 e43)))
(let ((e56 (= e38 e44)))
(let ((e57 (= e41 v0)))
(let ((e58 (>= e45 e43)))
(let ((e59 (>= e36 e35)))
(let ((e60 (< e31 e4)))
(let ((e61 (= e9 v1)))
(let ((e62 (<= v0 v1)))
(let ((e63 (>= e7 e36)))
(let ((e64 (<= e36 v1)))
(let ((e65 (distinct e4 e44)))
(let ((e66 (>= e30 e38)))
(let ((e67 (>= e42 e44)))
(let ((e68 (<= e33 e31)))
(let ((e69 (distinct e32 e11)))
(let ((e70 (< e4 e34)))
(let ((e71 (>= e28 e28)))
(let ((e72 (> e5 e7)))
(let ((e73 (= e44 e35)))
(let ((e74 (distinct e44 e8)))
(let ((e75 (> e42 e4)))
(let ((e76 (distinct e30 e41)))
(let ((e77 (<= e34 e32)))
(let ((e78 (>= e30 e35)))
(let ((e79 (<= e42 e37)))
(let ((e80 (< e11 e43)))
(let ((e81 (= e10 e37)))
(let ((e82 (>= e37 e6)))
(let ((e83 (> e43 e44)))
(let ((e84 (> e29 e7)))
(let ((e85 (>= e43 e10)))
(let ((e86 (< e36 e46)))
(let ((e87 (= e45 e4)))
(let ((e88 (= e34 e37)))
(let ((e89 (>= e8 e9)))
(let ((e90 (>= e6 e39)))
(let ((e91 (not e78)))
(let ((e92 (=> e14 e76)))
(let ((e93 (=> e25 e21)))
(let ((e94 (xor e92 e67)))
(let ((e95 (=> e83 e66)))
(let ((e96 (= e63 e73)))
(let ((e97 (=> e61 e69)))
(let ((e98 (ite e96 e17 e24)))
(let ((e99 (and e12 e13)))
(let ((e100 (xor e58 e65)))
(let ((e101 (not e47)))
(let ((e102 (ite e64 e19 e59)))
(let ((e103 (not e26)))
(let ((e104 (xor e81 e51)))
(let ((e105 (or e82 e74)))
(let ((e106 (xor e71 e102)))
(let ((e107 (not e90)))
(let ((e108 (or e16 e53)))
(let ((e109 (xor e100 e101)))
(let ((e110 (xor e68 e98)))
(let ((e111 (xor e84 e84)))
(let ((e112 (and e20 e49)))
(let ((e113 (xor e56 e87)))
(let ((e114 (xor e95 e18)))
(let ((e115 (xor e114 e54)))
(let ((e116 (=> e103 e86)))
(let ((e117 (and e50 e91)))
(let ((e118 (or e111 e117)))
(let ((e119 (and e85 e79)))
(let ((e120 (ite e75 e77 e109)))
(let ((e121 (= e112 e72)))
(let ((e122 (not e106)))
(let ((e123 (or e52 e22)))
(let ((e124 (not e115)))
(let ((e125 (ite e99 e123 e93)))
(let ((e126 (ite e94 e104 e15)))
(let ((e127 (ite e107 e125 e55)))
(let ((e128 (xor e118 e57)))
(let ((e129 (and e88 e105)))
(let ((e130 (ite e122 e97 e116)))
(let ((e131 (and e48 e80)))
(let ((e132 (= e124 e128)))
(let ((e133 (=> e23 e23)))
(let ((e134 (=> e62 e108)))
(let ((e135 (and e127 e130)))
(let ((e136 (=> e133 e129)))
(let ((e137 (=> e120 e113)))
(let ((e138 (and e110 e70)))
(let ((e139 (or e60 e126)))
(let ((e140 (=> e27 e134)))
(let ((e141 (or e89 e135)))
(let ((e142 (or e119 e141)))
(let ((e143 (ite e139 e136 e136)))
(let ((e144 (xor e121 e138)))
(let ((e145 (xor e144 e140)))
(let ((e146 (=> e145 e132)))
(let ((e147 (xor e137 e137)))
(let ((e148 (or e143 e142)))
(let ((e149 (not e146)))
(let ((e150 (= e148 e131)))
(let ((e151 (= e149 e147)))
(let ((e152 (= e151 e151)))
(let ((e153 (and e152 e150)))
e153
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
