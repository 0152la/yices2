(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_UFBV)
(declare-fun f0 ( (_ BitVec 5)) (_ BitVec 8))
(declare-fun p0 ( (_ BitVec 8) (_ BitVec 12) (_ BitVec 8)) Bool)
(declare-fun p1 ( (_ BitVec 10) (_ BitVec 9) (_ BitVec 12)) Bool)
(declare-fun v0 () (_ BitVec 6))
(declare-fun v1 () (_ BitVec 4))
(declare-fun v2 () (_ BitVec 9))
(declare-fun v3 () (_ BitVec 16))
(assert (let ((e4(_ bv49 7)))
(let ((e5(_ bv3113 13)))
(let ((e6 (ite (p1 ((_ zero_extend 3) e4) ((_ extract 11 3) e5) ((_ extract 14 3) v3)) (_ bv1 1) (_ bv0 1))))
(let ((e7 (ite (bvslt v3 v3) (_ bv1 1) (_ bv0 1))))
(let ((e8 (f0 ((_ extract 5 1) v2))))
(let ((e9 (ite (p1 ((_ sign_extend 6) v1) ((_ sign_extend 2) e4) ((_ extract 12 1) e5)) (_ bv1 1) (_ bv0 1))))
(let ((e10 (bvnot v1)))
(let ((e11 (ite (p1 ((_ sign_extend 3) e4) ((_ zero_extend 5) e10) ((_ sign_extend 4) e8)) (_ bv1 1) (_ bv0 1))))
(let ((e12 (bvand e6 e7)))
(let ((e13 (ite (p1 ((_ sign_extend 3) e4) ((_ sign_extend 1) e8) ((_ zero_extend 11) e7)) (_ bv1 1) (_ bv0 1))))
(let ((e14 ((_ extract 1 1) e10)))
(let ((e15 (ite (bvuge ((_ sign_extend 12) e6) e5) (_ bv1 1) (_ bv0 1))))
(let ((e16 (ite (p1 ((_ zero_extend 9) e6) ((_ sign_extend 8) e15) ((_ sign_extend 11) e6)) (_ bv1 1) (_ bv0 1))))
(let ((e17 (ite (p0 ((_ zero_extend 7) e14) ((_ sign_extend 11) e7) ((_ sign_extend 7) e14)) (_ bv1 1) (_ bv0 1))))
(let ((e18 (bvor e8 ((_ zero_extend 7) e13))))
(let ((e19 (ite (= e6 e15) (_ bv1 1) (_ bv0 1))))
(let ((e20 (bvnot v2)))
(let ((e21 ((_ rotate_right 0) e15)))
(let ((e22 (bvxnor ((_ zero_extend 15) e15) v3)))
(let ((e23 (bvurem e9 e13)))
(let ((e24 (ite (bvsge e9 e19) (_ bv1 1) (_ bv0 1))))
(let ((e25 ((_ sign_extend 2) e23)))
(let ((e26 (bvurem e9 e14)))
(let ((e27 (ite (= (_ bv1 1) ((_ extract 3 3) e4)) e13 e21)))
(let ((e28 (ite (= (_ bv1 1) ((_ extract 0 0) e21)) e17 e15)))
(let ((e29 (ite (= e6 e19) (_ bv1 1) (_ bv0 1))))
(let ((e30 (ite (distinct e5 ((_ zero_extend 12) e19)) (_ bv1 1) (_ bv0 1))))
(let ((e31 (ite (bvugt e27 e9) (_ bv1 1) (_ bv0 1))))
(let ((e32 (bvnand e26 e9)))
(let ((e33 ((_ sign_extend 10) v0)))
(let ((e34 (bvult ((_ sign_extend 6) e15) e4)))
(let ((e35 (bvsgt e25 ((_ sign_extend 2) e32))))
(let ((e36 (= e29 e21)))
(let ((e37 (bvuge e7 e15)))
(let ((e38 (bvsle e20 ((_ zero_extend 8) e19))))
(let ((e39 (p1 ((_ sign_extend 9) e16) ((_ sign_extend 8) e14) ((_ sign_extend 11) e7))))
(let ((e40 (bvsgt e10 ((_ zero_extend 3) e11))))
(let ((e41 (bvule e19 e16)))
(let ((e42 (bvslt e25 ((_ zero_extend 2) e28))))
(let ((e43 (p1 ((_ extract 10 1) e5) ((_ sign_extend 8) e21) ((_ sign_extend 11) e7))))
(let ((e44 (p0 ((_ sign_extend 7) e27) ((_ sign_extend 11) e27) ((_ extract 10 3) v3))))
(let ((e45 (bvsle e12 e12)))
(let ((e46 (bvuge v2 ((_ zero_extend 8) e7))))
(let ((e47 (bvslt e25 ((_ sign_extend 2) e14))))
(let ((e48 (p0 ((_ extract 12 5) e5) ((_ zero_extend 11) e30) ((_ zero_extend 2) v0))))
(let ((e49 (distinct e16 e30)))
(let ((e50 (bvsgt ((_ sign_extend 7) e11) e8)))
(let ((e51 (bvugt e27 e6)))
(let ((e52 (bvugt e25 ((_ sign_extend 2) e12))))
(let ((e53 (bvsle e5 ((_ zero_extend 12) e28))))
(let ((e54 (bvule e20 ((_ sign_extend 8) e21))))
(let ((e55 (bvult e26 e13)))
(let ((e56 (bvslt ((_ sign_extend 15) e31) e33)))
(let ((e57 (p1 ((_ sign_extend 9) e31) ((_ sign_extend 8) e29) ((_ zero_extend 11) e24))))
(let ((e58 (bvule v2 ((_ sign_extend 8) e27))))
(let ((e59 (bvult ((_ sign_extend 12) e31) e5)))
(let ((e60 (p0 ((_ sign_extend 7) e21) ((_ zero_extend 11) e14) ((_ zero_extend 5) e25))))
(let ((e61 (bvsgt e19 e11)))
(let ((e62 (p1 ((_ sign_extend 9) e24) ((_ sign_extend 8) e21) ((_ sign_extend 11) e24))))
(let ((e63 (distinct v2 ((_ zero_extend 5) e10))))
(let ((e64 (bvslt e17 e19)))
(let ((e65 (bvult ((_ zero_extend 15) e28) v3)))
(let ((e66 (bvugt ((_ sign_extend 7) e15) e18)))
(let ((e67 (bvslt ((_ zero_extend 12) e12) e5)))
(let ((e68 (distinct e10 ((_ zero_extend 3) e16))))
(let ((e69 (bvuge e22 ((_ sign_extend 15) e13))))
(let ((e70 (bvult e5 ((_ zero_extend 12) e28))))
(let ((e71 (bvule ((_ sign_extend 7) e15) e18)))
(let ((e72 (bvule ((_ sign_extend 12) v1) v3)))
(let ((e73 (distinct e10 ((_ sign_extend 3) e26))))
(let ((e74 (bvugt e20 ((_ zero_extend 8) e15))))
(let ((e75 (bvsge e20 ((_ sign_extend 8) e15))))
(let ((e76 (bvult e19 e17)))
(let ((e77 (bvuge e8 e8)))
(let ((e78 (= e28 e19)))
(let ((e79 (bvslt e5 ((_ sign_extend 4) v2))))
(let ((e80 (distinct e33 ((_ zero_extend 15) e29))))
(let ((e81 (bvsge e6 e16)))
(let ((e82 (bvugt ((_ sign_extend 15) e31) e22)))
(let ((e83 (bvslt e4 ((_ zero_extend 6) e27))))
(let ((e84 (distinct e9 e32)))
(let ((e85 (bvult ((_ sign_extend 15) e9) e22)))
(let ((e86 (distinct e13 e13)))
(let ((e87 (bvslt e33 ((_ sign_extend 13) e25))))
(let ((e88 (bvule e12 e15)))
(let ((e89 (p0 ((_ extract 8 1) v3) ((_ zero_extend 11) e24) ((_ extract 7 0) e5))))
(let ((e90 (p1 ((_ sign_extend 4) v0) ((_ extract 15 7) e33) ((_ zero_extend 11) e29))))
(let ((e91 (bvult ((_ zero_extend 15) e24) v3)))
(let ((e92 (bvsge e27 e23)))
(let ((e93 (=> e83 e75)))
(let ((e94 (and e43 e85)))
(let ((e95 (and e70 e67)))
(let ((e96 (ite e77 e41 e89)))
(let ((e97 (not e61)))
(let ((e98 (= e81 e53)))
(let ((e99 (not e34)))
(let ((e100 (or e42 e52)))
(let ((e101 (not e35)))
(let ((e102 (and e68 e88)))
(let ((e103 (and e98 e47)))
(let ((e104 (and e103 e74)))
(let ((e105 (xor e64 e45)))
(let ((e106 (xor e39 e80)))
(let ((e107 (=> e65 e86)))
(let ((e108 (not e71)))
(let ((e109 (xor e49 e102)))
(let ((e110 (= e79 e38)))
(let ((e111 (or e99 e107)))
(let ((e112 (or e97 e56)))
(let ((e113 (=> e96 e82)))
(let ((e114 (and e40 e84)))
(let ((e115 (and e73 e94)))
(let ((e116 (ite e44 e72 e60)))
(let ((e117 (xor e57 e93)))
(let ((e118 (not e36)))
(let ((e119 (= e113 e106)))
(let ((e120 (and e78 e62)))
(let ((e121 (= e100 e48)))
(let ((e122 (=> e50 e110)))
(let ((e123 (and e119 e59)))
(let ((e124 (ite e121 e51 e95)))
(let ((e125 (not e87)))
(let ((e126 (=> e118 e116)))
(let ((e127 (xor e90 e76)))
(let ((e128 (ite e112 e69 e37)))
(let ((e129 (and e111 e104)))
(let ((e130 (not e123)))
(let ((e131 (= e91 e129)))
(let ((e132 (or e101 e128)))
(let ((e133 (and e124 e130)))
(let ((e134 (or e114 e122)))
(let ((e135 (=> e132 e55)))
(let ((e136 (=> e46 e58)))
(let ((e137 (ite e127 e134 e92)))
(let ((e138 (ite e131 e137 e125)))
(let ((e139 (ite e120 e63 e126)))
(let ((e140 (or e108 e139)))
(let ((e141 (or e135 e105)))
(let ((e142 (=> e117 e138)))
(let ((e143 (xor e54 e109)))
(let ((e144 (not e66)))
(let ((e145 (xor e115 e143)))
(let ((e146 (xor e133 e145)))
(let ((e147 (=> e141 e136)))
(let ((e148 (or e147 e140)))
(let ((e149 (not e144)))
(let ((e150 (=> e148 e146)))
(let ((e151 (xor e142 e149)))
(let ((e152 (or e151 e151)))
(let ((e153 (xor e150 e152)))
(let ((e154 (and e153 (not (= e13 (_ bv0 1))))))
(let ((e155 (and e154 (not (= e14 (_ bv0 1))))))
e155
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
