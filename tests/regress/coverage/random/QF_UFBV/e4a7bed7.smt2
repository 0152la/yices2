(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_UFBV)
(declare-fun f0 ( (_ BitVec 2)) (_ BitVec 16))
(declare-fun f1 ( (_ BitVec 15)) (_ BitVec 7))
(declare-fun p0 ( (_ BitVec 13) (_ BitVec 11) (_ BitVec 11)) Bool)
(declare-fun p1 ( (_ BitVec 6)) Bool)
(declare-fun v0 () (_ BitVec 2))
(declare-fun v1 () (_ BitVec 12))
(declare-fun v2 () (_ BitVec 10))
(declare-fun v3 () (_ BitVec 5))
(assert (let ((e4(_ bv870 10)))
(let ((e5(_ bv75 8)))
(let ((e6 (ite (p0 ((_ zero_extend 1) v1) ((_ zero_extend 3) e5) ((_ sign_extend 1) v2)) (_ bv1 1) (_ bv0 1))))
(let ((e7 (f0 ((_ zero_extend 1) e6))))
(let ((e8 (ite (bvsge v2 ((_ zero_extend 2) e5)) (_ bv1 1) (_ bv0 1))))
(let ((e9 (f1 ((_ sign_extend 10) v3))))
(let ((e10 (bvnot e6)))
(let ((e11 (ite (p1 ((_ extract 8 3) v2)) (_ bv1 1) (_ bv0 1))))
(let ((e12 (ite (= (_ bv1 1) ((_ extract 0 0) e6)) e10 e6)))
(let ((e13 (bvnor ((_ zero_extend 6) e11) e9)))
(let ((e14 (bvlshr ((_ sign_extend 5) v0) e13)))
(let ((e15 (ite (bvult e7 ((_ zero_extend 15) e12)) (_ bv1 1) (_ bv0 1))))
(let ((e16 (bvnot e14)))
(let ((e17 ((_ sign_extend 8) e15)))
(let ((e18 (bvand v3 ((_ zero_extend 4) e15))))
(let ((e19 (ite (= e11 e15) (_ bv1 1) (_ bv0 1))))
(let ((e20 ((_ extract 2 0) e14)))
(let ((e21 (ite (bvsge e9 e9) (_ bv1 1) (_ bv0 1))))
(let ((e22 (concat v3 e16)))
(let ((e23 (bvnot v1)))
(let ((e24 (ite (bvule ((_ zero_extend 4) e20) e14) (_ bv1 1) (_ bv0 1))))
(let ((e25 (bvnand e24 e15)))
(let ((e26 ((_ sign_extend 15) e11)))
(let ((e27 (ite (= (_ bv1 1) ((_ extract 0 0) e7)) ((_ sign_extend 11) e8) v1)))
(let ((e28 (ite (bvsle e19 e10) (_ bv1 1) (_ bv0 1))))
(let ((e29 (f0 v0)))
(let ((e30 (bvnor e4 ((_ zero_extend 9) e12))))
(let ((e31 (bvslt e10 e19)))
(let ((e32 (p1 ((_ sign_extend 5) e25))))
(let ((e33 (p0 ((_ sign_extend 1) e22) ((_ extract 11 1) e22) ((_ sign_extend 10) e24))))
(let ((e34 (p0 ((_ extract 15 3) e7) ((_ zero_extend 2) e17) ((_ sign_extend 6) v3))))
(let ((e35 (p0 ((_ extract 13 1) e29) ((_ zero_extend 10) e19) ((_ zero_extend 4) e16))))
(let ((e36 (bvslt ((_ zero_extend 9) e6) v2)))
(let ((e37 (p1 ((_ extract 6 1) e30))))
(let ((e38 (bvsge e23 ((_ sign_extend 11) e6))))
(let ((e39 (bvugt e4 ((_ sign_extend 9) e11))))
(let ((e40 (bvsgt ((_ sign_extend 7) e20) v2)))
(let ((e41 (bvult ((_ zero_extend 15) e15) e26)))
(let ((e42 (bvsgt ((_ sign_extend 9) e12) e4)))
(let ((e43 (bvult ((_ sign_extend 5) v0) e14)))
(let ((e44 (p1 ((_ extract 10 5) e22))))
(let ((e45 (p0 ((_ sign_extend 1) e22) ((_ zero_extend 10) e12) ((_ extract 10 0) e29))))
(let ((e46 (distinct e9 e14)))
(let ((e47 (bvult e22 ((_ sign_extend 11) e8))))
(let ((e48 (bvsge v1 e22)))
(let ((e49 (= e4 ((_ sign_extend 1) e17))))
(let ((e50 (bvslt ((_ zero_extend 5) e13) e27)))
(let ((e51 (bvsge ((_ sign_extend 9) e21) e30)))
(let ((e52 (p0 ((_ sign_extend 10) e20) ((_ sign_extend 4) e14) ((_ zero_extend 9) v0))))
(let ((e53 (bvult e24 e11)))
(let ((e54 (p1 ((_ extract 6 1) e9))))
(let ((e55 (bvult e4 ((_ sign_extend 9) e24))))
(let ((e56 (distinct e5 ((_ sign_extend 6) v0))))
(let ((e57 (distinct ((_ zero_extend 13) e20) e29)))
(let ((e58 (bvsge e16 ((_ sign_extend 6) e8))))
(let ((e59 (distinct e27 ((_ zero_extend 5) e14))))
(let ((e60 (bvsge e14 ((_ zero_extend 2) e18))))
(let ((e61 (bvslt ((_ zero_extend 6) e21) e16)))
(let ((e62 (bvsle ((_ zero_extend 6) e12) e16)))
(let ((e63 (bvsge v2 ((_ sign_extend 9) e8))))
(let ((e64 (bvslt ((_ zero_extend 5) e16) e27)))
(let ((e65 (bvugt ((_ zero_extend 5) e14) v1)))
(let ((e66 (bvult ((_ sign_extend 9) e28) v2)))
(let ((e67 (or e39 e64)))
(let ((e68 (xor e47 e61)))
(let ((e69 (xor e49 e40)))
(let ((e70 (ite e48 e41 e51)))
(let ((e71 (= e37 e50)))
(let ((e72 (and e35 e32)))
(let ((e73 (or e70 e54)))
(let ((e74 (and e45 e65)))
(let ((e75 (= e62 e59)))
(let ((e76 (not e66)))
(let ((e77 (= e38 e52)))
(let ((e78 (=> e67 e77)))
(let ((e79 (=> e71 e31)))
(let ((e80 (=> e69 e74)))
(let ((e81 (xor e56 e42)))
(let ((e82 (not e73)))
(let ((e83 (not e72)))
(let ((e84 (=> e83 e63)))
(let ((e85 (= e36 e57)))
(let ((e86 (=> e58 e44)))
(let ((e87 (=> e75 e34)))
(let ((e88 (not e87)))
(let ((e89 (not e33)))
(let ((e90 (xor e86 e85)))
(let ((e91 (ite e43 e55 e88)))
(let ((e92 (= e68 e46)))
(let ((e93 (=> e78 e81)))
(let ((e94 (and e79 e76)))
(let ((e95 (= e60 e80)))
(let ((e96 (not e82)))
(let ((e97 (=> e84 e53)))
(let ((e98 (=> e96 e96)))
(let ((e99 (= e98 e97)))
(let ((e100 (not e94)))
(let ((e101 (=> e92 e89)))
(let ((e102 (ite e99 e101 e101)))
(let ((e103 (ite e90 e102 e95)))
(let ((e104 (=> e100 e103)))
(let ((e105 (ite e91 e104 e91)))
(let ((e106 (and e93 e105)))
e106
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
