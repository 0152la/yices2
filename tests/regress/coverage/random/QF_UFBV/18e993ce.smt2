(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_UFBV)
(declare-fun f0 ( (_ BitVec 10)) (_ BitVec 15))
(declare-fun p0 ( (_ BitVec 15)) Bool)
(declare-fun v0 () (_ BitVec 13))
(declare-fun v1 () (_ BitVec 6))
(declare-fun v2 () (_ BitVec 1))
(assert (let ((e3(_ bv0 1)))
(let ((e4 (ite (p0 ((_ zero_extend 14) e3)) (_ bv1 1) (_ bv0 1))))
(let ((e5 (bvurem ((_ sign_extend 12) v2) v0)))
(let ((e6 ((_ rotate_right 0) e4)))
(let ((e7 (f0 ((_ extract 12 3) v0))))
(let ((e8 ((_ zero_extend 13) e4)))
(let ((e9 ((_ rotate_right 12) v0)))
(let ((e10 (bvneg e4)))
(let ((e11 (bvnor e7 ((_ zero_extend 14) e4))))
(let ((e12 (bvcomp e7 e11)))
(let ((e13 (ite (bvslt e6 v2) (_ bv1 1) (_ bv0 1))))
(let ((e14 (ite (bvuge ((_ zero_extend 14) e3) e7) (_ bv1 1) (_ bv0 1))))
(let ((e15 (ite (bvult v0 e9) (_ bv1 1) (_ bv0 1))))
(let ((e16 (bvudiv ((_ sign_extend 12) e15) e9)))
(let ((e17 (ite (bvslt ((_ sign_extend 2) v0) e7) (_ bv1 1) (_ bv0 1))))
(let ((e18 (ite (bvsle ((_ sign_extend 14) e17) e7) (_ bv1 1) (_ bv0 1))))
(let ((e19 (bvmul e11 ((_ sign_extend 14) e18))))
(let ((e20 (bvor v2 e6)))
(let ((e21 (bvudiv e10 e14)))
(let ((e22 (bvand ((_ sign_extend 12) e6) e9)))
(let ((e23 (bvnor e9 ((_ zero_extend 7) v1))))
(let ((e24 (bvugt e20 e12)))
(let ((e25 (p0 ((_ sign_extend 2) v0))))
(let ((e26 (bvsle e16 ((_ zero_extend 12) e20))))
(let ((e27 (bvugt e13 e4)))
(let ((e28 (bvult e6 e18)))
(let ((e29 (bvugt e3 e12)))
(let ((e30 (bvsgt e10 e6)))
(let ((e31 (bvult e19 ((_ sign_extend 14) v2))))
(let ((e32 (bvugt ((_ sign_extend 2) v0) e19)))
(let ((e33 (bvslt ((_ sign_extend 13) e21) e8)))
(let ((e34 (bvsge e22 ((_ sign_extend 12) e10))))
(let ((e35 (= e6 e21)))
(let ((e36 (bvugt ((_ sign_extend 12) e21) e5)))
(let ((e37 (p0 ((_ sign_extend 2) e22))))
(let ((e38 (distinct e4 e20)))
(let ((e39 (bvuge ((_ zero_extend 5) e10) v1)))
(let ((e40 (bvult e14 e6)))
(let ((e41 (bvslt e18 e18)))
(let ((e42 (bvslt e20 e18)))
(let ((e43 (bvult e13 e20)))
(let ((e44 (p0 e7)))
(let ((e45 (bvule e9 e23)))
(let ((e46 (bvule v0 v0)))
(let ((e47 (bvsgt e5 ((_ sign_extend 12) e17))))
(let ((e48 (bvuge ((_ sign_extend 12) e13) e9)))
(let ((e49 (bvslt ((_ zero_extend 12) e3) e5)))
(let ((e50 (bvule ((_ zero_extend 14) e20) e7)))
(let ((e51 (bvslt e7 ((_ sign_extend 14) e4))))
(let ((e52 (bvsge e5 ((_ sign_extend 12) e17))))
(let ((e53 (bvsge ((_ sign_extend 1) e8) e11)))
(let ((e54 (distinct e13 e3)))
(let ((e55 (bvsgt ((_ sign_extend 12) e13) e23)))
(let ((e56 (p0 ((_ zero_extend 2) e9))))
(let ((e57 (bvuge ((_ sign_extend 12) e10) v0)))
(let ((e58 (p0 ((_ zero_extend 14) e3))))
(let ((e59 (bvule ((_ zero_extend 13) e15) e8)))
(let ((e60 (xor e57 e32)))
(let ((e61 (or e31 e48)))
(let ((e62 (=> e55 e29)))
(let ((e63 (ite e44 e35 e24)))
(let ((e64 (and e62 e49)))
(let ((e65 (= e63 e42)))
(let ((e66 (ite e50 e54 e45)))
(let ((e67 (or e38 e46)))
(let ((e68 (= e59 e66)))
(let ((e69 (and e27 e40)))
(let ((e70 (ite e53 e52 e67)))
(let ((e71 (ite e60 e51 e25)))
(let ((e72 (xor e68 e56)))
(let ((e73 (or e61 e47)))
(let ((e74 (=> e64 e26)))
(let ((e75 (=> e37 e65)))
(let ((e76 (= e69 e39)))
(let ((e77 (xor e36 e76)))
(let ((e78 (not e30)))
(let ((e79 (=> e70 e78)))
(let ((e80 (=> e33 e77)))
(let ((e81 (ite e28 e58 e72)))
(let ((e82 (=> e73 e81)))
(let ((e83 (ite e41 e80 e71)))
(let ((e84 (not e34)))
(let ((e85 (or e74 e43)))
(let ((e86 (=> e79 e83)))
(let ((e87 (and e85 e85)))
(let ((e88 (and e82 e84)))
(let ((e89 (or e75 e87)))
(let ((e90 (xor e86 e88)))
(let ((e91 (or e90 e90)))
(let ((e92 (or e89 e89)))
(let ((e93 (and e92 e91)))
(let ((e94 (and e93 (not (= e9 (_ bv0 13))))))
(let ((e95 (and e94 (not (= v0 (_ bv0 13))))))
(let ((e96 (and e95 (not (= e14 (_ bv0 1))))))
e96
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
