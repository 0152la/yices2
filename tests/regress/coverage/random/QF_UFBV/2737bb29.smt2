(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_UFBV)
(declare-fun f0 ( (_ BitVec 4)) (_ BitVec 3))
(declare-fun p0 ( (_ BitVec 2) (_ BitVec 10) (_ BitVec 2)) Bool)
(declare-fun p1 ( (_ BitVec 8) (_ BitVec 10)) Bool)
(declare-fun v0 () (_ BitVec 12))
(declare-fun v1 () (_ BitVec 3))
(declare-fun v2 () (_ BitVec 5))
(declare-fun v3 () (_ BitVec 6))
(declare-fun v4 () (_ BitVec 10))
(assert (let ((e5(_ bv104 8)))
(let ((e6 (ite (p1 ((_ extract 8 1) v4) ((_ sign_extend 2) e5)) (_ bv1 1) (_ bv0 1))))
(let ((e7 (f0 ((_ extract 5 2) e5))))
(let ((e8 (ite (bvsgt v0 ((_ zero_extend 7) v2)) (_ bv1 1) (_ bv0 1))))
(let ((e9 (bvand ((_ zero_extend 11) e6) v0)))
(let ((e10 (ite (p0 ((_ sign_extend 1) e6) ((_ extract 11 2) e9) ((_ extract 2 1) e7)) (_ bv1 1) (_ bv0 1))))
(let ((e11 (bvmul ((_ zero_extend 7) v1) v4)))
(let ((e12 ((_ extract 5 5) v3)))
(let ((e13 (p1 ((_ extract 7 0) v0) ((_ zero_extend 5) v2))))
(let ((e14 (p1 ((_ sign_extend 7) e8) ((_ sign_extend 9) e6))))
(let ((e15 (bvsge v1 v1)))
(let ((e16 (p0 ((_ extract 7 6) e5) e11 ((_ sign_extend 1) e12))))
(let ((e17 (bvule v1 e7)))
(let ((e18 (bvsle v0 ((_ zero_extend 6) v3))))
(let ((e19 (bvult ((_ sign_extend 3) v1) v3)))
(let ((e20 (bvuge e11 v4)))
(let ((e21 (bvsgt ((_ sign_extend 2) e5) e11)))
(let ((e22 (bvsle v0 v0)))
(let ((e23 (bvsge e9 ((_ sign_extend 6) v3))))
(let ((e24 (bvuge v3 ((_ sign_extend 1) v2))))
(let ((e25 (bvsgt e7 ((_ zero_extend 2) e6))))
(let ((e26 (distinct ((_ zero_extend 5) e8) v3)))
(let ((e27 (bvult ((_ sign_extend 2) v1) v2)))
(let ((e28 (bvslt ((_ zero_extend 1) v2) v3)))
(let ((e29 (bvslt e9 ((_ sign_extend 11) e10))))
(let ((e30 (and e14 e20)))
(let ((e31 (ite e19 e29 e21)))
(let ((e32 (not e22)))
(let ((e33 (or e30 e13)))
(let ((e34 (ite e31 e17 e15)))
(let ((e35 (ite e16 e25 e23)))
(let ((e36 (not e33)))
(let ((e37 (xor e24 e26)))
(let ((e38 (=> e27 e37)))
(let ((e39 (or e28 e34)))
(let ((e40 (= e18 e32)))
(let ((e41 (= e40 e36)))
(let ((e42 (not e38)))
(let ((e43 (not e41)))
(let ((e44 (not e43)))
(let ((e45 (= e44 e44)))
(let ((e46 (and e35 e35)))
(let ((e47 (= e39 e45)))
(let ((e48 (not e46)))
(let ((e49 (xor e42 e42)))
(let ((e50 (or e49 e48)))
(let ((e51 (or e47 e50)))
e51
))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
