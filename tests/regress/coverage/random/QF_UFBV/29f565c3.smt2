(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_UFBV)
(declare-fun f0 ( (_ BitVec 5) (_ BitVec 3) (_ BitVec 1)) (_ BitVec 12))
(declare-fun f1 ( (_ BitVec 15)) (_ BitVec 10))
(declare-fun p0 ( (_ BitVec 9)) Bool)
(declare-fun v0 () (_ BitVec 9))
(declare-fun v1 () (_ BitVec 1))
(assert (let ((e2(_ bv3 3)))
(let ((e3(_ bv11 4)))
(let ((e4 (bvnot v0)))
(let ((e5 (f0 ((_ zero_extend 2) e2) ((_ extract 2 0) e4) ((_ extract 8 8) e4))))
(let ((e6 (f1 ((_ zero_extend 3) e5))))
(let ((e7 (concat e3 e5)))
(let ((e8 (ite (bvsgt ((_ zero_extend 8) e3) e5) (_ bv1 1) (_ bv0 1))))
(let ((e9 (ite (p0 e4) (_ bv1 1) (_ bv0 1))))
(let ((e10 (ite (bvuge ((_ zero_extend 7) v0) e7) (_ bv1 1) (_ bv0 1))))
(let ((e11 (ite (distinct e7 ((_ zero_extend 7) e4)) (_ bv1 1) (_ bv0 1))))
(let ((e12 (ite (bvsge v0 ((_ sign_extend 8) e10)) (_ bv1 1) (_ bv0 1))))
(let ((e13 (bvnor e7 ((_ sign_extend 6) e6))))
(let ((e14 (bvand ((_ sign_extend 8) e12) v0)))
(let ((e15 (ite (bvsgt ((_ sign_extend 8) e10) v0) (_ bv1 1) (_ bv0 1))))
(let ((e16 (bvnand e6 ((_ sign_extend 1) e14))))
(let ((e17 (ite (bvuge ((_ zero_extend 9) e15) e16) (_ bv1 1) (_ bv0 1))))
(let ((e18 (ite (bvslt e2 ((_ zero_extend 2) e9)) (_ bv1 1) (_ bv0 1))))
(let ((e19 (ite (= (_ bv1 1) ((_ extract 0 0) e17)) ((_ zero_extend 4) e5) e7)))
(let ((e20 (bvlshr e10 e17)))
(let ((e21 (bvshl ((_ sign_extend 5) e3) e4)))
(let ((e22 (ite (bvule e6 ((_ zero_extend 9) e8)) (_ bv1 1) (_ bv0 1))))
(let ((e23 ((_ rotate_left 12) e19)))
(let ((e24 (ite (= e7 ((_ sign_extend 7) e4)) (_ bv1 1) (_ bv0 1))))
(let ((e25 (ite (bvule e9 v1) (_ bv1 1) (_ bv0 1))))
(let ((e26 (p0 ((_ extract 12 4) e13))))
(let ((e27 (bvsgt e18 e22)))
(let ((e28 (bvsle e8 e12)))
(let ((e29 (bvsle e21 ((_ zero_extend 8) e11))))
(let ((e30 (p0 ((_ zero_extend 5) e3))))
(let ((e31 (= e23 ((_ zero_extend 7) e21))))
(let ((e32 (bvslt e20 e10)))
(let ((e33 (p0 ((_ zero_extend 8) e22))))
(let ((e34 (bvuge ((_ zero_extend 8) e8) e4)))
(let ((e35 (bvslt ((_ sign_extend 15) e15) e23)))
(let ((e36 (bvult e7 ((_ sign_extend 15) e25))))
(let ((e37 (bvsle v0 ((_ zero_extend 8) e9))))
(let ((e38 (bvsgt e4 ((_ sign_extend 8) e25))))
(let ((e39 (bvule e10 e22)))
(let ((e40 (bvsle v0 e4)))
(let ((e41 (= ((_ zero_extend 15) e9) e7)))
(let ((e42 (bvult e25 e8)))
(let ((e43 (bvsgt e13 ((_ zero_extend 7) v0))))
(let ((e44 (bvsgt v1 e18)))
(let ((e45 (bvslt e13 ((_ sign_extend 15) v1))))
(let ((e46 (bvsle ((_ sign_extend 9) e20) e16)))
(let ((e47 (= e19 ((_ sign_extend 15) e12))))
(let ((e48 (bvsgt e3 ((_ sign_extend 3) e22))))
(let ((e49 (bvule ((_ zero_extend 15) e20) e19)))
(let ((e50 (p0 e4)))
(let ((e51 (bvsgt ((_ sign_extend 12) e3) e19)))
(let ((e52 (bvsle ((_ zero_extend 5) e3) e21)))
(let ((e53 (= e15 e9)))
(let ((e54 (bvsgt e7 ((_ sign_extend 7) e21))))
(let ((e55 (bvslt ((_ sign_extend 15) e22) e7)))
(let ((e56 (bvult v0 ((_ zero_extend 8) v1))))
(let ((e57 (p0 ((_ zero_extend 8) e17))))
(let ((e58 (bvsle ((_ zero_extend 5) e3) v0)))
(let ((e59 (bvule ((_ sign_extend 15) e10) e23)))
(let ((e60 (bvsge ((_ zero_extend 12) e3) e23)))
(let ((e61 (distinct e13 ((_ sign_extend 15) e8))))
(let ((e62 (p0 ((_ extract 11 3) e5))))
(let ((e63 (= e2 ((_ sign_extend 2) e24))))
(let ((e64 (bvugt e8 e25)))
(let ((e65 (bvuge e7 ((_ sign_extend 6) e6))))
(let ((e66 (p0 ((_ zero_extend 8) e8))))
(let ((e67 (bvugt e18 v1)))
(let ((e68 (bvsle e24 e24)))
(let ((e69 (bvsle e3 ((_ zero_extend 3) e17))))
(let ((e70 (bvuge e21 ((_ sign_extend 8) e24))))
(let ((e71 (p0 e21)))
(let ((e72 (bvugt ((_ zero_extend 9) v1) e16)))
(let ((e73 (bvult e6 ((_ sign_extend 1) e21))))
(let ((e74 (= e6 ((_ sign_extend 9) e11))))
(let ((e75 (bvult e10 e12)))
(let ((e76 (bvuge e7 ((_ zero_extend 13) e2))))
(let ((e77 (bvule e10 e20)))
(let ((e78 (bvult ((_ zero_extend 15) e25) e7)))
(let ((e79 (bvuge e13 ((_ zero_extend 15) e24))))
(let ((e80 (bvult e9 e25)))
(let ((e81 (bvugt v0 ((_ sign_extend 8) e17))))
(let ((e82 (distinct ((_ sign_extend 13) e2) e23)))
(let ((e83 (p0 ((_ zero_extend 8) e17))))
(let ((e84 (p0 ((_ sign_extend 8) v1))))
(let ((e85 (bvsge ((_ sign_extend 3) e14) e5)))
(let ((e86 (not e29)))
(let ((e87 (and e79 e58)))
(let ((e88 (= e38 e44)))
(let ((e89 (not e52)))
(let ((e90 (xor e57 e49)))
(let ((e91 (=> e31 e67)))
(let ((e92 (and e39 e72)))
(let ((e93 (= e63 e43)))
(let ((e94 (= e41 e65)))
(let ((e95 (xor e87 e68)))
(let ((e96 (or e69 e86)))
(let ((e97 (or e30 e93)))
(let ((e98 (xor e60 e89)))
(let ((e99 (and e27 e56)))
(let ((e100 (=> e84 e75)))
(let ((e101 (and e42 e53)))
(let ((e102 (=> e36 e66)))
(let ((e103 (not e102)))
(let ((e104 (or e91 e80)))
(let ((e105 (and e96 e85)))
(let ((e106 (not e32)))
(let ((e107 (= e100 e34)))
(let ((e108 (= e45 e98)))
(let ((e109 (and e105 e106)))
(let ((e110 (xor e82 e108)))
(let ((e111 (ite e104 e101 e33)))
(let ((e112 (xor e26 e26)))
(let ((e113 (or e40 e47)))
(let ((e114 (xor e50 e28)))
(let ((e115 (xor e97 e97)))
(let ((e116 (xor e92 e113)))
(let ((e117 (xor e73 e55)))
(let ((e118 (=> e81 e109)))
(let ((e119 (or e37 e70)))
(let ((e120 (ite e94 e62 e95)))
(let ((e121 (not e64)))
(let ((e122 (and e54 e112)))
(let ((e123 (xor e111 e71)))
(let ((e124 (or e117 e59)))
(let ((e125 (ite e103 e118 e35)))
(let ((e126 (xor e51 e88)))
(let ((e127 (not e114)))
(let ((e128 (= e77 e125)))
(let ((e129 (ite e76 e119 e78)))
(let ((e130 (or e74 e61)))
(let ((e131 (and e122 e129)))
(let ((e132 (and e121 e120)))
(let ((e133 (or e131 e115)))
(let ((e134 (=> e46 e46)))
(let ((e135 (ite e133 e90 e130)))
(let ((e136 (ite e126 e123 e83)))
(let ((e137 (=> e48 e128)))
(let ((e138 (not e116)))
(let ((e139 (xor e134 e137)))
(let ((e140 (=> e138 e135)))
(let ((e141 (ite e107 e139 e139)))
(let ((e142 (and e99 e132)))
(let ((e143 (and e110 e141)))
(let ((e144 (and e143 e140)))
(let ((e145 (or e144 e144)))
(let ((e146 (not e124)))
(let ((e147 (and e145 e142)))
(let ((e148 (not e147)))
(let ((e149 (or e127 e127)))
(let ((e150 (ite e149 e136 e146)))
(let ((e151 (not e148)))
(let ((e152 (=> e151 e151)))
(let ((e153 (and e152 e152)))
(let ((e154 (xor e153 e150)))
e154
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
