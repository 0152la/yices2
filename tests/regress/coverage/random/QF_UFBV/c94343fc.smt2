(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_UFBV)
(declare-fun f0 ( (_ BitVec 7)) (_ BitVec 2))
(declare-fun f1 ( (_ BitVec 6)) (_ BitVec 11))
(declare-fun p0 ( (_ BitVec 1) (_ BitVec 14) (_ BitVec 1)) Bool)
(declare-fun v0 () (_ BitVec 6))
(declare-fun v1 () (_ BitVec 10))
(declare-fun v2 () (_ BitVec 11))
(declare-fun v3 () (_ BitVec 3))
(declare-fun v4 () (_ BitVec 12))
(assert (let ((e5(_ bv70 7)))
(let ((e6(_ bv122 7)))
(let ((e7 (ite (p0 ((_ extract 3 3) e5) ((_ zero_extend 2) v4) ((_ extract 1 1) v1)) (_ bv1 1) (_ bv0 1))))
(let ((e8 (f1 ((_ extract 7 2) v1))))
(let ((e9 (ite (bvsgt v4 ((_ zero_extend 9) v3)) (_ bv1 1) (_ bv0 1))))
(let ((e10 (bvxor v0 ((_ sign_extend 3) v3))))
(let ((e11 (f0 e5)))
(let ((e12 ((_ repeat 4) e11)))
(let ((e13 (ite (bvsle v1 ((_ zero_extend 2) e12)) (_ bv1 1) (_ bv0 1))))
(let ((e14 (bvashr v1 ((_ zero_extend 3) e6))))
(let ((e15 (ite (bvugt e9 e13) (_ bv1 1) (_ bv0 1))))
(let ((e16 (bvadd e7 e9)))
(let ((e17 ((_ extract 2 1) v4)))
(let ((e18 (bvudiv ((_ zero_extend 4) e10) e14)))
(let ((e19 (bvnot e17)))
(let ((e20 ((_ rotate_right 0) e7)))
(let ((e21 ((_ repeat 1) v4)))
(let ((e22 (ite (bvslt ((_ zero_extend 9) e16) e14) (_ bv1 1) (_ bv0 1))))
(let ((e23 (concat e7 e8)))
(let ((e24 (ite (= e18 ((_ zero_extend 8) e17)) (_ bv1 1) (_ bv0 1))))
(let ((e25 (ite (distinct e18 ((_ sign_extend 9) e20)) (_ bv1 1) (_ bv0 1))))
(let ((e26 (bvnand e23 e23)))
(let ((e27 (bvlshr ((_ sign_extend 7) v3) e14)))
(let ((e28 (bvudiv ((_ sign_extend 1) e13) e17)))
(let ((e29 (ite (= ((_ zero_extend 5) e6) e26) (_ bv1 1) (_ bv0 1))))
(let ((e30 (bvadd ((_ zero_extend 7) e16) e12)))
(let ((e31 (bvxor v2 ((_ zero_extend 3) e30))))
(let ((e32 (p0 ((_ extract 2 2) e23) ((_ sign_extend 13) e7) ((_ extract 5 5) e8))))
(let ((e33 (bvugt ((_ sign_extend 8) e19) e14)))
(let ((e34 (p0 ((_ extract 7 7) e27) ((_ sign_extend 12) e28) e7)))
(let ((e35 (bvugt v4 ((_ sign_extend 10) e19))))
(let ((e36 (bvsgt e8 ((_ zero_extend 1) e18))))
(let ((e37 (bvule v3 v3)))
(let ((e38 (bvule ((_ zero_extend 11) e7) e23)))
(let ((e39 (= ((_ sign_extend 6) e22) e5)))
(let ((e40 (bvsgt e21 ((_ zero_extend 11) e16))))
(let ((e41 (bvsgt e23 ((_ zero_extend 11) e22))))
(let ((e42 (bvsgt e19 ((_ zero_extend 1) e29))))
(let ((e43 (distinct ((_ sign_extend 4) e28) e10)))
(let ((e44 (bvuge ((_ sign_extend 7) e13) e30)))
(let ((e45 (bvugt v1 e27)))
(let ((e46 (= ((_ sign_extend 10) e11) e26)))
(let ((e47 (distinct e20 e25)))
(let ((e48 (bvsgt ((_ zero_extend 10) e15) v2)))
(let ((e49 (bvugt ((_ sign_extend 5) e24) v0)))
(let ((e50 (bvule v3 ((_ zero_extend 2) e25))))
(let ((e51 (bvugt e18 ((_ zero_extend 8) e19))))
(let ((e52 (bvsgt ((_ sign_extend 8) e19) v1)))
(let ((e53 (distinct e13 e9)))
(let ((e54 (bvule e12 ((_ zero_extend 7) e16))))
(let ((e55 (bvslt ((_ zero_extend 11) e24) e26)))
(let ((e56 (bvslt ((_ sign_extend 7) v3) v1)))
(let ((e57 (bvugt ((_ zero_extend 4) e28) e10)))
(let ((e58 (bvule v2 ((_ sign_extend 9) e17))))
(let ((e59 (p0 ((_ extract 8 8) e23) ((_ sign_extend 6) e30) ((_ extract 1 1) e17))))
(let ((e60 (distinct ((_ sign_extend 4) v0) e14)))
(let ((e61 (bvule e6 ((_ sign_extend 1) e10))))
(let ((e62 (bvult e20 e16)))
(let ((e63 (bvsgt ((_ zero_extend 5) v3) e12)))
(let ((e64 (bvsle ((_ zero_extend 1) e29) e17)))
(let ((e65 (= e16 e24)))
(let ((e66 (bvugt ((_ zero_extend 5) e16) v0)))
(let ((e67 (bvsle e30 ((_ zero_extend 6) e11))))
(let ((e68 (p0 ((_ extract 1 1) e26) ((_ sign_extend 3) e8) ((_ extract 11 11) v4))))
(let ((e69 (bvslt v1 ((_ sign_extend 9) e9))))
(let ((e70 (= ((_ sign_extend 10) e16) v2)))
(let ((e71 (distinct v4 ((_ sign_extend 6) e10))))
(let ((e72 (bvslt e18 e27)))
(let ((e73 (bvult ((_ zero_extend 1) e29) e28)))
(let ((e74 (= ((_ zero_extend 8) e11) e14)))
(let ((e75 (= ((_ sign_extend 7) v3) e18)))
(let ((e76 (bvugt e23 ((_ sign_extend 2) e27))))
(let ((e77 (distinct e11 ((_ zero_extend 1) e25))))
(let ((e78 (p0 ((_ extract 0 0) v4) ((_ zero_extend 4) e14) ((_ extract 7 7) e18))))
(let ((e79 (distinct e5 ((_ zero_extend 4) v3))))
(let ((e80 (bvult ((_ zero_extend 3) e6) v1)))
(let ((e81 (distinct ((_ sign_extend 4) e28) e10)))
(let ((e82 (bvsle ((_ sign_extend 9) e19) v2)))
(let ((e83 (bvsge e8 ((_ sign_extend 10) e20))))
(let ((e84 (= v0 ((_ sign_extend 5) e13))))
(let ((e85 (bvsge e14 ((_ zero_extend 8) e11))))
(let ((e86 (p0 ((_ extract 3 3) e23) ((_ sign_extend 2) e26) e15)))
(let ((e87 (= ((_ sign_extend 9) e9) e27)))
(let ((e88 (bvsge e30 ((_ sign_extend 6) e19))))
(let ((e89 (bvugt e9 e29)))
(let ((e90 (bvsle ((_ zero_extend 1) v2) v4)))
(let ((e91 (bvuge e21 ((_ zero_extend 4) e30))))
(let ((e92 (bvule e30 e30)))
(let ((e93 (bvslt ((_ zero_extend 10) e17) e23)))
(let ((e94 (bvsgt e5 ((_ zero_extend 6) e16))))
(let ((e95 (bvsgt ((_ sign_extend 2) e12) e18)))
(let ((e96 (bvslt ((_ sign_extend 3) v3) v0)))
(let ((e97 (p0 ((_ extract 1 1) v3) ((_ zero_extend 7) e6) e29)))
(let ((e98 (bvugt e8 e31)))
(let ((e99 (= e78 e34)))
(let ((e100 (xor e65 e71)))
(let ((e101 (and e39 e67)))
(let ((e102 (not e37)))
(let ((e103 (and e70 e42)))
(let ((e104 (not e79)))
(let ((e105 (not e81)))
(let ((e106 (and e101 e55)))
(let ((e107 (or e49 e106)))
(let ((e108 (or e52 e83)))
(let ((e109 (xor e74 e38)))
(let ((e110 (ite e96 e108 e96)))
(let ((e111 (=> e91 e82)))
(let ((e112 (xor e41 e46)))
(let ((e113 (=> e58 e35)))
(let ((e114 (xor e80 e102)))
(let ((e115 (xor e94 e90)))
(let ((e116 (= e115 e51)))
(let ((e117 (ite e33 e66 e114)))
(let ((e118 (and e40 e60)))
(let ((e119 (xor e113 e68)))
(let ((e120 (= e99 e47)))
(let ((e121 (and e62 e112)))
(let ((e122 (or e92 e104)))
(let ((e123 (or e69 e87)))
(let ((e124 (xor e76 e63)))
(let ((e125 (ite e45 e105 e107)))
(let ((e126 (= e116 e124)))
(let ((e127 (and e32 e56)))
(let ((e128 (=> e117 e111)))
(let ((e129 (ite e103 e54 e50)))
(let ((e130 (xor e109 e127)))
(let ((e131 (ite e118 e118 e95)))
(let ((e132 (not e61)))
(let ((e133 (not e44)))
(let ((e134 (and e93 e110)))
(let ((e135 (=> e133 e75)))
(let ((e136 (=> e86 e73)))
(let ((e137 (=> e119 e48)))
(let ((e138 (=> e88 e126)))
(let ((e139 (and e36 e125)))
(let ((e140 (=> e64 e89)))
(let ((e141 (=> e100 e59)))
(let ((e142 (ite e140 e141 e77)))
(let ((e143 (= e72 e132)))
(let ((e144 (or e53 e138)))
(let ((e145 (and e130 e134)))
(let ((e146 (=> e57 e128)))
(let ((e147 (or e129 e136)))
(let ((e148 (ite e84 e139 e144)))
(let ((e149 (=> e97 e43)))
(let ((e150 (not e137)))
(let ((e151 (=> e148 e145)))
(let ((e152 (or e122 e143)))
(let ((e153 (or e85 e120)))
(let ((e154 (not e150)))
(let ((e155 (=> e154 e142)))
(let ((e156 (not e123)))
(let ((e157 (=> e153 e98)))
(let ((e158 (= e151 e135)))
(let ((e159 (xor e149 e155)))
(let ((e160 (not e152)))
(let ((e161 (and e159 e146)))
(let ((e162 (xor e147 e156)))
(let ((e163 (= e157 e157)))
(let ((e164 (and e158 e163)))
(let ((e165 (ite e161 e121 e121)))
(let ((e166 (xor e131 e131)))
(let ((e167 (= e160 e162)))
(let ((e168 (xor e165 e167)))
(let ((e169 (= e166 e168)))
(let ((e170 (=> e169 e164)))
(let ((e171 (and e170 (not (= e14 (_ bv0 10))))))
(let ((e172 (and e171 (not (= e17 (_ bv0 2))))))
e172
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
