(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_UFBV)
(declare-fun f0 ( (_ BitVec 2) (_ BitVec 11)) (_ BitVec 10))
(declare-fun f1 ( (_ BitVec 4) (_ BitVec 12) (_ BitVec 16)) (_ BitVec 12))
(declare-fun p0 ( (_ BitVec 2)) Bool)
(declare-fun p1 ( (_ BitVec 4) (_ BitVec 3) (_ BitVec 16)) Bool)
(declare-fun v0 () (_ BitVec 9))
(declare-fun v1 () (_ BitVec 11))
(declare-fun v2 () (_ BitVec 4))
(declare-fun v3 () (_ BitVec 6))
(assert (let ((e4(_ bv15376 15)))
(let ((e5(_ bv123 7)))
(let ((e6 (f0 ((_ extract 5 4) v3) ((_ sign_extend 2) v0))))
(let ((e7 (f1 ((_ extract 4 1) v0) ((_ zero_extend 8) v2) ((_ zero_extend 9) e5))))
(let ((e8 ((_ zero_extend 1) v1)))
(let ((e9 (ite (p0 ((_ extract 7 6) v1)) (_ bv1 1) (_ bv0 1))))
(let ((e10 (ite (p1 ((_ extract 8 5) v0) ((_ extract 8 6) e8) ((_ zero_extend 10) v3)) (_ bv1 1) (_ bv0 1))))
(let ((e11 (f0 ((_ zero_extend 1) e10) ((_ sign_extend 1) e6))))
(let ((e12 (ite (distinct v2 ((_ zero_extend 3) e9)) (_ bv1 1) (_ bv0 1))))
(let ((e13 (bvnor v2 ((_ zero_extend 3) e10))))
(let ((e14 (bvand e11 ((_ zero_extend 6) v2))))
(let ((e15 ((_ extract 2 0) v2)))
(let ((e16 (bvand v1 ((_ sign_extend 7) e13))))
(let ((e17 ((_ sign_extend 2) e7)))
(let ((e18 (bvnor ((_ zero_extend 11) e15) e17)))
(let ((e19 (ite (p0 ((_ extract 3 2) e13)) (_ bv1 1) (_ bv0 1))))
(let ((e20 ((_ repeat 1) e5)))
(let ((e21 (bvor ((_ sign_extend 10) e13) e18)))
(let ((e22 (bvudiv ((_ zero_extend 2) e12) e15)))
(let ((e23 (f0 ((_ extract 6 5) e16) v1)))
(let ((e24 (ite (distinct e21 ((_ zero_extend 4) e11)) (_ bv1 1) (_ bv0 1))))
(let ((e25 ((_ rotate_right 8) v0)))
(let ((e26 (ite (bvsge e7 ((_ sign_extend 11) e24)) (_ bv1 1) (_ bv0 1))))
(let ((e27 (bvsdiv ((_ sign_extend 11) e13) e4)))
(let ((e28 (p1 ((_ zero_extend 3) e26) ((_ sign_extend 2) e19) ((_ zero_extend 12) v2))))
(let ((e29 (p1 ((_ sign_extend 3) e19) ((_ extract 12 10) e17) ((_ sign_extend 15) e12))))
(let ((e30 (bvslt ((_ sign_extend 10) e10) e16)))
(let ((e31 (p0 ((_ extract 3 2) e20))))
(let ((e32 (bvsgt e5 ((_ zero_extend 4) e22))))
(let ((e33 (bvslt e20 e5)))
(let ((e34 (p1 ((_ extract 10 7) e7) ((_ extract 4 2) e16) ((_ zero_extend 9) e5))))
(let ((e35 (bvugt ((_ sign_extend 13) e26) e18)))
(let ((e36 (bvuge e11 e11)))
(let ((e37 (distinct e18 e18)))
(let ((e38 (bvslt e14 ((_ zero_extend 9) e9))))
(let ((e39 (bvugt ((_ zero_extend 4) e23) e17)))
(let ((e40 (bvuge ((_ zero_extend 4) e16) e27)))
(let ((e41 (bvuge ((_ zero_extend 2) e11) e7)))
(let ((e42 (bvuge ((_ zero_extend 12) e15) e27)))
(let ((e43 (p0 ((_ extract 7 6) e21))))
(let ((e44 (bvsle e23 e14)))
(let ((e45 (bvule e13 ((_ zero_extend 3) e19))))
(let ((e46 (bvugt ((_ sign_extend 2) e10) e22)))
(let ((e47 (bvslt e11 ((_ sign_extend 7) e15))))
(let ((e48 (bvugt e17 ((_ sign_extend 2) e7))))
(let ((e49 (bvult e17 ((_ zero_extend 3) e16))))
(let ((e50 (bvsgt e6 ((_ sign_extend 4) v3))))
(let ((e51 (bvult ((_ sign_extend 5) e5) e8)))
(let ((e52 (bvsle ((_ sign_extend 13) e12) e18)))
(let ((e53 (bvule e17 e18)))
(let ((e54 (bvslt ((_ zero_extend 5) e20) e8)))
(let ((e55 (bvugt ((_ zero_extend 4) e20) e16)))
(let ((e56 (bvslt e18 ((_ zero_extend 13) e10))))
(let ((e57 (= e7 ((_ zero_extend 2) e11))))
(let ((e58 (bvule v0 ((_ zero_extend 5) v2))))
(let ((e59 (bvsle e25 ((_ sign_extend 8) e26))))
(let ((e60 (bvugt e15 e22)))
(let ((e61 (distinct ((_ zero_extend 3) e25) e8)))
(let ((e62 (bvslt ((_ sign_extend 3) v1) e18)))
(let ((e63 (bvsgt v0 ((_ zero_extend 8) e9))))
(let ((e64 (bvsge ((_ sign_extend 6) e13) e14)))
(let ((e65 (= ((_ sign_extend 13) e9) e18)))
(let ((e66 (distinct ((_ sign_extend 4) e23) e21)))
(let ((e67 (bvsgt ((_ zero_extend 2) e14) e8)))
(let ((e68 (bvugt ((_ sign_extend 13) e26) e17)))
(let ((e69 (= ((_ sign_extend 2) e8) e18)))
(let ((e70 (= e4 ((_ sign_extend 5) e6))))
(let ((e71 (bvsle ((_ sign_extend 5) e10) v3)))
(let ((e72 (bvslt e5 e5)))
(let ((e73 (= ((_ sign_extend 7) e13) v1)))
(let ((e74 (bvsle ((_ sign_extend 3) v0) e7)))
(let ((e75 (bvult e15 ((_ zero_extend 2) e19))))
(let ((e76 (bvsge ((_ zero_extend 2) e5) e25)))
(let ((e77 (bvslt e21 ((_ zero_extend 4) e6))))
(let ((e78 (p0 ((_ extract 3 2) e18))))
(let ((e79 (p0 ((_ extract 3 2) e23))))
(let ((e80 (p0 ((_ extract 13 12) e18))))
(let ((e81 (bvule ((_ zero_extend 8) e10) e25)))
(let ((e82 (bvuge ((_ sign_extend 6) e15) e25)))
(let ((e83 (bvugt ((_ zero_extend 8) v3) e21)))
(let ((e84 (bvsge ((_ zero_extend 8) e5) e4)))
(let ((e85 (bvule ((_ zero_extend 7) e5) e21)))
(let ((e86 (bvult e27 ((_ sign_extend 14) e9))))
(let ((e87 (p1 ((_ extract 7 4) e27) ((_ extract 3 1) v3) ((_ sign_extend 1) e4))))
(let ((e88 (bvuge v0 ((_ sign_extend 2) e20))))
(let ((e89 (bvslt e16 ((_ sign_extend 7) v2))))
(let ((e90 (bvsle ((_ zero_extend 9) e26) e11)))
(let ((e91 (bvult ((_ sign_extend 1) v1) e7)))
(let ((e92 (distinct ((_ sign_extend 5) e13) e25)))
(let ((e93 (bvslt ((_ zero_extend 1) e16) e8)))
(let ((e94 (bvsgt ((_ sign_extend 6) e22) e25)))
(let ((e95 (bvslt ((_ zero_extend 3) e8) e27)))
(let ((e96 (bvuge e7 ((_ sign_extend 2) e23))))
(let ((e97 (bvule ((_ zero_extend 2) e11) e8)))
(let ((e98 (p1 ((_ sign_extend 1) e22) ((_ zero_extend 2) e19) ((_ zero_extend 15) e24))))
(let ((e99 (not e67)))
(let ((e100 (ite e89 e57 e63)))
(let ((e101 (not e70)))
(let ((e102 (or e82 e65)))
(let ((e103 (=> e31 e62)))
(let ((e104 (and e84 e83)))
(let ((e105 (ite e76 e32 e55)))
(let ((e106 (and e46 e30)))
(let ((e107 (or e102 e69)))
(let ((e108 (ite e94 e106 e91)))
(let ((e109 (=> e52 e103)))
(let ((e110 (ite e60 e108 e42)))
(let ((e111 (= e40 e87)))
(let ((e112 (or e33 e36)))
(let ((e113 (xor e28 e99)))
(let ((e114 (and e86 e86)))
(let ((e115 (xor e58 e97)))
(let ((e116 (and e90 e101)))
(let ((e117 (= e49 e80)))
(let ((e118 (and e105 e98)))
(let ((e119 (ite e71 e114 e45)))
(let ((e120 (ite e72 e85 e44)))
(let ((e121 (= e118 e93)))
(let ((e122 (xor e79 e43)))
(let ((e123 (and e39 e74)))
(let ((e124 (=> e29 e29)))
(let ((e125 (or e35 e96)))
(let ((e126 (and e41 e51)))
(let ((e127 (= e53 e104)))
(let ((e128 (=> e56 e64)))
(let ((e129 (or e48 e50)))
(let ((e130 (=> e126 e126)))
(let ((e131 (or e61 e127)))
(let ((e132 (ite e37 e124 e77)))
(let ((e133 (xor e115 e59)))
(let ((e134 (xor e132 e66)))
(let ((e135 (xor e128 e129)))
(let ((e136 (= e73 e121)))
(let ((e137 (=> e113 e88)))
(let ((e138 (ite e95 e120 e95)))
(let ((e139 (and e138 e130)))
(let ((e140 (and e107 e34)))
(let ((e141 (= e133 e117)))
(let ((e142 (xor e122 e140)))
(let ((e143 (ite e110 e109 e81)))
(let ((e144 (not e100)))
(let ((e145 (and e116 e75)))
(let ((e146 (xor e111 e144)))
(let ((e147 (=> e141 e38)))
(let ((e148 (not e139)))
(let ((e149 (= e137 e143)))
(let ((e150 (and e149 e92)))
(let ((e151 (not e148)))
(let ((e152 (not e135)))
(let ((e153 (not e136)))
(let ((e154 (= e146 e145)))
(let ((e155 (not e150)))
(let ((e156 (=> e152 e142)))
(let ((e157 (xor e151 e47)))
(let ((e158 (=> e123 e54)))
(let ((e159 (not e147)))
(let ((e160 (= e155 e153)))
(let ((e161 (= e119 e159)))
(let ((e162 (= e112 e157)))
(let ((e163 (or e156 e156)))
(let ((e164 (not e134)))
(let ((e165 (xor e160 e125)))
(let ((e166 (=> e165 e163)))
(let ((e167 (ite e68 e158 e158)))
(let ((e168 (ite e166 e78 e166)))
(let ((e169 (ite e162 e162 e131)))
(let ((e170 (= e164 e168)))
(let ((e171 (= e169 e170)))
(let ((e172 (=> e167 e154)))
(let ((e173 (ite e161 e171 e172)))
(let ((e174 (and e173 (not (= e15 (_ bv0 3))))))
(let ((e175 (and e174 (not (= e4 (_ bv0 15))))))
(let ((e176 (and e175 (not (= e4 (bvnot (_ bv0 15)))))))
e176
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
