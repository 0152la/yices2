(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_UFBV)
(declare-fun f0 ( (_ BitVec 16) (_ BitVec 10) (_ BitVec 12)) (_ BitVec 11))
(declare-fun p0 ( (_ BitVec 4) (_ BitVec 4)) Bool)
(declare-fun v0 () (_ BitVec 10))
(declare-fun v1 () (_ BitVec 6))
(declare-fun v2 () (_ BitVec 11))
(declare-fun v3 () (_ BitVec 2))
(declare-fun v4 () (_ BitVec 4))
(assert (let ((e5(_ bv30590 15)))
(let ((e6(_ bv126 8)))
(let ((e7 (ite (p0 ((_ extract 4 1) e5) ((_ extract 11 8) e5)) (_ bv1 1) (_ bv0 1))))
(let ((e8 (bvcomp e5 ((_ sign_extend 13) v3))))
(let ((e9 (f0 ((_ sign_extend 6) v0) ((_ zero_extend 8) v3) ((_ zero_extend 10) v3))))
(let ((e10 (ite (= v0 ((_ sign_extend 2) e6)) (_ bv1 1) (_ bv0 1))))
(let ((e11 (bvneg e6)))
(let ((e12 (bvashr e6 ((_ zero_extend 6) v3))))
(let ((e13 (bvor ((_ sign_extend 14) e8) e5)))
(let ((e14 (bvurem ((_ sign_extend 10) e7) e9)))
(let ((e15 (bvsrem ((_ sign_extend 1) v0) e9)))
(let ((e16 (bvudiv ((_ sign_extend 3) e12) e15)))
(let ((e17 (concat v4 e6)))
(let ((e18 (ite (bvsgt v1 ((_ zero_extend 5) e7)) (_ bv1 1) (_ bv0 1))))
(let ((e19 (bvnor e11 ((_ zero_extend 7) e8))))
(let ((e20 (bvnot e18)))
(let ((e21 (bvnot e16)))
(let ((e22 (f0 ((_ sign_extend 12) v4) ((_ sign_extend 6) v4) ((_ zero_extend 10) v3))))
(let ((e23 (ite (bvugt e17 ((_ sign_extend 1) e9)) (_ bv1 1) (_ bv0 1))))
(let ((e24 (bvashr e9 e14)))
(let ((e25 (bvadd e5 ((_ zero_extend 3) e17))))
(let ((e26 (bvudiv ((_ sign_extend 10) e18) v2)))
(let ((e27 (distinct ((_ sign_extend 11) e18) e17)))
(let ((e28 (bvsge e13 ((_ zero_extend 4) e9))))
(let ((e29 (p0 ((_ sign_extend 3) e18) ((_ extract 7 4) e12))))
(let ((e30 (bvslt e9 e24)))
(let ((e31 (bvugt e25 ((_ sign_extend 14) e10))))
(let ((e32 (p0 ((_ extract 9 6) e16) ((_ extract 8 5) e22))))
(let ((e33 (bvsgt ((_ sign_extend 3) e6) e21)))
(let ((e34 (bvuge ((_ sign_extend 4) v3) v1)))
(let ((e35 (bvsle ((_ sign_extend 10) e20) e21)))
(let ((e36 (bvsge e18 e18)))
(let ((e37 (bvugt e9 e24)))
(let ((e38 (bvsle e24 e21)))
(let ((e39 (bvugt v0 ((_ sign_extend 2) e6))))
(let ((e40 (= v2 ((_ zero_extend 10) e7))))
(let ((e41 (p0 ((_ extract 7 4) e16) ((_ zero_extend 3) e23))))
(let ((e42 (bvslt ((_ sign_extend 3) e19) e15)))
(let ((e43 (distinct e15 ((_ zero_extend 10) e7))))
(let ((e44 (bvsge ((_ zero_extend 14) e23) e13)))
(let ((e45 (distinct e22 ((_ zero_extend 10) e23))))
(let ((e46 (bvsge ((_ zero_extend 10) e23) e22)))
(let ((e47 (distinct ((_ sign_extend 5) v1) e24)))
(let ((e48 (= e25 e5)))
(let ((e49 (bvsge ((_ sign_extend 10) e23) e9)))
(let ((e50 (bvugt e5 ((_ zero_extend 7) e19))))
(let ((e51 (bvule e18 e10)))
(let ((e52 (distinct ((_ sign_extend 9) v3) e14)))
(let ((e53 (p0 ((_ extract 8 5) e22) ((_ extract 9 6) e14))))
(let ((e54 (bvuge ((_ sign_extend 14) e23) e25)))
(let ((e55 (bvsgt e15 ((_ zero_extend 5) v1))))
(let ((e56 (bvuge e5 ((_ zero_extend 4) e21))))
(let ((e57 (= ((_ zero_extend 3) e19) e26)))
(let ((e58 (bvugt e5 ((_ zero_extend 4) e9))))
(let ((e59 (bvult ((_ zero_extend 7) e8) e6)))
(let ((e60 (bvsgt ((_ zero_extend 6) v1) e17)))
(let ((e61 (bvslt v2 e22)))
(let ((e62 (bvsgt ((_ zero_extend 6) v3) e6)))
(let ((e63 (bvslt e22 ((_ zero_extend 10) e20))))
(let ((e64 (bvuge ((_ zero_extend 9) e23) v0)))
(let ((e65 (bvsle e5 ((_ zero_extend 14) e7))))
(let ((e66 (bvslt ((_ zero_extend 10) e18) e14)))
(let ((e67 (bvuge ((_ zero_extend 7) e11) e13)))
(let ((e68 (bvule v1 ((_ zero_extend 5) e10))))
(let ((e69 (bvule e5 ((_ zero_extend 14) e18))))
(let ((e70 (bvsle ((_ sign_extend 10) e18) e24)))
(let ((e71 (distinct ((_ zero_extend 3) e6) e15)))
(let ((e72 (bvule e13 e25)))
(let ((e73 (distinct ((_ zero_extend 7) e8) e19)))
(let ((e74 (= e15 ((_ sign_extend 3) e6))))
(let ((e75 (bvsge e16 ((_ zero_extend 3) e19))))
(let ((e76 (bvsge ((_ zero_extend 10) e20) e16)))
(let ((e77 (= ((_ zero_extend 1) e22) e17)))
(let ((e78 (bvule ((_ sign_extend 3) e20) v4)))
(let ((e79 (=> e41 e57)))
(let ((e80 (= e27 e67)))
(let ((e81 (not e53)))
(let ((e82 (ite e43 e39 e47)))
(let ((e83 (ite e63 e55 e55)))
(let ((e84 (or e82 e70)))
(let ((e85 (=> e59 e73)))
(let ((e86 (= e78 e64)))
(let ((e87 (= e71 e75)))
(let ((e88 (not e32)))
(let ((e89 (xor e65 e36)))
(let ((e90 (ite e54 e84 e66)))
(let ((e91 (and e33 e48)))
(let ((e92 (or e45 e31)))
(let ((e93 (xor e72 e44)))
(let ((e94 (=> e74 e91)))
(let ((e95 (or e49 e40)))
(let ((e96 (or e76 e50)))
(let ((e97 (ite e60 e61 e80)))
(let ((e98 (=> e77 e79)))
(let ((e99 (not e38)))
(let ((e100 (and e97 e68)))
(let ((e101 (ite e96 e62 e29)))
(let ((e102 (not e56)))
(let ((e103 (=> e34 e94)))
(let ((e104 (xor e85 e83)))
(let ((e105 (and e37 e51)))
(let ((e106 (and e35 e87)))
(let ((e107 (=> e102 e99)))
(let ((e108 (= e89 e58)))
(let ((e109 (or e103 e103)))
(let ((e110 (=> e92 e101)))
(let ((e111 (and e90 e107)))
(let ((e112 (=> e28 e52)))
(let ((e113 (=> e111 e100)))
(let ((e114 (= e46 e98)))
(let ((e115 (xor e69 e81)))
(let ((e116 (not e110)))
(let ((e117 (xor e95 e116)))
(let ((e118 (xor e114 e114)))
(let ((e119 (or e118 e112)))
(let ((e120 (or e104 e119)))
(let ((e121 (ite e120 e105 e106)))
(let ((e122 (=> e30 e93)))
(let ((e123 (or e117 e86)))
(let ((e124 (ite e88 e123 e123)))
(let ((e125 (not e122)))
(let ((e126 (=> e125 e108)))
(let ((e127 (ite e113 e109 e124)))
(let ((e128 (=> e115 e42)))
(let ((e129 (= e128 e128)))
(let ((e130 (xor e127 e126)))
(let ((e131 (ite e130 e129 e121)))
(let ((e132 (and e131 (not (= v2 (_ bv0 11))))))
(let ((e133 (and e132 (not (= e15 (_ bv0 11))))))
(let ((e134 (and e133 (not (= e9 (_ bv0 11))))))
(let ((e135 (and e134 (not (= e9 (bvnot (_ bv0 11)))))))
e135
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
