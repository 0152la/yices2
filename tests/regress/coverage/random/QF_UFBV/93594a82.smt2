(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_UFBV)
(declare-fun f0 ( (_ BitVec 2)) (_ BitVec 9))
(declare-fun p0 ( (_ BitVec 8)) Bool)
(declare-fun p1 ( (_ BitVec 10) (_ BitVec 5) (_ BitVec 13)) Bool)
(declare-fun v0 () (_ BitVec 3))
(declare-fun v1 () (_ BitVec 5))
(declare-fun v2 () (_ BitVec 7))
(declare-fun v3 () (_ BitVec 14))
(assert (let ((e4(_ bv1210 15)))
(let ((e5(_ bv1692 13)))
(let ((e6 (ite (p1 ((_ extract 13 4) e4) ((_ extract 5 1) e4) ((_ zero_extend 8) v1)) (_ bv1 1) (_ bv0 1))))
(let ((e7 (f0 ((_ sign_extend 1) e6))))
(let ((e8 (ite (distinct ((_ zero_extend 2) v0) v1) (_ bv1 1) (_ bv0 1))))
(let ((e9 (ite (p0 ((_ sign_extend 7) e8)) (_ bv1 1) (_ bv0 1))))
(let ((e10 (bvsdiv ((_ sign_extend 5) e7) v3)))
(let ((e11 (bvxnor ((_ sign_extend 11) v0) v3)))
(let ((e12 (bvashr ((_ zero_extend 11) v0) e10)))
(let ((e13 ((_ repeat 1) e11)))
(let ((e14 (bvor ((_ sign_extend 8) v1) e5)))
(let ((e15 ((_ zero_extend 1) v1)))
(let ((e16 (ite (bvuge e10 v3) (_ bv1 1) (_ bv0 1))))
(let ((e17 ((_ rotate_right 7) e10)))
(let ((e18 (ite (bvsle e16 e6) (_ bv1 1) (_ bv0 1))))
(let ((e19 (bvsub ((_ sign_extend 1) e14) e12)))
(let ((e20 (bvmul e19 e19)))
(let ((e21 (ite (= (_ bv1 1) ((_ extract 0 0) e8)) e17 ((_ zero_extend 1) e5))))
(let ((e22 ((_ repeat 1) e13)))
(let ((e23 (bvmul ((_ sign_extend 13) e9) e20)))
(let ((e24 ((_ rotate_right 3) e13)))
(let ((e25 (bvnor ((_ zero_extend 7) e15) e5)))
(let ((e26 (bvmul ((_ zero_extend 13) e6) e23)))
(let ((e27 (bvsdiv ((_ sign_extend 7) v2) e20)))
(let ((e28 (p0 ((_ extract 11 4) e12))))
(let ((e29 (p1 ((_ zero_extend 7) v0) ((_ extract 4 0) e15) ((_ zero_extend 12) e16))))
(let ((e30 (bvsle ((_ sign_extend 1) e14) e20)))
(let ((e31 (bvult ((_ sign_extend 1) e5) e19)))
(let ((e32 (bvuge e21 ((_ zero_extend 13) e8))))
(let ((e33 (bvsge ((_ sign_extend 13) e16) e17)))
(let ((e34 (bvsle e26 e24)))
(let ((e35 (bvugt ((_ zero_extend 9) v1) e26)))
(let ((e36 (= e19 e11)))
(let ((e37 (bvult ((_ sign_extend 13) e18) e23)))
(let ((e38 (bvsge e14 e25)))
(let ((e39 (bvslt v0 ((_ sign_extend 2) e8))))
(let ((e40 (bvugt e27 e21)))
(let ((e41 (bvsgt ((_ zero_extend 5) e7) v3)))
(let ((e42 (bvugt ((_ sign_extend 5) e9) e15)))
(let ((e43 (bvsle v3 e12)))
(let ((e44 (bvsle e26 ((_ sign_extend 1) e25))))
(let ((e45 (bvuge e20 ((_ sign_extend 13) e8))))
(let ((e46 (bvult e14 e5)))
(let ((e47 (p0 ((_ sign_extend 2) e15))))
(let ((e48 (bvsle ((_ sign_extend 12) v0) e4)))
(let ((e49 (distinct e10 e27)))
(let ((e50 (bvslt ((_ zero_extend 1) e14) e26)))
(let ((e51 (bvsle e17 e26)))
(let ((e52 (bvule v2 ((_ zero_extend 4) v0))))
(let ((e53 (bvslt e17 ((_ sign_extend 13) e9))))
(let ((e54 (bvsle e12 e17)))
(let ((e55 (= e8 e18)))
(let ((e56 (bvuge e22 ((_ zero_extend 11) v0))))
(let ((e57 (bvuge e23 e10)))
(let ((e58 (bvsle e19 ((_ sign_extend 13) e18))))
(let ((e59 (bvsge ((_ zero_extend 13) e18) e17)))
(let ((e60 (bvule e11 e10)))
(let ((e61 (p1 ((_ extract 12 3) e20) ((_ extract 14 10) e4) ((_ extract 14 2) e4))))
(let ((e62 (distinct e4 ((_ zero_extend 1) e20))))
(let ((e63 (= e17 v3)))
(let ((e64 (bvult e5 e14)))
(let ((e65 (bvsgt e22 ((_ sign_extend 11) v0))))
(let ((e66 (bvult e7 ((_ sign_extend 3) e15))))
(let ((e67 (bvslt e4 ((_ zero_extend 1) e12))))
(let ((e68 (bvult ((_ sign_extend 12) e8) e14)))
(let ((e69 (= e26 e11)))
(let ((e70 (bvslt e13 ((_ zero_extend 13) e18))))
(let ((e71 (bvult v0 ((_ zero_extend 2) e16))))
(let ((e72 (bvult ((_ sign_extend 1) e5) e12)))
(let ((e73 (bvsgt ((_ sign_extend 9) v1) v3)))
(let ((e74 (bvuge e5 ((_ zero_extend 8) v1))))
(let ((e75 (distinct e7 ((_ zero_extend 6) v0))))
(let ((e76 (bvsge e25 ((_ zero_extend 12) e9))))
(let ((e77 (bvsle e12 ((_ zero_extend 8) e15))))
(let ((e78 (bvsge ((_ zero_extend 6) v2) e5)))
(let ((e79 (bvsgt e14 ((_ zero_extend 8) v1))))
(let ((e80 (bvsgt e10 e20)))
(let ((e81 (bvsgt ((_ sign_extend 13) e8) e27)))
(let ((e82 (bvule e10 e13)))
(let ((e83 (bvslt e14 ((_ sign_extend 6) v2))))
(let ((e84 (bvult ((_ sign_extend 1) e15) v2)))
(let ((e85 (bvugt ((_ zero_extend 12) e6) e14)))
(let ((e86 (=> e51 e38)))
(let ((e87 (xor e42 e78)))
(let ((e88 (or e41 e60)))
(let ((e89 (and e39 e67)))
(let ((e90 (or e71 e28)))
(let ((e91 (and e49 e37)))
(let ((e92 (=> e44 e91)))
(let ((e93 (xor e75 e77)))
(let ((e94 (=> e46 e58)))
(let ((e95 (not e73)))
(let ((e96 (and e32 e82)))
(let ((e97 (and e79 e69)))
(let ((e98 (or e34 e30)))
(let ((e99 (=> e33 e50)))
(let ((e100 (xor e59 e97)))
(let ((e101 (or e70 e52)))
(let ((e102 (=> e84 e86)))
(let ((e103 (ite e68 e100 e96)))
(let ((e104 (ite e62 e66 e85)))
(let ((e105 (= e57 e31)))
(let ((e106 (= e90 e55)))
(let ((e107 (not e74)))
(let ((e108 (not e29)))
(let ((e109 (= e101 e80)))
(let ((e110 (and e95 e72)))
(let ((e111 (not e102)))
(let ((e112 (ite e35 e36 e76)))
(let ((e113 (ite e104 e92 e87)))
(let ((e114 (not e110)))
(let ((e115 (not e48)))
(let ((e116 (and e98 e47)))
(let ((e117 (and e93 e40)))
(let ((e118 (= e89 e94)))
(let ((e119 (not e106)))
(let ((e120 (xor e112 e111)))
(let ((e121 (=> e56 e61)))
(let ((e122 (not e54)))
(let ((e123 (or e99 e43)))
(let ((e124 (ite e118 e114 e83)))
(let ((e125 (or e122 e122)))
(let ((e126 (= e65 e121)))
(let ((e127 (= e123 e103)))
(let ((e128 (=> e108 e105)))
(let ((e129 (ite e126 e117 e125)))
(let ((e130 (and e128 e113)))
(let ((e131 (=> e53 e64)))
(let ((e132 (= e63 e127)))
(let ((e133 (= e124 e115)))
(let ((e134 (= e131 e109)))
(let ((e135 (and e130 e132)))
(let ((e136 (ite e116 e120 e134)))
(let ((e137 (not e88)))
(let ((e138 (and e136 e137)))
(let ((e139 (and e133 e119)))
(let ((e140 (or e107 e139)))
(let ((e141 (and e81 e135)))
(let ((e142 (or e45 e129)))
(let ((e143 (= e142 e138)))
(let ((e144 (ite e140 e140 e141)))
(let ((e145 (=> e144 e144)))
(let ((e146 (xor e145 e145)))
(let ((e147 (xor e143 e146)))
(let ((e148 (and e147 (not (= e20 (_ bv0 14))))))
(let ((e149 (and e148 (not (= e20 (bvnot (_ bv0 14)))))))
(let ((e150 (and e149 (not (= v3 (_ bv0 14))))))
(let ((e151 (and e150 (not (= v3 (bvnot (_ bv0 14)))))))
e151
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
