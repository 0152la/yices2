(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_LRA)
(declare-fun v0 () Real)
(declare-fun v1 () Real)
(assert (let ((e2 6))
(let ((e3 5))
(let ((e4 (- v0)))
(let ((e5 (- v1 v0)))
(let ((e6 (- e5)))
(let ((e7 (- e6 v0)))
(let ((e8 (- v1 v0)))
(let ((e9 (- v0)))
(let ((e10 (* e9 e3)))
(let ((e11 (/ e3 e2)))
(let ((e12 (= e9 e7)))
(let ((e13 (distinct e11 e9)))
(let ((e14 (distinct v0 e10)))
(let ((e15 (distinct e11 e4)))
(let ((e16 (= v1 e5)))
(let ((e17 (distinct v1 e4)))
(let ((e18 (= v0 e10)))
(let ((e19 (<= e4 e4)))
(let ((e20 (= e8 e5)))
(let ((e21 (= e10 e9)))
(let ((e22 (= e5 e5)))
(let ((e23 (>= v0 e7)))
(let ((e24 (<= v1 e6)))
(let ((e25 (ite e12 e10 v0)))
(let ((e26 (ite e22 e8 e25)))
(let ((e27 (ite e15 e4 e10)))
(let ((e28 (ite e19 e9 e6)))
(let ((e29 (ite e18 e25 e5)))
(let ((e30 (ite e12 e11 e26)))
(let ((e31 (ite e22 v1 e10)))
(let ((e32 (ite e19 e31 e31)))
(let ((e33 (ite e18 e6 v1)))
(let ((e34 (ite e12 v0 e26)))
(let ((e35 (ite e14 e7 v1)))
(let ((e36 (ite e12 e6 e10)))
(let ((e37 (ite e16 e36 e28)))
(let ((e38 (ite e21 e31 e30)))
(let ((e39 (ite e15 v1 e30)))
(let ((e40 (ite e12 e31 e30)))
(let ((e41 (ite e15 e10 e31)))
(let ((e42 (ite e24 v0 e11)))
(let ((e43 (ite e23 v0 e35)))
(let ((e44 (ite e20 e28 e34)))
(let ((e45 (ite e14 e4 e26)))
(let ((e46 (ite e17 e34 e43)))
(let ((e47 (ite e13 e27 e31)))
(let ((e48 (distinct e6 e32)))
(let ((e49 (< e36 e35)))
(let ((e50 (<= e44 e32)))
(let ((e51 (distinct e6 e36)))
(let ((e52 (>= e45 e32)))
(let ((e53 (<= v0 e37)))
(let ((e54 (distinct e26 e6)))
(let ((e55 (distinct e27 e7)))
(let ((e56 (<= v0 e32)))
(let ((e57 (<= e36 e44)))
(let ((e58 (= e32 e44)))
(let ((e59 (> e44 e41)))
(let ((e60 (>= e35 e47)))
(let ((e61 (>= e25 e6)))
(let ((e62 (<= e32 e37)))
(let ((e63 (> e27 e46)))
(let ((e64 (>= e42 e44)))
(let ((e65 (= e29 e42)))
(let ((e66 (> e45 e26)))
(let ((e67 (< e26 e28)))
(let ((e68 (> e29 e26)))
(let ((e69 (< e38 e4)))
(let ((e70 (> e29 e11)))
(let ((e71 (distinct e31 e45)))
(let ((e72 (distinct e35 e34)))
(let ((e73 (< e41 e31)))
(let ((e74 (= e11 v0)))
(let ((e75 (>= e5 e11)))
(let ((e76 (>= e7 e36)))
(let ((e77 (<= e26 e11)))
(let ((e78 (>= e34 e39)))
(let ((e79 (< e39 e6)))
(let ((e80 (> e41 e8)))
(let ((e81 (>= e44 e47)))
(let ((e82 (>= e38 e47)))
(let ((e83 (= e32 e29)))
(let ((e84 (>= e31 e41)))
(let ((e85 (= v0 e25)))
(let ((e86 (= e28 v0)))
(let ((e87 (< v0 e41)))
(let ((e88 (> e39 e31)))
(let ((e89 (>= e30 e46)))
(let ((e90 (<= e33 e37)))
(let ((e91 (distinct e46 e11)))
(let ((e92 (<= e4 e4)))
(let ((e93 (< e40 e28)))
(let ((e94 (< e36 e47)))
(let ((e95 (>= e28 e11)))
(let ((e96 (distinct e6 e34)))
(let ((e97 (>= e33 v1)))
(let ((e98 (< e10 e42)))
(let ((e99 (<= e33 e25)))
(let ((e100 (= e7 v1)))
(let ((e101 (>= e42 e32)))
(let ((e102 (> e7 e38)))
(let ((e103 (<= e45 v1)))
(let ((e104 (distinct e37 e6)))
(let ((e105 (> e36 e27)))
(let ((e106 (<= e33 e47)))
(let ((e107 (> e33 e35)))
(let ((e108 (> e9 e7)))
(let ((e109 (distinct e28 e25)))
(let ((e110 (> e40 e34)))
(let ((e111 (> e7 e46)))
(let ((e112 (distinct v1 e6)))
(let ((e113 (>= e25 e27)))
(let ((e114 (= e31 e27)))
(let ((e115 (> e25 v1)))
(let ((e116 (= e30 v0)))
(let ((e117 (<= e26 e40)))
(let ((e118 (<= e42 e40)))
(let ((e119 (distinct e41 e36)))
(let ((e120 (> e27 e30)))
(let ((e121 (distinct e43 e11)))
(let ((e122 (xor e95 e116)))
(let ((e123 (= e12 e79)))
(let ((e124 (and e111 e58)))
(let ((e125 (ite e120 e77 e18)))
(let ((e126 (ite e72 e122 e57)))
(let ((e127 (xor e13 e52)))
(let ((e128 (and e112 e112)))
(let ((e129 (ite e53 e78 e61)))
(let ((e130 (ite e70 e115 e93)))
(let ((e131 (ite e17 e125 e75)))
(let ((e132 (and e90 e56)))
(let ((e133 (and e85 e104)))
(let ((e134 (=> e23 e121)))
(let ((e135 (=> e14 e118)))
(let ((e136 (and e130 e94)))
(let ((e137 (or e86 e84)))
(let ((e138 (ite e76 e99 e114)))
(let ((e139 (or e62 e19)))
(let ((e140 (= e69 e80)))
(let ((e141 (=> e128 e21)))
(let ((e142 (or e59 e54)))
(let ((e143 (not e66)))
(let ((e144 (or e140 e73)))
(let ((e145 (=> e96 e143)))
(let ((e146 (or e100 e106)))
(let ((e147 (and e123 e88)))
(let ((e148 (=> e97 e101)))
(let ((e149 (=> e134 e144)))
(let ((e150 (= e127 e141)))
(let ((e151 (or e129 e22)))
(let ((e152 (xor e55 e15)))
(let ((e153 (or e124 e110)))
(let ((e154 (not e65)))
(let ((e155 (not e154)))
(let ((e156 (xor e149 e64)))
(let ((e157 (or e83 e87)))
(let ((e158 (not e67)))
(let ((e159 (ite e150 e147 e126)))
(let ((e160 (xor e24 e74)))
(let ((e161 (or e158 e160)))
(let ((e162 (or e146 e105)))
(let ((e163 (not e63)))
(let ((e164 (or e49 e131)))
(let ((e165 (ite e155 e137 e60)))
(let ((e166 (=> e48 e164)))
(let ((e167 (=> e136 e148)))
(let ((e168 (= e135 e153)))
(let ((e169 (= e145 e107)))
(let ((e170 (=> e156 e108)))
(let ((e171 (or e119 e170)))
(let ((e172 (= e162 e68)))
(let ((e173 (ite e133 e82 e172)))
(let ((e174 (or e102 e166)))
(let ((e175 (or e139 e113)))
(let ((e176 (and e175 e169)))
(let ((e177 (ite e91 e92 e163)))
(let ((e178 (and e20 e142)))
(let ((e179 (xor e176 e138)))
(let ((e180 (ite e98 e157 e168)))
(let ((e181 (ite e71 e159 e89)))
(let ((e182 (not e171)))
(let ((e183 (and e167 e152)))
(let ((e184 (= e182 e81)))
(let ((e185 (=> e183 e178)))
(let ((e186 (and e109 e185)))
(let ((e187 (ite e177 e179 e132)))
(let ((e188 (xor e180 e174)))
(let ((e189 (=> e165 e151)))
(let ((e190 (and e187 e188)))
(let ((e191 (xor e184 e50)))
(let ((e192 (xor e181 e189)))
(let ((e193 (ite e173 e190 e190)))
(let ((e194 (not e16)))
(let ((e195 (=> e161 e186)))
(let ((e196 (ite e103 e192 e51)))
(let ((e197 (not e191)))
(let ((e198 (= e193 e195)))
(let ((e199 (=> e197 e117)))
(let ((e200 (or e199 e194)))
(let ((e201 (not e196)))
(let ((e202 (not e200)))
(let ((e203 (and e198 e202)))
(let ((e204 (=> e203 e203)))
(let ((e205 (not e201)))
(let ((e206 (not e205)))
(let ((e207 (or e204 e204)))
(let ((e208 (xor e207 e207)))
(let ((e209 (and e206 e206)))
(let ((e210 (= e208 e208)))
(let ((e211 (and e209 e210)))
e211
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
