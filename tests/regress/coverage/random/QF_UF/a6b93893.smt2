(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_UF)
(declare-sort S0 0)
(declare-fun v0 () S0)
(declare-fun v1 () S0)
(declare-fun f0 ( S0) S0)
(declare-fun f1 ( S0 S0) S0)
(declare-fun f2 ( S0 S0) S0)
(declare-fun f3 ( S0 S0) S0)
(declare-fun f4 ( S0 S0) S0)
(declare-fun p0 ( S0 S0) Bool)
(declare-fun p1 ( S0 S0 S0) Bool)
(declare-fun p2 ( S0 S0 S0) Bool)
(declare-fun p3 ( S0 S0) Bool)
(declare-fun p4 ( S0 S0) Bool)
(assert (let ((e2 (f3 v0 v1)))
(let ((e3 (f2 v0 v0)))
(let ((e4 (f4 v1 e2)))
(let ((e5 (f4 v1 v0)))
(let ((e6 (f0 e2)))
(let ((e7 (f4 e4 e6)))
(let ((e8 (f3 e4 e6)))
(let ((e9 (f2 e5 e6)))
(let ((e10 (f2 e3 e5)))
(let ((e11 (f1 e3 e8)))
(let ((e12 (distinct v1 e11)))
(let ((e13 (= v0 e11)))
(let ((e14 (distinct e4 v0)))
(let ((e15 (= e8 v0)))
(let ((e16 (distinct e7 e2)))
(let ((e17 (p3 e5 e4)))
(let ((e18 (= e3 e8)))
(let ((e19 (= e9 v1)))
(let ((e20 (p2 e8 e11 e4)))
(let ((e21 (= e6 e10)))
(let ((e22 (p2 v1 e10 e2)))
(let ((e23 (p4 e4 v0)))
(let ((e24 (p0 e4 v0)))
(let ((e25 (p3 v0 e9)))
(let ((e26 (p1 e3 e10 e5)))
(let ((e27 (ite e19 e4 e10)))
(let ((e28 (ite e21 e5 e6)))
(let ((e29 (ite e18 e8 e11)))
(let ((e30 (ite e19 v0 e10)))
(let ((e31 (ite e24 e5 v0)))
(let ((e32 (ite e12 e2 e11)))
(let ((e33 (ite e23 v1 e2)))
(let ((e34 (ite e20 e28 e5)))
(let ((e35 (ite e15 e9 e34)))
(let ((e36 (ite e26 e3 e11)))
(let ((e37 (ite e17 e7 v0)))
(let ((e38 (ite e22 e34 v1)))
(let ((e39 (ite e12 e9 e4)))
(let ((e40 (ite e17 e2 e7)))
(let ((e41 (ite e12 e3 e28)))
(let ((e42 (ite e14 v0 e8)))
(let ((e43 (ite e15 e2 e33)))
(let ((e44 (ite e19 e7 e8)))
(let ((e45 (ite e23 e33 e9)))
(let ((e46 (ite e17 e35 e40)))
(let ((e47 (ite e25 e3 e32)))
(let ((e48 (ite e16 e8 e27)))
(let ((e49 (ite e18 e3 e30)))
(let ((e50 (ite e16 e6 e49)))
(let ((e51 (ite e13 e47 e41)))
(let ((e52 (p4 e7 e32)))
(let ((e53 (distinct e47 e32)))
(let ((e54 (p1 e47 e5 e10)))
(let ((e55 (= e2 e34)))
(let ((e56 (distinct e30 e38)))
(let ((e57 (p0 e27 e47)))
(let ((e58 (= e50 e44)))
(let ((e59 (= e35 e38)))
(let ((e60 (p3 e28 e36)))
(let ((e61 (distinct e8 e44)))
(let ((e62 (p3 e44 e27)))
(let ((e63 (p0 e47 e39)))
(let ((e64 (= e49 e28)))
(let ((e65 (p3 e33 e11)))
(let ((e66 (p0 e45 e40)))
(let ((e67 (distinct e31 e8)))
(let ((e68 (p1 e6 e39 v1)))
(let ((e69 (p1 e45 e50 e36)))
(let ((e70 (= e29 e45)))
(let ((e71 (p0 e28 v1)))
(let ((e72 (p1 e46 e49 e38)))
(let ((e73 (distinct e41 e49)))
(let ((e74 (distinct e4 e42)))
(let ((e75 (distinct e37 e48)))
(let ((e76 (p1 e38 e37 v0)))
(let ((e77 (distinct e3 v1)))
(let ((e78 (p2 e28 e36 e7)))
(let ((e79 (distinct e51 e51)))
(let ((e80 (p1 e34 e28 e38)))
(let ((e81 (p0 e32 e3)))
(let ((e82 (p2 e42 e37 e45)))
(let ((e83 (= e9 e36)))
(let ((e84 (p3 e48 e29)))
(let ((e85 (= e43 e28)))
(let ((e86 (ite e54 e24 e13)))
(let ((e87 (= e14 e57)))
(let ((e88 (xor e17 e68)))
(let ((e89 (= e81 e73)))
(let ((e90 (= e74 e79)))
(let ((e91 (not e77)))
(let ((e92 (not e20)))
(let ((e93 (ite e72 e18 e58)))
(let ((e94 (=> e93 e52)))
(let ((e95 (xor e76 e65)))
(let ((e96 (= e78 e91)))
(let ((e97 (and e82 e95)))
(let ((e98 (ite e62 e53 e55)))
(let ((e99 (not e87)))
(let ((e100 (xor e67 e59)))
(let ((e101 (= e12 e63)))
(let ((e102 (not e25)))
(let ((e103 (not e94)))
(let ((e104 (=> e15 e92)))
(let ((e105 (=> e97 e70)))
(let ((e106 (=> e103 e69)))
(let ((e107 (ite e104 e85 e64)))
(let ((e108 (and e75 e84)))
(let ((e109 (xor e99 e100)))
(let ((e110 (ite e71 e98 e21)))
(let ((e111 (or e19 e101)))
(let ((e112 (not e107)))
(let ((e113 (= e108 e56)))
(let ((e114 (or e102 e66)))
(let ((e115 (= e114 e90)))
(let ((e116 (xor e109 e105)))
(let ((e117 (or e111 e86)))
(let ((e118 (or e116 e110)))
(let ((e119 (xor e106 e118)))
(let ((e120 (not e112)))
(let ((e121 (=> e23 e96)))
(let ((e122 (and e60 e115)))
(let ((e123 (=> e22 e117)))
(let ((e124 (=> e120 e122)))
(let ((e125 (and e16 e89)))
(let ((e126 (and e83 e124)))
(let ((e127 (not e126)))
(let ((e128 (not e113)))
(let ((e129 (=> e125 e88)))
(let ((e130 (=> e123 e26)))
(let ((e131 (=> e129 e129)))
(let ((e132 (= e130 e127)))
(let ((e133 (ite e132 e119 e121)))
(let ((e134 (and e128 e61)))
(let ((e135 (xor e133 e131)))
(let ((e136 (or e80 e135)))
(let ((e137 (and e136 e136)))
(let ((e138 (and e137 e134)))
e138
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
