(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_UF)
(declare-sort S0 0)
(declare-sort S1 0)
(declare-fun v0 () S0)
(declare-fun v1 () S0)
(declare-fun v2 () S0)
(declare-fun v3 () S1)
(declare-fun v4 () S1)
(declare-fun v5 () S1)
(declare-fun f0 ( S1 S0) S0)
(declare-fun f1 ( S1 S0) S0)
(declare-fun f2 ( S1 S0 S0) S1)
(declare-fun f3 ( S1) S1)
(declare-fun f4 ( S0 S1 S0) S1)
(declare-fun p0 ( S0 S1) Bool)
(declare-fun p1 ( S0) Bool)
(declare-fun p2 ( S1 S1 S1) Bool)
(declare-fun p3 ( S1) Bool)
(declare-fun p4 ( S0 S1 S1) Bool)
(assert (let ((e6 (f2 v3 v2 v0)))
(let ((e7 (f0 v5 v0)))
(let ((e8 (f2 v4 v1 v1)))
(let ((e9 (f3 e6)))
(let ((e10 (f3 e6)))
(let ((e11 (f2 e6 v0 v2)))
(let ((e12 (f2 e8 v1 v0)))
(let ((e13 (f1 e8 v2)))
(let ((e14 (f0 e10 v1)))
(let ((e15 (f0 e8 v1)))
(let ((e16 (f0 e6 v0)))
(let ((e17 (f2 e11 v0 e7)))
(let ((e18 (f3 e10)))
(let ((e19 (f3 e18)))
(let ((e20 (f4 v1 e11 e16)))
(let ((e21 (distinct v0 e15)))
(let ((e22 (p3 e17)))
(let ((e23 (p2 e17 e9 e19)))
(let ((e24 (p0 e13 e18)))
(let ((e25 (distinct v2 v1)))
(let ((e26 (= e8 e10)))
(let ((e27 (= v4 e6)))
(let ((e28 (p4 e13 e20 e9)))
(let ((e29 (p1 e14)))
(let ((e30 (p0 v0 v4)))
(let ((e31 (= e16 e16)))
(let ((e32 (distinct e12 e19)))
(let ((e33 (p4 v0 e17 v3)))
(let ((e34 (= v5 e9)))
(let ((e35 (distinct e7 v0)))
(let ((e36 (p0 v1 e20)))
(let ((e37 (= e11 e9)))
(let ((e38 (ite e32 v0 e7)))
(let ((e39 (ite e30 e6 v4)))
(let ((e40 (ite e35 e17 e20)))
(let ((e41 (ite e23 e15 e13)))
(let ((e42 (ite e22 e14 e7)))
(let ((e43 (ite e35 e19 e19)))
(let ((e44 (ite e28 v1 e14)))
(let ((e45 (ite e29 v4 e39)))
(let ((e46 (ite e22 v2 e41)))
(let ((e47 (ite e26 v4 e6)))
(let ((e48 (ite e37 e18 e9)))
(let ((e49 (ite e24 e16 e15)))
(let ((e50 (ite e34 e12 e40)))
(let ((e51 (ite e27 e10 e17)))
(let ((e52 (ite e36 e7 e42)))
(let ((e53 (ite e31 v3 e10)))
(let ((e54 (ite e25 e8 e6)))
(let ((e55 (ite e33 e11 e19)))
(let ((e56 (ite e21 e16 e49)))
(let ((e57 (ite e21 e49 e16)))
(let ((e58 (ite e31 v5 e18)))
(let ((e59 (p4 e46 v5 e17)))
(let ((e60 (p3 e18)))
(let ((e61 (p1 e16)))
(let ((e62 (p2 e9 e39 e18)))
(let ((e63 (p2 e20 e40 e17)))
(let ((e64 (distinct e58 v4)))
(let ((e65 (p3 e51)))
(let ((e66 (p0 e14 e47)))
(let ((e67 (p3 e8)))
(let ((e68 (distinct e53 e45)))
(let ((e69 (distinct v1 e46)))
(let ((e70 (p0 v1 e11)))
(let ((e71 (p2 e47 e9 e48)))
(let ((e72 (p1 e15)))
(let ((e73 (distinct v0 e49)))
(let ((e74 (p2 e9 e9 e39)))
(let ((e75 (= e10 e18)))
(let ((e76 (= e6 v4)))
(let ((e77 (= e44 e16)))
(let ((e78 (= e13 v0)))
(let ((e79 (distinct e52 e42)))
(let ((e80 (= e54 e54)))
(let ((e81 (= e55 e39)))
(let ((e82 (p3 e8)))
(let ((e83 (= v2 e56)))
(let ((e84 (distinct v3 e48)))
(let ((e85 (= e50 e18)))
(let ((e86 (p3 e10)))
(let ((e87 (= e41 e41)))
(let ((e88 (= e57 e46)))
(let ((e89 (= e43 v4)))
(let ((e90 (distinct e38 e56)))
(let ((e91 (= e7 v2)))
(let ((e92 (p2 e47 e8 e40)))
(let ((e93 (= e12 v5)))
(let ((e94 (p4 e15 e18 e51)))
(let ((e95 (p3 e54)))
(let ((e96 (p1 e13)))
(let ((e97 (p1 e14)))
(let ((e98 (= e19 e39)))
(let ((e99 (=> e22 e67)))
(let ((e100 (ite e90 e85 e96)))
(let ((e101 (not e70)))
(let ((e102 (ite e68 e98 e98)))
(let ((e103 (ite e29 e73 e30)))
(let ((e104 (or e102 e62)))
(let ((e105 (ite e80 e32 e97)))
(let ((e106 (and e21 e75)))
(let ((e107 (xor e92 e93)))
(let ((e108 (or e66 e79)))
(let ((e109 (ite e91 e64 e103)))
(let ((e110 (and e33 e72)))
(let ((e111 (not e94)))
(let ((e112 (=> e106 e100)))
(let ((e113 (= e60 e83)))
(let ((e114 (and e77 e82)))
(let ((e115 (=> e110 e27)))
(let ((e116 (and e104 e109)))
(let ((e117 (xor e25 e112)))
(let ((e118 (= e87 e113)))
(let ((e119 (xor e95 e88)))
(let ((e120 (=> e107 e119)))
(let ((e121 (not e120)))
(let ((e122 (xor e101 e99)))
(let ((e123 (=> e35 e118)))
(let ((e124 (ite e71 e59 e114)))
(let ((e125 (not e115)))
(let ((e126 (and e105 e108)))
(let ((e127 (xor e34 e122)))
(let ((e128 (and e81 e69)))
(let ((e129 (not e78)))
(let ((e130 (and e117 e86)))
(let ((e131 (or e84 e129)))
(let ((e132 (ite e125 e24 e123)))
(let ((e133 (= e36 e61)))
(let ((e134 (=> e65 e116)))
(let ((e135 (ite e127 e127 e130)))
(let ((e136 (or e37 e37)))
(let ((e137 (= e134 e124)))
(let ((e138 (ite e133 e135 e74)))
(let ((e139 (xor e28 e63)))
(let ((e140 (= e89 e89)))
(let ((e141 (= e138 e31)))
(let ((e142 (or e76 e140)))
(let ((e143 (ite e126 e128 e141)))
(let ((e144 (or e132 e23)))
(let ((e145 (ite e111 e144 e121)))
(let ((e146 (xor e26 e143)))
(let ((e147 (or e137 e139)))
(let ((e148 (xor e146 e146)))
(let ((e149 (ite e148 e145 e136)))
(let ((e150 (= e142 e142)))
(let ((e151 (=> e150 e149)))
(let ((e152 (=> e147 e151)))
(let ((e153 (or e152 e131)))
e153
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
