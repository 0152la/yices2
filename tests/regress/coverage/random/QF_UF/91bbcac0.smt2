(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_UF)
(declare-sort S0 0)
(declare-sort S1 0)
(declare-fun v0 () S0)
(declare-fun v1 () S0)
(declare-fun v2 () S0)
(declare-fun v3 () S1)
(declare-fun v4 () S1)
(declare-fun v5 () S1)
(declare-fun f0 ( S0) S1)
(declare-fun f1 ( S0 S1 S0) S1)
(declare-fun f2 ( S0 S0) S1)
(declare-fun f3 ( S0) S1)
(declare-fun f4 ( S0 S0) S1)
(declare-fun f5 ( S0) S1)
(declare-fun f6 ( S0) S1)
(declare-fun f7 ( S0 S0 S0) S1)
(declare-fun f8 ( S1 S1) S0)
(declare-fun p0 ( S1 S0) Bool)
(declare-fun p1 ( S0 S1 S0) Bool)
(declare-fun p2 ( S1 S1) Bool)
(declare-fun p3 ( S0 S0 S0) Bool)
(declare-fun p4 ( S1 S1) Bool)
(assert (let ((e6 (f1 v0 v3 v0)))
(let ((e7 (f1 v2 e6 v0)))
(let ((e8 (f0 v1)))
(let ((e9 (f8 v4 v4)))
(let ((e10 (f0 e9)))
(let ((e11 (f1 v0 v5 e9)))
(let ((e12 (f4 v2 e9)))
(let ((e13 (f7 e9 v2 e9)))
(let ((e14 (f4 e9 v1)))
(let ((e15 (f5 v1)))
(let ((e16 (f5 v1)))
(let ((e17 (f8 v3 e12)))
(let ((e18 (f5 e9)))
(let ((e19 (f6 v2)))
(let ((e20 (f3 v2)))
(let ((e21 (f5 v1)))
(let ((e22 (f0 v2)))
(let ((e23 (f2 v0 v2)))
(let ((e24 (= e16 e8)))
(let ((e25 (= v5 e10)))
(let ((e26 (= v3 e20)))
(let ((e27 (= e7 e11)))
(let ((e28 (distinct e22 e14)))
(let ((e29 (p1 v1 e15 v1)))
(let ((e30 (p4 e12 e10)))
(let ((e31 (= e6 e6)))
(let ((e32 (p0 e16 v2)))
(let ((e33 (distinct v0 e9)))
(let ((e34 (= e18 v5)))
(let ((e35 (= v4 e11)))
(let ((e36 (p4 e22 e6)))
(let ((e37 (= e19 e16)))
(let ((e38 (= e23 e23)))
(let ((e39 (p0 e23 e9)))
(let ((e40 (= e17 v2)))
(let ((e41 (p0 e21 e17)))
(let ((e42 (p2 e12 e11)))
(let ((e43 (p4 e12 e14)))
(let ((e44 (distinct e13 e23)))
(let ((e45 (p3 e17 v0 v1)))
(let ((e46 (ite e35 e8 e20)))
(let ((e47 (ite e37 v4 v4)))
(let ((e48 (ite e30 e12 e23)))
(let ((e49 (ite e41 e19 v3)))
(let ((e50 (ite e28 e10 v5)))
(let ((e51 (ite e40 e17 e9)))
(let ((e52 (ite e31 v1 e17)))
(let ((e53 (ite e45 e21 v4)))
(let ((e54 (ite e36 v5 e50)))
(let ((e55 (ite e24 e15 e22)))
(let ((e56 (ite e44 e17 v1)))
(let ((e57 (ite e32 v4 e18)))
(let ((e58 (ite e43 v2 e52)))
(let ((e59 (ite e37 e8 e12)))
(let ((e60 (ite e41 e16 e13)))
(let ((e61 (ite e42 e7 e15)))
(let ((e62 (ite e38 e11 v5)))
(let ((e63 (ite e42 e14 e61)))
(let ((e64 (ite e34 e6 e50)))
(let ((e65 (ite e26 e16 e61)))
(let ((e66 (ite e33 v0 e9)))
(let ((e67 (ite e39 e17 e51)))
(let ((e68 (ite e44 e20 e10)))
(let ((e69 (ite e29 e20 e12)))
(let ((e70 (ite e25 e67 v1)))
(let ((e71 (ite e27 e70 e51)))
(let ((e72 (p2 e7 e16)))
(let ((e73 (p0 e12 e51)))
(let ((e74 (= e17 e71)))
(let ((e75 (p4 e12 e65)))
(let ((e76 (= e10 e57)))
(let ((e77 (p0 e10 e70)))
(let ((e78 (distinct e18 e13)))
(let ((e79 (p1 e56 e69 e58)))
(let ((e80 (p2 e6 e12)))
(let ((e81 (p4 e61 e63)))
(let ((e82 (distinct e64 e55)))
(let ((e83 (distinct e66 e51)))
(let ((e84 (p0 e63 e70)))
(let ((e85 (distinct v5 e50)))
(let ((e86 (distinct e48 e59)))
(let ((e87 (= e49 e63)))
(let ((e88 (p1 e52 e55 e9)))
(let ((e89 (distinct e46 e60)))
(let ((e90 (p4 e53 e8)))
(let ((e91 (p2 e69 e68)))
(let ((e92 (distinct v1 e51)))
(let ((e93 (p1 e17 v4 v1)))
(let ((e94 (p1 e58 e48 e51)))
(let ((e95 (p3 e67 e17 v0)))
(let ((e96 (= e23 e6)))
(let ((e97 (= e15 e55)))
(let ((e98 (p3 e51 v0 e51)))
(let ((e99 (p2 e59 e13)))
(let ((e100 (p2 e15 v5)))
(let ((e101 (p2 e15 e21)))
(let ((e102 (= e14 e12)))
(let ((e103 (p4 e23 e47)))
(let ((e104 (distinct e20 e57)))
(let ((e105 (distinct e22 e13)))
(let ((e106 (= v2 e71)))
(let ((e107 (p2 e61 v5)))
(let ((e108 (p0 e6 v1)))
(let ((e109 (p1 e58 e7 e17)))
(let ((e110 (distinct e19 e18)))
(let ((e111 (p2 v5 e15)))
(let ((e112 (p0 e7 v2)))
(let ((e113 (p2 e8 e13)))
(let ((e114 (p4 e60 e12)))
(let ((e115 (distinct e62 e61)))
(let ((e116 (p1 e9 e60 e67)))
(let ((e117 (= v3 e60)))
(let ((e118 (= e11 e57)))
(let ((e119 (distinct e54 e47)))
(let ((e120 (ite e38 e101 e111)))
(let ((e121 (xor e41 e85)))
(let ((e122 (ite e84 e92 e27)))
(let ((e123 (=> e115 e96)))
(let ((e124 (=> e117 e100)))
(let ((e125 (and e36 e80)))
(let ((e126 (xor e93 e125)))
(let ((e127 (=> e97 e90)))
(let ((e128 (=> e113 e124)))
(let ((e129 (= e98 e114)))
(let ((e130 (ite e79 e24 e24)))
(let ((e131 (=> e91 e25)))
(let ((e132 (=> e31 e99)))
(let ((e133 (=> e94 e32)))
(let ((e134 (not e43)))
(let ((e135 (ite e122 e112 e121)))
(let ((e136 (not e105)))
(let ((e137 (=> e42 e83)))
(let ((e138 (and e30 e40)))
(let ((e139 (= e44 e44)))
(let ((e140 (= e34 e127)))
(let ((e141 (or e132 e128)))
(let ((e142 (or e108 e129)))
(let ((e143 (or e106 e86)))
(let ((e144 (not e87)))
(let ((e145 (or e28 e39)))
(let ((e146 (and e76 e142)))
(let ((e147 (or e110 e81)))
(let ((e148 (and e45 e88)))
(let ((e149 (not e137)))
(let ((e150 (ite e26 e140 e139)))
(let ((e151 (or e133 e145)))
(let ((e152 (not e131)))
(let ((e153 (or e126 e150)))
(let ((e154 (=> e75 e95)))
(let ((e155 (=> e72 e104)))
(let ((e156 (=> e144 e107)))
(let ((e157 (ite e135 e33 e33)))
(let ((e158 (=> e152 e157)))
(let ((e159 (not e118)))
(let ((e160 (or e109 e123)))
(let ((e161 (or e74 e148)))
(let ((e162 (= e141 e102)))
(let ((e163 (= e134 e147)))
(let ((e164 (ite e163 e153 e136)))
(let ((e165 (and e160 e160)))
(let ((e166 (xor e143 e73)))
(let ((e167 (=> e78 e29)))
(let ((e168 (xor e35 e158)))
(let ((e169 (= e154 e165)))
(let ((e170 (= e103 e138)))
(let ((e171 (xor e168 e156)))
(let ((e172 (xor e120 e146)))
(let ((e173 (ite e116 e37 e161)))
(let ((e174 (=> e173 e169)))
(let ((e175 (xor e166 e130)))
(let ((e176 (=> e82 e155)))
(let ((e177 (= e119 e151)))
(let ((e178 (xor e175 e171)))
(let ((e179 (not e176)))
(let ((e180 (or e167 e89)))
(let ((e181 (not e170)))
(let ((e182 (and e179 e159)))
(let ((e183 (and e177 e162)))
(let ((e184 (=> e164 e180)))
(let ((e185 (and e174 e182)))
(let ((e186 (= e149 e77)))
(let ((e187 (or e178 e186)))
(let ((e188 (or e187 e172)))
(let ((e189 (and e183 e181)))
(let ((e190 (not e189)))
(let ((e191 (not e190)))
(let ((e192 (or e188 e184)))
(let ((e193 (and e192 e192)))
(let ((e194 (= e193 e191)))
(let ((e195 (=> e194 e194)))
(let ((e196 (=> e195 e185)))
e196
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "/dev/null")
(get-model)
