#!/bin/sh

#
# Script to install Yices on Mac OS X
#
# Usage
# -----
#     ./install-yices [OPTIONS] <location>
# 
# This script must be called from the toplevel Yices directory.
#
# If <location> is a directory, then Yices is installed as follows:
#     binaries      in <location>/bin
#     libraries     in <location>/lib
#     include files in <location>/include
#
# If no <location> is given, Yices will be installed in /usr/local.
#
# If <location> is the special keyword 'here', or if it is equal to
# the current directory, then no files are copied but symbolic links
# are created in ./lib
#
# OPTIONS:
#  -h: print a short help message
#  -g GROUP: set the group of copied files
#  -o OWNER: set the owner of copied files (requires root privilege)
#
# The options -g and -o are passed to /usr/bin/install.  See man
# install for details.
#
#

usage="Usage: $0 [OPTIONS] <directory>
    or $0 [OPTIONS] here

Installs Yices in the location specified by <directory> as follows:
   binaries      in <directory>/bin
   libraries     in <directory>/lib
   include files in <directory>/include

If the second form is used, nothing is copied but symbolic links
are created in ./lib.

OPTIONS:
  -h: print this message
  -g GROUP: set the group of copied files
  -o OWNER: set the owner of copied files (requires root privilege)
"

failure="
Installation failed
"


#
# Tools we need: change this if they are not found
#
mkdir="/bin/mkdir"
link="/bin/ln"
install="/usr/bin/install"
install_name_tool="/usr/bin/install_name_tool"

#
# Default options
#
opt_group=
opt_owner=


#
# Process the command line
#
location_given=no
group_given=no
owner_given=no
location=

while test -n "$1"; do
  case $1 in
    -h) echo "$usage"
        exit 0;;

    -g) if test -n "$2" ; then 
          if test "$group_given" = "yes" ; then
             echo "Ignoring option -g $2; group already set to $opt_group"
          else
            group_given="yes"
            opt_group=$2
          fi
          shift
          shift
        else
          echo "Option $1 requires an argument. Try $0 -h for help"
          exit 1
        fi
        continue;;

    -o) if test -n "$2" ; then
          if test "$owner_given" = "yes" ; then
             echo "Ignoring option -o $2; owner already set to $opt_owner"
          else
            owner_given="yes"
            opt_owner=$2
          fi
          shift
          shift
        else
          echo "Option $1 requires an argument. Try $0 -h for help"
          exit 1
        fi
        continue;;

    -*) echo "Unknown option $1. Try $0 -h for help"
        exit 1;;

    *) if test "$location_given" = "yes" ; then
         echo "Please specify a single location. Try $0 -h for help"
         exit 1
       fi
       location_given="yes"
       location=$1
       shift
       continue;;
  esac
done

#
# Set install dir and local_install flag
#
local_install="no"
install_dir="/usr/local"

if test -n "$location" ; then
  case $location in

    here) 
      local_install="yes"
      install_dir="$local_dir"
      break;;

    /*) 
      install_dir="$location"
      if test "$location" -ef "$local_dir" ; then 
         local_install="yes"
      fi
      break;;

    *) 
      echo "The directory must be givan as an absolute path"
      exit 1;;

  esac
fi



#
# Check that the current directory contains bin lib include
# subdirectory and get the dynamic libraries name.
#
local_dir=`pwd`
if test -d "$local_dir/bin" -a -d "$local_dir/lib" -a "$local_dir/include" ; then

   dylib_file=`ls lib/libyices.2.dylib | sed -e 's+lib/++' 2>/dev/null`

   case "$dylib_file" in
     libyices.2.dylib)
       break;;

     *) echo "$failure"
        echo "Can't find the Yices library libyices.2.dylib in ./lib"
        echo "Make sure $0 is run from the toplevel Yices directory"
	echo ""
        exit 1;;

    esac

else
   echo "$failure"
   echo "Can't find the ./bin ./lib or ./include directory"
   echo "Make sure $0 is run from the toplevel Yices directory"
   echo ""
   exit 1
fi

#
# Check that the tools exist and are executable
#
if test "$local_install" = "no" ; then
   if test ! \( -f "$mkdir" -a -x "$mkdir" \) ; then
     echo "$failure"   
     echo "Can't find the $mkdir command"
     echo ""
     exit 1
   fi

   if test ! \( -f "$install" -a -x "$install" \) ; then
     echo "$failure"
     echo "Can't find the $install command"
     echo ""
     exit 1
   fi
fi

if test "$install_dir" != "/usr/local" ; then
  if test ! \( -f "$install_name_tool" -a -x "$install_name_tool" \) ; then
     echo "$failure"
     echo "Can't find the $install_name_tool command"
     echo ""
     exit 1
  fi
fi

if test ! \( -f "$link" -a -x "$link" \) ; then
  echo "$failure"
  echo "Can't find the $link command"
  echo ""
  exit 1
fi

#
# Install directories
#
bindir="$install_dir/bin"
libdir="$install_dir/lib"
includedir="$install_dir/include"

#
# Options to /usr/bin/install
#
if test -n "$opt_group" ; then
  install="$install -g $opt_group"
fi

if test -n "$opt_owner" ; then
  install="$install -o $opt_owner"
fi

#
# For non-local install: 
# create the install directories then copy the files
#
if test "$local_install" = "no" ; then
  if     $install -d "$install_dir" "$bindir" "$libdir" "$includedir" \
      && $install -m 664 ./include/*.h "$includedir" \
      && $install ./bin/* "$bindir" \
      && $install ./lib/* "$libdir" ; then
    echo "Copied files in $install_dir"
  else 
    echo "$failure"
    echo "Could not create install directories or copy files"
    echo "Check that you have the right permissions"
    echo "or try sudo $0"
    echo ""
    exit 1
  fi
fi

#
# If the install_dir is not /usr/local, fix the
# library's intall name.
#
if test "$install_dir" != "/usr/local" ; then
   full_path_dylib="$libdir/$dylib_file"
   if "$install_name_tool" -id "$full_path_dylib" "$full_path_dylib" ; then
     echo "Changed library's install name to $full_path_dylib"
   else 
     echo "$failure" 
     echo "Could not fix the install name"
     echo ""
     exit 1
   fi
fi


#
# Create symbolic link to lib/liyices.2.dylib
#
if  "$link" -sf "$dylib_file" "$libdir/libyices.dylib" ; then
   echo "Created libyices.dylib"
else
   echo "$failure"
   echo "Could not create symbolic link libyices.dylib"
   echo ""
   exit 1
fi

echo "Installation complete"
