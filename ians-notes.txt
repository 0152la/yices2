autoconf
./configure --enable-mcsat --enable-thread-safety
make





If configured with the switch '--enable-thread-safety' the yices2 library will be thread
safe in the following restricted sense: as long as the creation and manipulation of
contexts, and models is restricted to a single thread, there should be no races.
In particular separate threads that each create their own contexts can manipulate and check
them without impeding other thread's progress.
It is also recommended that the user themselves should syncronize any access to any global
ctx_config_t or param_t objects.





mcsat notes.


a context_t has a mcsat slot initialized by

static void create_mcsat(context_t *ctx);  in context.c

(there are matching delete_mcsat and reset_mcsat)

the entry point from context.c to the mcsat_solver appears to be

mcsat_assert_formulas

the entry point from context_solver.c to the mcsat_solver appears to be

mcsat_solve.


N.B. dangerous to move mcsat_assert_formulas out of context_process_assertions because of the jump_buf


mcsat_solver_s has a slot for the yices2 context as well as term and type tables. Are these the global ones?
They come directly from the yices2 context.

it all takes place in mcsat_construct in mcsat/solver.c



2nd attempt in mt-master-mcsat branch.
